consumes:
- application/json
definitions:
  AddEntitlementCreditParams:
    properties:
      creditAmountIncrement:
        description: The amount to be added to the credit amount.
        type: number
      entitlementID:
        type: string
      entitlementTermID:
        description: This is optional. If it is empty, the credit will be added to
          the default entitlement term of the entitlement.
        type: string
      organizationID:
        type: string
    required:
    - creditAmountIncrement
    - entitlementID
    - organizationID
    type: object
  AddEntitlementCreditResponse:
    properties:
      creditAmountIncrement:
        description: The amount to be added to the credit amount.
        type: number
      entitlementID:
        type: string
      entitlementTermID:
        type: string
      newCreditAmount:
        description: The new credit amount after the increment.
        type: number
      organizationID:
        type: string
    type: object
  AdyenBuyer:
    properties:
      settings:
        additionalProperties: true
        description: Settings store key-value pairs such as paymentMethodId,syncWithProvider,providerPaymentMethods.
        type: object
      shopperId:
        description: The shopperId on the adyen platform corresponding to the buyer.
        type: string
    type: object
  AggregatedMeteringUsageRecord:
    properties:
      amount:
        description: Amount calculated by billable dimension's price model, this is
          only used for report billable usage records to marketplace.
        type: number
      billableMetricAggregationType:
        $ref: '#/definitions/BillableMetricAggregationType'
      billableMetricInfo:
        $ref: '#/definitions/BillableMetricInfo'
      groupBysExpression:
        description: GroupBysExpression is the string expression of array of group
          bys.
        type: string
      key:
        description: Key is the unique identifier of a billable metric.
        type: string
      name:
        description: |-
          Name is the name of a billable metric.
          Optional, it is only for display purpose.
        type: string
      quantity:
        description: Value is the value of a billable metric.
        type: number
      uniqueCountAggregationResult:
        allOf:
        - $ref: '#/definitions/UniqueCountAggregationResult'
        description: Unique count metric aggregate result.
    type: object
  AlibabaMarketplaceProduct:
    properties:
      AuditFailMsg:
        type: string
      AuditStatus:
        type: string
      AuditTime:
        type: integer
      Code:
        type: string
      Description:
        type: string
      FrontCategoryId:
        type: integer
      GmtCreated:
        type: integer
      GmtModified:
        type: integer
      Name:
        type: string
      PicUrl:
        type: string
      ProductExtras:
        $ref: '#/definitions/AlibabaMarketplaceProductExtras'
      ProductSkus:
        $ref: '#/definitions/AlibabaMarketplaceProductSkus'
      RequestId:
        type: string
      Score:
        type: number
      ShopInfo:
        $ref: '#/definitions/AlibabaMarketplaceProductShopInfo'
      ShortDescription:
        type: string
      Status:
        type: string
      SupplierPk:
        type: integer
      Type:
        type: string
      UseCount:
        type: integer
    type: object
  AlibabaMarketplaceProductExtra:
    properties:
      Key:
        type: string
      Label:
        type: string
      Order:
        type: integer
      Type:
        type: string
      Values: {}
    type: object
  AlibabaMarketplaceProductExtras:
    properties:
      ProductExtra:
        items:
          $ref: '#/definitions/AlibabaMarketplaceProductExtra'
        type: array
    type: object
  AlibabaMarketplaceProductShopInfo:
    properties:
      Emails:
        type: string
      Id:
        type: integer
      Name:
        type: string
      Telephones:
        $ref: '#/definitions/AlibabaMarketplaceProductShopInfoTelephones'
      WangWangs:
        $ref: '#/definitions/AlibabaMarketplaceProductShopInfoWangWangs'
    type: object
  AlibabaMarketplaceProductShopInfoTelephones:
    properties:
      Telephone:
        items:
          type: string
        type: array
    type: object
  AlibabaMarketplaceProductShopInfoWangWang:
    properties:
      Remark:
        type: string
      UserName:
        type: string
    type: object
  AlibabaMarketplaceProductShopInfoWangWangs:
    properties:
      WangWang:
        items:
          $ref: '#/definitions/AlibabaMarketplaceProductShopInfoWangWang'
        type: array
    type: object
  AlibabaMarketplaceProductSku:
    properties:
      ChargeType:
        description: POSTPAY or PREPAY
        type: string
      Code:
        type: string
      Constraints:
        type: string
      Hidden:
        type: boolean
      Modules:
        $ref: '#/definitions/AlibabaMarketplaceProductSkuModules'
      Name:
        type: string
      OrderPeriods:
        $ref: '#/definitions/AlibabaMarketplaceProductSkuOrderPeriods'
    type: object
  AlibabaMarketplaceProductSkuModule:
    properties:
      Code:
        type: string
      Id:
        type: string
      Name:
        type: string
      Properties:
        $ref: '#/definitions/AlibabaMarketplaceProductSkuModuleProperties'
    type: object
  AlibabaMarketplaceProductSkuModuleProperties:
    properties:
      Property:
        items:
          $ref: '#/definitions/AlibabaMarketplaceProductSkuModuleProperty'
        type: array
    type: object
  AlibabaMarketplaceProductSkuModuleProperty:
    properties:
      DisplayUnit:
        type: string
      Key:
        type: string
      Name:
        type: string
      PropertyValues:
        $ref: '#/definitions/AlibabaMarketplaceProductSkuModulePropertyValues'
      showType:
        type: string
    type: object
  AlibabaMarketplaceProductSkuModulePropertyValue:
    properties:
      DisplayName:
        type: string
      Max:
        type: string
      Min:
        type: string
      Remark:
        type: string
      Step:
        type: string
      Type:
        type: string
      Value:
        type: string
    type: object
  AlibabaMarketplaceProductSkuModulePropertyValues:
    properties:
      PropertyValue:
        items:
          $ref: '#/definitions/AlibabaMarketplaceProductSkuModulePropertyValue'
        type: array
    type: object
  AlibabaMarketplaceProductSkuModules:
    properties:
      Module:
        items:
          $ref: '#/definitions/AlibabaMarketplaceProductSkuModule'
        type: array
    type: object
  AlibabaMarketplaceProductSkuOrderPeriod:
    properties:
      Name:
        type: string
      PeriodType:
        type: string
    type: object
  AlibabaMarketplaceProductSkuOrderPeriods:
    properties:
      OrderPeriod:
        items:
          $ref: '#/definitions/AlibabaMarketplaceProductSkuOrderPeriod'
        type: array
    type: object
  AlibabaMarketplaceProductSkus:
    properties:
      ProductSku:
        items:
          $ref: '#/definitions/AlibabaMarketplaceProductSku'
        type: array
    type: object
  ApiClientAccessToken:
    properties:
      access_token:
        type: string
      expires_in:
        default: 3600
        description: The token expires in 1 hour
        type: integer
      expires_on:
        description: The UTC timestamp when the token expires
        format: date-time
        type: string
      token_type:
        default: Bearer
        type: string
    type: object
  AuditingEventPriority:
    enum:
    - ""
    - LOW
    - MEDIUM
    - HIGH
    - CRITICAL
    type: string
    x-enum-varnames:
    - AuditingEventPriority_UNKNOWN
    - AuditingEventPriority_LOW
    - AuditingEventPriority_MEDIUM
    - AuditingEventPriority_HIGH
    - AuditingEventPriority_CRITICAL
  AwsAccountIdentifier:
    properties:
      awsAccountID:
        description: The AWS Account ID of the buyer in AWS Marketplace
        type: string
      awsCustomerID:
        description: The AWS Customer ID of the buyer in AWS Marketplace
        type: string
      dataFeedAccountID:
        description: The Account ID in AWS Marketplace Data Feed service
        type: string
    type: object
  AwsChannelPartner:
    properties:
      id:
        description: The AWS Account ID of the Channel Partner
        type: string
      name:
        description: The name of the Channel Partner
        type: string
    type: object
  AwsMarketplaceAgreementStatus:
    enum:
    - ACTIVE
    - ARCHIVED
    - CANCELLED
    - EXPIRED
    - RENEWED
    - REPLACED
    - ROLLED_BACK
    - SUPERSEDED
    - TERMINATED
    type: string
    x-enum-varnames:
    - AwsMarketplaceAgreementStatus_ACTIVE
    - AwsMarketplaceAgreementStatus_ARCHIVED
    - AwsMarketplaceAgreementStatus_CANCELLED
    - AwsMarketplaceAgreementStatus_EXPIRED
    - AwsMarketplaceAgreementStatus_RENEWED
    - AwsMarketplaceAgreementStatus_REPLACED
    - AwsMarketplaceAgreementStatus_ROLLED_BACK
    - AwsMarketplaceAgreementStatus_SUPERSEDED
    - AwsMarketplaceAgreementStatus_TERMINATED
  AwsMarketplaceAgreementV2:
    properties:
      acceptanceTime:
        format: date-time
        type: string
      agreementId:
        description: AWS Marketplace Agreement Id
        type: string
      agreementType:
        type: string
      buyerAccountId:
        description: The AWS Account Id of the buyer in AWS Marketplace
        type: string
      endTime:
        format: date-time
        type: string
      offerId:
        description: AWS Marketplace Offer Id
        type: string
      productId:
        description: AWS Marketplace Product Id
        type: string
      productType:
        type: string
      sellerAccountId:
        description: The AWS Account Id of the seller in AWS Marketplace
        type: string
      startTime:
        format: date-time
        type: string
      status:
        $ref: '#/definitions/AwsMarketplaceAgreementStatus'
    type: object
  AwsMarketplaceBuyerAccount:
    properties:
      AwsAccountId:
        type: string
    type: object
  AwsMarketplaceCatalogLegalTermDocument:
    properties:
      Type:
        $ref: '#/definitions/AwsMarketplaceCatalogLegalTermDocumentType'
      Url:
        description: |-
          A URL to the legal document for buyers to read.
          Required when Type is one of the following [CustomEula, CustomDsa].
        type: string
      Version:
        description: |-
          Version of standard contracts provided by AWS Marketplace.
          Required when Type is one of the following [StandardEula, StandardDsa].
          The version of StandardEula is "2022-07-14". The version of StandardDsa is "2019-12-12".
        type: string
    type: object
  AwsMarketplaceCatalogLegalTermDocumentType:
    enum:
    - CustomEula
    - CustomDsa
    - StandardEula
    - StandardDsa
    - StandardResellerContract
    - CustomResellerContract
    type: string
    x-enum-varnames:
    - AwsMarketplaceCatalogLegalTermDocumentType_CustomEula
    - AwsMarketplaceCatalogLegalTermDocumentType_CustomDsa
    - AwsMarketplaceCatalogLegalTermDocumentType_StandardEula
    - AwsMarketplaceCatalogLegalTermDocumentType_StandardDsa
    - AwsMarketplaceCatalogLegalTermDocumentType_StandardResellerContract
    - AwsMarketplaceCatalogLegalTermDocumentType_CustomResellerContract
  AwsMarketplaceCatalogPricingModel:
    enum:
    - Contract
    - Usage
    - Byol
    - Free
    - Unknown
    type: string
    x-enum-varnames:
    - AwsMarketplaceCatalogPricingModel_Contract
    - AwsMarketplaceCatalogPricingModel_Usage
    - AwsMarketplaceCatalogPricingModel_Byol
    - AwsMarketplaceCatalogPricingModel_Free
    - AwsMarketplaceCatalogPricingModel_Unknown
  AwsMarketplaceCatalogPricingTermRateCard:
    properties:
      Constraints:
        allOf:
        - $ref: '#/definitions/AwsMarketplaceCatalogPricingTermRateCardConstraints'
        description: |-
          Defines constraints on how the term can be configured by acceptors.
          Applicable only to ConfigurableUpfrontPricingTerm.
      RateCard:
        items:
          $ref: '#/definitions/AwsMarketplaceCatalogPricingTermRateCardItem'
        type: array
      Selector:
        allOf:
        - $ref: '#/definitions/AwsMarketplaceCatalogPricingTermRateCardSelector'
        description: |-
          Selector is used to differentiate between the mutually exclusive rate cards in the same pricing term,
          to be selected by the buyer. Applicable only to ConfigurableUpfrontPricingTerm.
    type: object
  AwsMarketplaceCatalogPricingTermRateCardConstraints:
    properties:
      MultipleDimensionSelection:
        description: |-
          Determines if buyers are allowed to select multiple dimensions in the rate card.
          Possible values are "Allowed" and "Disallowed". Default value is "Allowed".
        type: string
      QuantityConfiguration:
        description: |-
          Determines if acceptors are allowed to configure quantity for each dimension in rate card.
          Possible values are "Allowed" and "Disallowed". Default value is "Allowed".
        type: string
    type: object
  AwsMarketplaceCatalogPricingTermRateCardItem:
    properties:
      Description:
        type: string
      DimensionKey:
        type: string
      DisplayName:
        description: These fields are used for aws discovery API result.
        type: string
      Price:
        type: string
      Quantity:
        type: string
      Unit:
        type: string
    type: object
  AwsMarketplaceCatalogPricingTermRateCardSelector:
    properties:
      Type:
        description: At this time, only "Duration" is supported.
        type: string
      Value:
        description: ISO 8601 duration format. For example, "P1M" represents one month.
        type: string
    type: object
  AwsMarketplaceCppoDiscountType:
    enum:
    - DISCOUNT_PERCENT
    - CUSTOM_PRICE
    - CUSTOM_PRICE_WITH_FPS
    type: string
    x-enum-varnames:
    - AwsMarketplaceCppoDiscountType_DISCOUNT_PERCENT
    - AwsMarketplaceCppoDiscountType_CUSTOM_PRICE
    - AwsMarketplaceCppoDiscountType_FLEXIBLE_PAYMENT_SCHEDULE
  AwsMarketplaceCppoDurationType:
    enum:
    - SPECIFIC_DATES
    - ONE_TIME
    - NO_SET_TIME
    type: string
    x-enum-varnames:
    - AwsMarketplaceCppoDurationType_SPECIFIC_DATES
    - AwsMarketplaceCppoDurationType_ONE_TIME
    - AwsMarketplaceCppoDurationType_NO_SET_TIME
  AwsMarketplaceCppoOpportunity:
    properties:
      CreatedDate:
        type: string
      Description:
        type: string
      Dimensions:
        items:
          $ref: '#/definitions/AwsProductDimension'
        type: array
      ManufacturerAccountId:
        type: string
      ManufacturerLegalName:
        type: string
      Name:
        type: string
      OfferDetails:
        $ref: '#/definitions/AwsMarketplaceCppoOpportunityOfferDetails'
      PreExistingBuyerAgreement:
        $ref: '#/definitions/AwsMarketplacePreExistingAgreement'
      ProductId:
        type: string
      ProductName:
        type: string
      Rules:
        items:
          $ref: '#/definitions/AwsMarketplaceCppoOpportunityRule'
        type: array
      Status:
        enum:
        - Active
        - Restricted
        - Complete
        type: string
      Terms:
        items:
          $ref: '#/definitions/AwsMarketplaceCppoOpportunityTerm'
        type: array
      discountType:
        allOf:
        - $ref: '#/definitions/AwsMarketplaceCppoDiscountType'
        description: |-
          The following fields are not from aws catalog API, only used for cppo_out offer create.
          They shouldn't be read in other places because they will absent when fetch opportunity from aws catalog API.
      opportunityDurationType:
        $ref: '#/definitions/AwsMarketplaceCppoDurationType'
      opportunityId:
        type: string
      partnerId:
        type: string
    type: object
  AwsMarketplaceCppoOpportunityNegativeTargeting:
    properties:
      CountryCodes:
        items:
          type: string
        type: array
    type: object
  AwsMarketplaceCppoOpportunityOfferDetails:
    properties:
      OfferCreatedCount:
        type: integer
      OfferExtendedStatus:
        type: string
    type: object
  AwsMarketplaceCppoOpportunityPaymentSchedule:
    properties:
      ChargeAmount:
        type: string
      ChargeDate:
        format: date-time
        type: string
    type: object
  AwsMarketplaceCppoOpportunityPositiveTargeting:
    properties:
      BuyerAccounts:
        description: List of AWS account IDs that are allowed to subscribe to the
          offer.
        items:
          $ref: '#/definitions/AwsMarketplaceBuyerAccount'
        type: array
      CountryCodes:
        description: |-
          List as option for allowing targeting based on country.
          If the intention isn’t to target the offer to a country, this field should be omitted.
          If it’s present, the list must contain at least one country code.
          Each element in this list should be a valid 2-letter country code, using this format: ISO 3166-1 alpha-2.
        items:
          type: string
        type: array
    type: object
  AwsMarketplaceCppoOpportunityRule:
    properties:
      AvailabilityEndDate:
        type: string
      Id:
        description: Output only.
        type: string
      NegativeTargeting:
        allOf:
        - $ref: '#/definitions/AwsMarketplaceCppoOpportunityNegativeTargeting'
        description: Negative targeting defines the criteria which any customer's
          profile should fulfill to be restricted to access the offer.
      OffersMaxQuantity:
        type: integer
      PositiveTargeting:
        allOf:
        - $ref: '#/definitions/AwsMarketplaceCppoOpportunityPositiveTargeting'
        description: Positive targeting defines the criteria which any buyer's profile
          should fulfill in order to be allowed to access the offer.
      ResellerAccountId:
        type: string
      ResellerLegalName:
        type: string
      Type:
        $ref: '#/definitions/AwsMarketplaceCppoOpportunityRuleType'
      Usage:
        type: string
    type: object
  AwsMarketplaceCppoOpportunityRuleType:
    enum:
    - AvailabilityRule
    - PartnerTargetingRule
    - TargetingRule
    - TaxConfigurationRule
    type: string
    x-enum-varnames:
    - AwsMarketplaceCppoOpportunityRuleType_AvailabilityRule
    - AwsMarketplaceCppoOpportunityRuleType_PartnerTargetingRule
    - AwsMarketplaceCppoOpportunityRuleType_TargetingRule
    - AwsMarketplaceCppoOpportunityRuleType_TaxConfigurationRule
  AwsMarketplaceCppoOpportunityTerm:
    properties:
      CurrencyCode:
        type: string
      Documents:
        items:
          $ref: '#/definitions/AwsMarketplaceCatalogLegalTermDocument'
        type: array
      Duration:
        description: ISO 8601 duration format. For example, "P12M" represents 12 months.
        type: string
      Grants:
        items:
          $ref: '#/definitions/AwsMarketplaceCppoOpportunityUpfrontPriceGrant'
        type: array
      Id:
        type: string
      MaximumAgreementStartDate:
        type: string
      PositiveTargeting:
        $ref: '#/definitions/AwsMarketplaceCppoOpportunityPositiveTargeting'
      Price:
        description: For ResaleFixedUpfrontPricingTerm
        type: string
      RateCards:
        items:
          $ref: '#/definitions/AwsMarketplaceCatalogPricingTermRateCard'
        type: array
      Schedule:
        description: For ResalePaymentScheduleTerm
        items:
          $ref: '#/definitions/AwsMarketplaceCppoOpportunityPaymentSchedule'
        type: array
      Type:
        $ref: '#/definitions/AwsMarketplaceCppoOpportunityTermType'
    type: object
  AwsMarketplaceCppoOpportunityTermType:
    enum:
    - BuyerTargetingTerm
    - UpdateAvailability
    - BuyerValidityTerm
    - BuyerLegalTerm
    - ResaleLegalTerm
    - ResaleUsageBasedPricingTerm
    - ResaleConfigurableUpfrontPricingTerm
    - ResaleFixedUpfrontPricingTerm
    - ResalePaymentScheduleTerm
    type: string
    x-enum-varnames:
    - AwsMarketplaceCppoOpportunityTermType_BuyerTargetingTerm
    - AwsMarketplaceCppoOpportunityTermType_UpdateAvailability
    - AwsMarketplaceCppoOpportunityTermType_BuyerValidityTerm
    - AwsMarketplaceCppoOpportunityTermType_BuyerLegalTerm
    - AwsMarketplaceCppoOpportunityTermType_ResaleLegalTerm
    - AwsMarketplaceCppoOpportunityTermType_ResaleUsageBasedPricingTerm
    - AwsMarketplaceCppoOpportunityTermType_ResaleConfigurableUpfrontPricingTerm
    - AwsMarketplaceCppoOpportunityTermType_ResaleFixedUpfrontPricingTerm
    - AwsMarketplaceCppoOpportunityTermType_ResalePaymentScheduleTerm
  AwsMarketplaceCppoOpportunityUpfrontPriceGrant:
    properties:
      DimensionKey:
        type: string
      MaxQuantity:
        type: integer
    type: object
  AwsMarketplaceEventBridgeEventAccount:
    properties:
      accountId:
        type: string
      name:
        type: string
    type: object
  AwsMarketplaceEventBridgeEventDetail:
    properties:
      catalog:
        type: string
      eventCategory:
        type: string
      eventID:
        type: string
      eventName:
        type: string
      eventSource:
        type: string
      eventType:
        type: string
      eventVersion:
        type: string
      managementEvent:
        type: boolean
      manufacturer:
        allOf:
        - $ref: '#/definitions/AwsMarketplaceEventBridgeEventAccount'
        description: The seller/ISV's AWS Account Id.
      offer:
        $ref: '#/definitions/AwsMarketplaceEventBridgeEventOffer'
      product:
        $ref: '#/definitions/AwsMarketplaceEventBridgeEventProduct'
      requestID:
        type: string
      requestParameters: {}
      responseElements: {}
      sellerOfRecord:
        allOf:
        - $ref: '#/definitions/AwsMarketplaceEventBridgeEventAccount'
        description: |-
          For private offer created by a channel partner, this is the channel partner's AWS Account Id.
          For private offer created by a seller/ISV, this is the seller/ISV's AWS Account Id.
      targetedBuyerAccountIds:
        items:
          type: string
        type: array
    type: object
  AwsMarketplaceEventBridgeEventOffer:
    properties:
      arn:
        type: string
      expirationDate:
        format: date-time
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  AwsMarketplaceEventBridgeEventProduct:
    properties:
      arn:
        type: string
      id:
        type: string
      title:
        type: string
    type: object
  AwsMarketplaceMeteringBatchMeterUsageInput:
    properties:
      ProductCode:
        description: |-
          Product code is used to uniquely identify a product in AWS Marketplace. The
          product code should be the same as the one used during the publishing of a new product.
        type: string
      UsageRecords:
        description: The set of UsageRecords to submit. BatchMeterUsage accepts up
          to 25 UsageRecords at a time.
        items:
          $ref: '#/definitions/AwsMarketplaceMeteringUsageRecord'
        type: array
    type: object
  AwsMarketplaceMeteringTag:
    properties:
      Key:
        description: |-
          One part of a key-value pair that makes up a tag. A key is a label that acts
          like a category for the specific tag values.
        type: string
      Value:
        description: |-
          One part of a key-value pair that makes up a tag. A value acts as a descriptor
          within a tag category (key). The value can be empty or null.
        type: string
    type: object
  AwsMarketplaceMeteringUsageAllocation:
    properties:
      AllocatedUsageQuantity:
        description: The total quantity allocated to this bucket of usage.
        type: integer
      Tags:
        description: |-
          The set of tags that define the bucket of usage. For the bucket of items with no
          tags, this parameter can be left out.
        items:
          $ref: '#/definitions/AwsMarketplaceMeteringTag'
        type: array
    type: object
  AwsMarketplaceMeteringUsageRecord:
    properties:
      CustomerIdentifier:
        description: |-
          The CustomerIdentifier is obtained through the ResolveCustomer operation and
          represents an individual buyer in your application.
        type: string
      Dimension:
        description: |-
          During the process of registering a product on AWS Marketplace, dimensions are
          specified. These represent different units of value in your application.
        type: string
      Quantity:
        description: |-
          The quantity of usage consumed by the customer for the given dimension and time.
          Defaults to 0 if not specified.
        type: integer
      Timestamp:
        description: |-
          Timestamp, in UTC, for which the usage is being reported. Your application can
          meter usage for up to one hour in the past. Make sure the timestamp value is not
          before the start of the software usage.
        format: date-time
        type: string
      UsageAllocations:
        description: |-
          The set of UsageAllocations to submit. The sum of all UsageAllocation quantities
          must equal the Quantity of the UsageRecord.
        items:
          $ref: '#/definitions/AwsMarketplaceMeteringUsageAllocation'
        type: array
    type: object
  AwsMarketplacePreExistingAgreement:
    properties:
      AcquisitionChannel:
        allOf:
        - $ref: '#/definitions/AwsRenewalOfferType'
        description: |-
          Indicates if the existing agreement was signed outside AWS Marketplace or within AWS Marketplace.
          one of values ["External", "AwsMarketplace"]
      PricingModel:
        allOf:
        - $ref: '#/definitions/AwsMarketplaceCatalogPricingModel'
        description: Indicates which pricing model the existing agreement uses.
    type: object
  AwsMarketplaceProductVisibility:
    enum:
    - Limited
    - Public
    - Restricted
    - Unavailable
    - Draft
    type: string
    x-enum-varnames:
    - AwsMarketplaceProductVisibility_Limited
    - AwsMarketplaceProductVisibility_Public
    - AwsMarketplaceProductVisibility_Restricted
    - AwsMarketplaceProductVisibility_Unavailable
    - AwsMarketplaceProductVisibility_Draft
  AwsProduct:
    properties:
      Description:
        $ref: '#/definitions/AwsProductDescription'
      Dimensions:
        items:
          $ref: '#/definitions/AwsProductDimension'
        type: array
      PromotionalResources:
        $ref: '#/definitions/AwsProductPromotionalResources'
      Repositories:
        items:
          $ref: '#/definitions/AwsProductRepository'
        type: array
      SignatureVerificationKeys:
        items:
          $ref: '#/definitions/AwsProductSignatureVerificationKey'
        type: array
      SupportInformation:
        $ref: '#/definitions/AwsProductSupportInformation'
      Versions:
        items:
          $ref: '#/definitions/AwsProductVersion'
        type: array
      dataFeedProductId:
        description: The product Id in AWS Marketplace Data Feed Service.
        type: string
      productId:
        description: AWS Product ID
        type: string
    type: object
  AwsProductAdditionalResource:
    properties:
      Text:
        type: string
      Type:
        type: string
      Url:
        type: string
    type: object
  AwsProductDeliveryOption:
    properties:
      AmiAlias:
        description: Exclusive Fields For AWS AMI Product
        type: string
      FulfillmentUrl:
        description: Exclusive Fields For AWS SaaS Product
        type: string
      Id:
        type: string
      Recommendations: {}
      ShortDescription:
        type: string
      SourceId:
        type: string
      Title:
        description: Exclusive Fields For AWS Container Product
        type: string
      Type:
        type: string
      Visibility:
        type: string
    type: object
  AwsProductDescription:
    properties:
      AssociatedProducts: {}
      Categories:
        items:
          type: string
        type: array
      EuW8Submitted:
        type: boolean
      Highlights:
        items:
          type: string
        type: array
      LongDescription:
        type: string
      Manufacturer:
        type: string
      ProductCode:
        type: string
      ProductTitle:
        type: string
      Registered:
        type: boolean
      SearchKeywords:
        items:
          type: string
        type: array
      ShortDescription:
        type: string
      Sku:
        type: string
      UsW9Submitted:
        type: boolean
      Visibility:
        $ref: '#/definitions/AwsMarketplaceProductVisibility'
    type: object
  AwsProductDimension:
    properties:
      Description:
        type: string
      Key:
        type: string
      Length:
        description: |-
          The term length for the commit amount, such as 6 months, or 1 year.
          The length is used together with timeUnit.
          Length and TimeUnit are only used for commit dimension.
        type: integer
      Name:
        type: string
      Rate:
        description: |-
          Below three fields are only used for pass data when create or update product's public offer pricing.
          Rate is only used for update public offer, becasue rate will be set as 0.01 when create new product.
        type: number
      TimeUnit:
        $ref: '#/definitions/TimeUnit'
      Types:
        items:
          type: string
        type: array
      Unit:
        type: string
    type: object
  AwsProductPromotionalResources:
    properties:
      AdditionalResources:
        items:
          $ref: '#/definitions/AwsProductAdditionalResource'
        type: array
      LogoUrl:
        type: string
      VideoUrls:
        description: Currently, AWS only support 1 url in the array.
        items:
          type: string
        type: array
    type: object
  AwsProductRepository:
    properties:
      Type:
        type: string
      Url:
        type: string
    type: object
  AwsProductSignatureVerificationKey:
    properties:
      PublicKey:
        type: string
      PublicKeyVersion:
        type: integer
      Status:
        type: string
    type: object
  AwsProductSupportInformation:
    properties:
      Description:
        type: string
    type: object
  AwsProductVersion:
    properties:
      CreationDate:
        format: date-time
        type: string
      DeliveryOptions:
        items:
          $ref: '#/definitions/AwsProductDeliveryOption'
        type: array
      Id:
        type: string
      ReleaseNotes:
        type: string
      VersionTitle:
        type: string
    type: object
  AwsRenewalOfferType:
    enum:
    - ""
    - External
    - AwsMarketplace
    type: string
    x-enum-varnames:
    - AwsRenewalOfferType_Unknown
    - AwsRenewalOfferType_External
    - AwsRenewalOfferType_AwsMarketplace
  AwsSnsSubscription:
    properties:
      Endpoint:
        type: string
      Protocol:
        type: string
      Status:
        $ref: '#/definitions/AwsSnsSubscriptionStatus'
      SubscriptionArn:
        type: string
      TopicArn:
        type: string
    type: object
  AwsSnsSubscriptionStatus:
    enum:
    - UNKNOWN
    - CONFIRMED
    - PENDING_CONFIRMATION
    type: string
    x-enum-varnames:
    - AwsSnsSubscriptionStatus_UNKNOWN
    - AwsSnsSubscriptionStatus_CONFIRMED
    - AwsSnsSubscriptionStatus_PENDING_CONFIRMATION
  AzureADIdentifier:
    properties:
      billingAccountId:
        description: Azure Billing Account ID
        type: string
      customerId:
        type: string
      emailId:
        description: Email address
        type: string
      firstName:
        type: string
      lastName:
        type: string
      licenseType:
        description: Azure License Type
        type: string
      objectId:
        type: string
      puid:
        description: ID of the user, used as External ID of suger IdentityBuyer.
        type: string
      tenantId:
        type: string
    type: object
  AzureAudience:
    properties:
      description:
        type: string
      id:
        type: string
    type: object
  AzureCommercialMarketplaceSetup:
    properties:
      $schema:
        type: string
      accessUrl:
        description: in patern of "^(http|https)://"
        type: string
      callToAction:
        enum:
        - free
        - freeTrial
        - contactMe
        type: string
      id:
        description: In format of "commercial-marketplace-setup/setup-durable-id"
        type: string
      product:
        description: Product resource name, in format of "product/product-durable-id"
        type: string
      requireLicenseForInstall:
        type: boolean
      resourceName:
        type: string
      sellThroughMicrosoft:
        type: boolean
      useMicrosoftLicenseManagementService:
        description: If true, only per_user pricing model is allowed.
        type: boolean
      validations:
        items:
          $ref: '#/definitions/AzureMarketplaceValidation'
        type: array
    type: object
  AzureGovernmentCertification:
    properties:
      title:
        type: string
      uri:
        type: string
      validationResults:
        items:
          $ref: '#/definitions/AzureValidationResult'
        type: array
    type: object
  AzureIncludedBaseQuantity:
    properties:
      isInfinite:
        type: boolean
      quantity:
        type: number
      recurringUnit:
        enum:
        - Monthly
        - Annual
        type: string
    type: object
  AzureListingContact:
    properties:
      email:
        type: string
      name:
        type: string
      phone:
        type: string
      type:
        enum:
        - CustomerSupport
        - Engineering
        - ChannelManager
        type: string
      uri:
        type: string
    type: object
  AzureListingUri:
    properties:
      displayText:
        type: string
      subtype:
        type: string
      type:
        type: string
      uri:
        type: string
    type: object
  AzureLocalizedDateTime:
    properties:
      dateTimeInUtc:
        type: string
      localizePerMarket:
        type: boolean
    type: object
  AzureLocalizedTimeRange:
    properties:
      endAt:
        $ref: '#/definitions/AzureLocalizedDateTime'
      startAt:
        $ref: '#/definitions/AzureLocalizedDateTime'
    type: object
  AzureMarket:
    properties:
      friendlyName:
        type: string
      marketCode:
        description: ISO Country Code
        type: string
    type: object
  AzureMarketState:
    properties:
      marketCode:
        description: ISO Country Code
        type: string
      state:
        enum:
        - Disabled
        - Enabled
        - StopSelling
        - Terminated
        type: string
    type: object
  AzureMarketplaceContact:
    properties:
      email:
        type: string
      name:
        type: string
      phone:
        type: string
      url:
        description: in patern of "^(http|https)://"
        type: string
    type: object
  AzureMarketplaceCustomAmendment:
    properties:
      tenants:
        $ref: '#/definitions/AzureMarketplaceCustomAmendmentTenant'
      terms:
        type: string
    type: object
  AzureMarketplaceCustomAmendmentTenant:
    properties:
      manualEntries:
        items:
          $ref: '#/definitions/AzureMarketplaceCustomAmendmentTenantManualEntry'
        type: array
    type: object
  AzureMarketplaceCustomAmendmentTenantManualEntry:
    properties:
      description:
        type: string
      id:
        type: string
    type: object
  AzureMarketplaceCustomerLeads:
    properties:
      $schema:
        type: string
      blobLeadConfiguration: {}
      dynamicsLeadConfiguration: {}
      emailLeadConfiguration: {}
      httpsEndpointLeadConfiguration: {}
      id:
        type: string
      leadDestination:
        enum:
        - none
        - blob
        - dynamics
        - email
        - httpsEndpoint
        - marketo
        - salesforce
        - table
        type: string
      marketoLeadConfiguration: {}
      product:
        type: string
      resourceName:
        type: string
      salesforceLeadConfiguration: {}
      tableLeadConfiguration: {}
      validations:
        items:
          $ref: '#/definitions/AzureMarketplaceValidation'
        type: array
    type: object
  AzureMarketplaceDeprecationSchedule:
    properties:
      $schema:
        type: string
      alternative:
        $ref: '#/definitions/AzureMarketplaceDeprecationScheduleAlternative'
      date:
        description: 'format: date-time'
        type: string
      dateOffset:
        description: 'format: duration'
        type: string
      reason:
        enum:
        - criticalSecurityIssue
        - endOfSupport
        - other
        type: string
    type: object
  AzureMarketplaceDeprecationScheduleAlternative:
    properties:
      plan: {}
      product: {}
    type: object
  AzureMarketplaceGeneralLink:
    properties:
      displayText:
        type: string
      link:
        description: in patern of "^(http|https)://"
        type: string
    type: object
  AzureMarketplaceGovernmentCertification:
    properties:
      link:
        description: in patern of "^(http|https)://"
        type: string
      name:
        type: string
    type: object
  AzureMarketplaceIdentity:
    properties:
      externalId:
        type: string
    type: object
  AzureMarketplaceListing:
    properties:
      $schema:
        type: string
      cloudSolutionProviderContact:
        $ref: '#/definitions/AzureMarketplaceContact'
      cloudSolutionProviderMarketingMaterials:
        type: string
      description:
        type: string
      engineeringContact:
        $ref: '#/definitions/AzureMarketplaceContact'
      generalLinks:
        items:
          $ref: '#/definitions/AzureMarketplaceGeneralLink'
        type: array
      gettingStartedInstructions:
        type: string
      gloabalSupportWebsite:
        type: string
      governmentSupportWebsite:
        type: string
      id:
        type: string
      kind:
        enum:
        - azureSaaS
        - azureVM
        - xbox360NonBackCompat
        type: string
      languageId:
        type: string
      lifecycleState:
        allOf:
        - $ref: '#/definitions/AzureMarketplaceResourceLifecycleState'
        description: Default value is "generallyAvailable".
      privacyPolicyLink:
        type: string
      product:
        description: Product resource name, in format of "product/product-durable-id"
        type: string
      resourceName:
        type: string
      searchKeywords:
        items:
          type: string
        type: array
      searchResultSummary:
        type: string
      shortDescription:
        type: string
      supportContact:
        $ref: '#/definitions/AzureMarketplaceContact'
      title:
        description: Max string length is 200.
        type: string
      validations:
        items:
          $ref: '#/definitions/AzureMarketplaceValidation'
        type: array
    type: object
  AzureMarketplaceListingAsset:
    properties:
      $schema:
        type: string
      description:
        type: string
      displayOrder:
        description: 'minimum: 0'
        type: integer
      fileName:
        type: string
      friendlyName:
        type: string
      id:
        type: string
      kind:
        enum:
        - azure
        type: string
      languageId:
        description: Max string length is 10.
        type: string
      lifecycleState:
        allOf:
        - $ref: '#/definitions/AzureMarketplaceResourceLifecycleState'
        description: Default value is "generallyAvailable".
      listing:
        type: string
      product:
        description: Product resource name, in format of "product/product-durable-id"
        type: string
      resourceName:
        type: string
      type:
        $ref: '#/definitions/AzureMarketplaceListingAssetType'
      url:
        description: 'pattern: "^https?://"'
        type: string
      validations:
        items:
          $ref: '#/definitions/AzureMarketplaceValidation'
        type: array
    type: object
  AzureMarketplaceListingAssetType:
    enum:
    - azureLogoSmall
    - azureLogoMedium
    - azureLogoLarge
    - azureLogoWide
    - azureLogoScreenshot
    - azureLogoHero
    - pdfDocument
    type: string
    x-enum-varnames:
    - AzureMarketplaceListingAssetType_AzureLogoSmall
    - AzureMarketplaceListingAssetType_AzureLogoMedium
    - AzureMarketplaceListingAssetType_AzureLogoLarge
    - AzureMarketplaceListingAssetType_AzureLogoWide
    - AzureMarketplaceListingAssetType_AzureLogoScreenshot
    - AzureMarketplaceListingAssetType_AzureLogoHero
    - AzureMarketplaceListingAssetType_PdfDocument
  AzureMarketplaceMeteringBatchUsageEvent:
    properties:
      request:
        items:
          $ref: '#/definitions/AzureMarketplaceMeteringUsageEvent'
        type: array
    type: object
  AzureMarketplaceMeteringUsageEvent:
    properties:
      dimension:
        description: Dimension identifier
        type: string
      effectiveStartTime:
        description: Time in UTC when the usage event occurred
        type: string
      planId:
        description: Plan associated with the purchased offer
        type: string
      quantity:
        description: Number of units consumed
        type: number
      resourceId:
        description: |-
          subscriptionId property value for SaaS offer subscriptions; resourceUsageId property on the managed application resource
          for managed application offers. For managed applications, only use one of
          resourceId or resourceUri.
        type: string
      resourceUri:
        description: Resource URI for the managed app. Used with managed applications.
          Only use resourceUri or resourceId, but never both.
        type: string
    type: object
  AzureMarketplaceOfferPricingType:
    enum:
    - ""
    - editExistingOfferPricingOnly
    - saasNewCustomizedPlans
    - vmSoftwareReservations
    type: string
    x-enum-varnames:
    - AzureMarketplaceOfferPricingType_Unknown
    - AzureMarketplaceOfferPricingType_EditExistingOfferPricingOnly
    - AzureMarketplaceOfferPricingType_SaasNewCustomizedPlans
    - AzureMarketplaceOfferPricingType_VmSoftwareReservations
  AzureMarketplacePlan:
    properties:
      $schema:
        type: string
      alias:
        type: string
      azureGovernmentCertifications:
        items:
          $ref: '#/definitions/AzureMarketplaceGovernmentCertification'
        type: array
      azureRegions:
        description: enums:[azureGlobal,azureGovernment,azureGermany,azureChina]
        items:
          type: string
        type: array
      deprecationSchedule:
        $ref: '#/definitions/AzureMarketplaceDeprecationSchedule'
      displayRank:
        description: default 2147483647
        type: integer
      id:
        description: in format of "plan/product-durable-id/plan-durable-id"
        type: string
      identity:
        $ref: '#/definitions/AzureMarketplaceIdentity'
      lifecycleState:
        $ref: '#/definitions/AzureMarketplaceResourceLifecycleState'
      product:
        description: in format of "product/product-durable-id"
        type: string
      resourceName:
        type: string
      subtype:
        description: 'Specifies the plan type (AzureApplication-type products only)
          see: https://go.microsoft.com/fwlink/?linkid=2106322'
        enum:
        - managedApplication
        - solutionTemplate
        type: string
      validations:
        items:
          $ref: '#/definitions/AzureMarketplaceValidation'
        type: array
    type: object
  AzureMarketplacePlanListing:
    properties:
      $schema:
        type: string
      description:
        type: string
      id:
        type: string
      kind:
        enum:
        - azureVM-plan
        - azureSaaS-plan
        - azureCoreVM-plan
        - azureContainer-plan
        type: string
      languageId:
        type: string
      lifecycleState:
        $ref: '#/definitions/AzureMarketplaceResourceLifecycleState'
      name:
        type: string
      plan:
        type: string
      product:
        type: string
      resourceName:
        type: string
      summary:
        type: string
      validations:
        items:
          $ref: '#/definitions/AzureMarketplaceValidation'
        type: array
    type: object
  AzureMarketplacePlanResource:
    properties:
      plan:
        $ref: '#/definitions/AzureMarketplacePlan'
      planListing:
        $ref: '#/definitions/AzureMarketplacePlanListing'
      priceAndAvailabilityPlan:
        $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityPlan'
    type: object
  AzureMarketplacePreviewAudience:
    properties:
      description:
        type: string
      resourceId:
        type: string
      type:
        enum:
        - subscription
        type: string
    type: object
  AzureMarketplacePrice:
    properties:
      currency:
        description: ISO 4217 currency code
        type: string
      markets:
        description: PriceAndAvailability audience definition
        items:
          type: string
        type: array
      price:
        description: Prices   interface{} `json:"prices,omitempty"`
        type: number
    type: object
  AzureMarketplacePriceAndAvailabilityAudience:
    properties:
      id:
        type: string
      label:
        type: string
      type:
        enum:
        - none
        - subscription
        - ea
        - msdn
        - tenant
        - email
        type: string
    type: object
  AzureMarketplacePriceAndAvailabilityCorePrice:
    properties:
      price:
        type: number
      priceInputOption:
        enum:
        - free
        - flat
        - perCore
        - perCoreSize
        - perMarketAndCoreSize
        type: string
      pricePerCore:
        type: number
      pricePerCoreSize: {}
      prices:
        items:
          $ref: '#/definitions/AzureMarketplacePrice'
        type: array
    type: object
  AzureMarketplacePriceAndAvailabilityCustomMeter:
    properties:
      $schema:
        type: string
      customMeters:
        additionalProperties:
          $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityCustomMeterItem'
        type: object
      id:
        type: string
      product:
        type: string
      resourceName:
        type: string
      validations:
        items:
          $ref: '#/definitions/AzureMarketplaceValidation'
        type: array
    type: object
  AzureMarketplacePriceAndAvailabilityCustomMeterItem:
    properties:
      displayName:
        type: string
      price:
        description: Suger's custom field, for Suger internal use only. Not from Microsoft
          official schema.
        type: number
      unitOfMeasure:
        type: string
    type: object
  AzureMarketplacePriceAndAvailabilityCustomMeterPrice:
    properties:
      meters:
        $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityCustomMeterPriceMeter'
      priceInputOption:
        description: default "usd"
        enum:
        - perMarket
        - usd
        type: string
    type: object
  AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem:
    properties:
      billingTerm:
        $ref: '#/definitions/AzureMarketplaceTerm'
      isInfinite:
        type: boolean
      quantity:
        type: number
    type: object
  AzureMarketplacePriceAndAvailabilityCustomMeterPriceMeter:
    additionalProperties:
      $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityCustomMeterPriceMeterItem'
    type: object
  AzureMarketplacePriceAndAvailabilityCustomMeterPriceMeterItem:
    properties:
      billingTerm:
        $ref: '#/definitions/AzureMarketplaceTerm'
      includedQuantities:
        items:
          $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityCustomMeterPriceIncludedQuantityItem'
        type: array
      paymentOption:
        $ref: '#/definitions/AzureMarketplaceTerm'
      pricePerPaymentInUsd:
        type: number
      prices:
        items:
          $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityCustomMeterPriceMeterItemPriceItem'
        type: array
    type: object
  AzureMarketplacePriceAndAvailabilityCustomMeterPriceMeterItemPriceItem:
    properties:
      pricePerPaymentInUsd:
        type: number
      prices:
        items:
          $ref: '#/definitions/AzureMarketplacePrice'
        type: array
    type: object
  AzureMarketplacePriceAndAvailabilityOffer:
    properties:
      $schema:
        type: string
      id:
        type: string
      previewAudiences:
        items:
          $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityAudience'
        type: array
      product:
        type: string
      resourceName:
        type: string
      validations:
        items:
          $ref: '#/definitions/AzureMarketplaceValidation'
        type: array
    type: object
  AzureMarketplacePriceAndAvailabilityPlan:
    properties:
      $schema:
        type: string
      audience:
        enum:
        - public
        - private
        type: string
      billingTag:
        type: string
      id:
        type: string
      markets:
        items:
          type: string
        type: array
      meterDefine:
        type: string
      plan:
        type: string
      pricing:
        $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityPrice'
      privateAudiences:
        items:
          $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityAudience'
        type: array
      product:
        type: string
      resourceName:
        type: string
      softwareReservation:
        items:
          $ref: '#/definitions/AzureMarketplacePriceAndAvailabilitySoftwareReservation'
        type: array
      trial:
        $ref: '#/definitions/AzureMarketplaceTerm'
      validations:
        items:
          $ref: '#/definitions/AzureMarketplaceValidation'
        type: array
      visibility:
        enum:
        - visible
        - hidden
        type: string
    type: object
  AzureMarketplacePriceAndAvailabilityPrice:
    properties:
      corePricing:
        $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityCorePrice'
      customMeters:
        $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityCustomMeterPrice'
      licenseModel:
        enum:
        - byol
        - payAsYouGo
        type: string
      recurrentPrice:
        $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityRecurrentPrice'
      systemMeterPricing:
        $ref: '#/definitions/AzureMarketplacePriceAndAvailabilitySystemMeterPrice'
    type: object
  AzureMarketplacePriceAndAvailabilityPrivateOfferCustomMeters:
    properties:
      meters:
        description: One of PriceAndAvailabilityCustomMeter_USD or PriceAndAvailabilityCustomMeter_PerMarket
      priceInputOption:
        description: default "usd"
        enum:
        - perMarket
        - usd
        type: string
    type: object
  AzureMarketplacePriceAndAvailabilityPrivateOfferPlan:
    properties:
      $schema:
        type: string
      id:
        type: string
      lifecycleState:
        $ref: '#/definitions/AzureMarketplaceResourceLifecycleState'
      offerPricingType:
        allOf:
        - $ref: '#/definitions/AzureMarketplaceOfferPricingType'
        description: default "editExistingOfferPricingOnly"
      plan:
        type: string
      planName:
        description: The azure plan friendly name, from the Azure Marketplace.
        type: string
      pricing:
        $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityPrivateOfferPrice'
      product:
        type: string
      resourceName:
        type: string
      softwareReservation:
        $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation'
      validations:
        items:
          $ref: '#/definitions/AzureMarketplaceValidation'
        type: array
      visibility:
        description: default "visible"
        enum:
        - visible
        - hidden
        type: string
    type: object
  AzureMarketplacePriceAndAvailabilityPrivateOfferPlanSoftwareReservation:
    properties:
      paymentSchedule:
        $ref: '#/definitions/AzureMarketplaceTerm'
      reservationDuration:
        $ref: '#/definitions/AzureMarketplaceTerm'
      vmPrices:
        $ref: '#/definitions/AzureMarketplaceVmPrice'
    type: object
  AzureMarketplacePriceAndAvailabilityPrivateOfferPrice:
    properties:
      customMeters:
        $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityPrivateOfferCustomMeters'
      recurrentPrice:
        $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityRecurrentPrice'
    type: object
  AzureMarketplacePriceAndAvailabilityRecurrentPrice:
    properties:
      priceInputOption:
        description: default "usd"
        enum:
        - perMarket
        - usd
        type: string
      prices:
        items:
          $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityRecurrentPriceItem'
        type: array
      recurrentPriceMode:
        description: default "flatRate"
        enum:
        - flatRate
        - perUser
        type: string
      userLimits:
        $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityRecurrentPriceUserLimit'
    type: object
  AzureMarketplacePriceAndAvailabilityRecurrentPriceItem:
    properties:
      billingTerm:
        $ref: '#/definitions/AzureMarketplaceTerm'
      paymentOption:
        $ref: '#/definitions/AzureMarketplaceTerm'
      pricePerPaymentInUsd:
        type: number
      prices:
        items:
          $ref: '#/definitions/AzureMarketplacePrice'
        type: array
    type: object
  AzureMarketplacePriceAndAvailabilityRecurrentPriceUserLimit:
    properties:
      max:
        type: number
      min:
        type: number
    type: object
  AzureMarketplacePriceAndAvailabilitySoftwareReservation:
    properties:
      percentageSave:
        description: default 0
        type: number
      term:
        description: default 0
        type: number
      type:
        enum:
        - month
        - year
        type: string
    type: object
  AzureMarketplacePriceAndAvailabilitySystemMeterPrice:
    properties:
      price:
        description: default 0
        type: number
      priceInputOption:
        enum:
        - perCore
        - perEveryCoreInCluster
        - perNode
        - perEveryNodeInCluster
        - perPod
        - perCluster
        type: string
      prices:
        items:
          $ref: '#/definitions/AzureMarketplacePrice'
        type: array
    type: object
  AzureMarketplacePrivateOffer:
    properties:
      $schema:
        type: string
      acceptBy:
        description: in format YYYY-MM-DD
        format: date-time
        type: string
      acceptanceLinks:
        items:
          $ref: '#/definitions/AzureMarketplacePrivateOfferAcceptanceLink'
        type: array
      beneficiaries:
        items:
          $ref: '#/definitions/AzureMarketplacePrivateOfferBeneficiary'
        type: array
      eTag:
        type: string
      end:
        description: in format YYYY-MM-DD
        format: date-time
        type: string
      id:
        description: in format of "private-offer/private-offer-durable-id"
        type: string
      lastModified:
        description: in format YYYY-MM-DD
        format: date-time
        type: string
      name:
        type: string
      notificationContacts:
        description: array of email addresses of the users to be notified of any changes
          in the private offer status.
        items:
          type: string
        type: array
      offerPricingType:
        $ref: '#/definitions/AzureMarketplaceOfferPricingType'
      partners:
        items:
          $ref: '#/definitions/AzureMarketplacePrivateOfferPartner'
        type: array
      preparedBy:
        type: string
      pricing:
        description: Up to 10 pricing entries are allowed.
        items:
          $ref: '#/definitions/AzureMarketplacePrivateOfferPricing'
        type: array
      privateOfferType:
        $ref: '#/definitions/AzureMarketplacePrivateOfferType'
      resourceName:
        type: string
      start:
        description: in format YYYY-MM-DD, if VariableStartDate = true, this field
          should be empty.
        format: date-time
        type: string
      state:
        $ref: '#/definitions/AzureMarketplacePrivateOfferState'
      subState:
        allOf:
        - $ref: '#/definitions/AzureMarketplacePrivateOfferSubState'
        enum:
        - pendingAcceptance
        - accepted
      termsAndConditionsDocSasUrl:
        description: Only applicable to private offers with privateOfferType = customerPromotion
          || cspPromotion
        type: string
      termsAndConditionsDocs:
        description: Only applicable to private offers with privateOfferType = multipartyPromotionOriginator
          || multipartyPromotionChannelPartner
        items:
          $ref: '#/definitions/AzureMarketplacePrivateOfferTermsDoc'
        type: array
      upgradedFrom:
        $ref: '#/definitions/AzureMarketplacePrivateOfferPromotionReference'
      validations:
        items:
          $ref: '#/definitions/AzureMarketplaceValidation'
        type: array
      variableStartDate:
        type: boolean
    type: object
  AzureMarketplacePrivateOfferAcceptanceLink:
    properties:
      beneficiaryId:
        description: The Customer Billing Account ID.
        type: string
      link:
        type: string
    type: object
  AzureMarketplacePrivateOfferBeneficiary:
    properties:
      beneficiaryRecipients:
        items:
          $ref: '#/definitions/AzureMarketplacePrivateOfferBeneficiaryRecipient'
        type: array
      description:
        type: string
      id:
        description: the customer billing account id.
        type: string
    type: object
  AzureMarketplacePrivateOfferBeneficiaryRecipient:
    properties:
      id:
        type: string
      recipientType:
        enum:
        - cspCustomer
        - billingGroup
        type: string
    type: object
  AzureMarketplacePrivateOfferPartner:
    properties:
      id:
        type: string
      location:
        type: string
      partnerName:
        type: string
    type: object
  AzureMarketplacePrivateOfferPricing:
    properties:
      basePlan:
        description: required for SaasNewCustomizedPlans
        type: string
      discountPercentage:
        description: between 0.01 to 100
        type: number
      discountType:
        $ref: '#/definitions/PrivateOfferDiscountType'
      markupPercentage:
        description: between 0.00000001 to 100
        type: number
      newPlanDetails:
        allOf:
        - $ref: '#/definitions/AzureMarketplacePrivateOfferPricingNewPlanDetails'
        description: required for SaasNewCustomizedPlans
      originalPlan:
        allOf:
        - $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityPrivateOfferPlan'
        description: the pricing plan of the original plan.
      plan:
        description: The base/original/default plan of the private offer, in format
          of "plan/product-durable-id/plan-durable-id"
        type: string
      planId:
        type: string
      planName:
        type: string
      planType:
        description: The type of the plan, FLAT_RATE or PER_USER.
        enum:
        - FLAT_RATE
        - PER_USER
        type: string
      priceDetails: {}
      privateOfferPlan:
        allOf:
        - $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityPrivateOfferPlan'
        description: the pricing plan of the private offer
      product:
        description: in format of "product/product-durable-id"
        type: string
      productName:
        type: string
      sugerOfferId:
        type: string
    type: object
  AzureMarketplacePrivateOfferPricingNewPlanDetails:
    properties:
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  AzureMarketplacePrivateOfferPromotionReference:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  AzureMarketplacePrivateOfferState:
    enum:
    - draft
    - live
    - deleted
    - withdrawn
    type: string
    x-enum-varnames:
    - AzureMarketplacePrivateOfferState_draft
    - AzureMarketplacePrivateOfferState_live
    - AzureMarketplacePrivateOfferState_deleted
    - AzureMarketplacePrivateOfferState_withdrawn
  AzureMarketplacePrivateOfferSubState:
    enum:
    - pendingAcceptance
    - accepted
    - pendingPartnerAction
    type: string
    x-enum-varnames:
    - AzureMarketplacePrivateOfferSubState_pendingAcceptance
    - AzureMarketplacePrivateOfferSubState_accepted
    - AzureMarketplacePrivateOfferSubState_pendingPartnerAction
  AzureMarketplacePrivateOfferTermsDoc:
    properties:
      customerFacingDocumentName:
        type: string
      fileName:
        type: string
      sasUrl:
        type: string
    type: object
  AzureMarketplacePrivateOfferType:
    enum:
    - ""
    - customerPromotion
    - cspPromotion
    - multipartyPromotionChannelPartner
    - multipartyPromotionOriginator
    type: string
    x-enum-varnames:
    - AzureMarketplacePrivateOfferType_unknown
    - AzureMarketplacePrivateOfferType_customerPromotion
    - AzureMarketplacePrivateOfferType_cspPromotion
    - AzureMarketplacePrivateOfferType_multipartyPromotionChannelPartner
    - AzureMarketplacePrivateOfferType_multipartyPromotionOriginator
  AzureMarketplaceProduct:
    properties:
      $schema:
        type: string
      alias:
        description: The Product Display Name
        type: string
      id:
        description: in format of "product/product-durable-id"
        type: string
      identity:
        $ref: '#/definitions/AzureMarketplaceIdentity'
      lifecycleState:
        $ref: '#/definitions/AzureMarketplaceResourceLifecycleState'
      productGroup:
        type: string
      resourceName:
        type: string
      type:
        $ref: '#/definitions/AzureMarketplaceProductType'
      validations:
        items:
          $ref: '#/definitions/AzureMarketplaceValidation'
        type: array
    type: object
  AzureMarketplaceProductResource:
    properties:
      customerLeads:
        $ref: '#/definitions/AzureMarketplaceCustomerLeads'
      listing:
        $ref: '#/definitions/AzureMarketplaceListing'
      listingAssets:
        items:
          $ref: '#/definitions/AzureMarketplaceListingAsset'
        type: array
      plans:
        items:
          $ref: '#/definitions/AzureMarketplacePlanResource'
        type: array
      priceAndAvailabilityCustomMeter:
        $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityCustomMeter'
      priceAndAvailabilityOffer:
        $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityOffer'
      product:
        $ref: '#/definitions/AzureMarketplaceProduct'
      property:
        $ref: '#/definitions/AzureMarketplaceProperty'
      reseller:
        $ref: '#/definitions/AzureMarketplaceReseller'
      setup:
        $ref: '#/definitions/AzureCommercialMarketplaceSetup'
      submission:
        $ref: '#/definitions/AzureMarketplaceSubmission'
      technicalConfiguration:
        $ref: '#/definitions/AzureMarketplaceSaasTechnicalConfiguration'
    type: object
  AzureMarketplaceProductType:
    enum:
    - azureApplication
    - azureContainer
    - azureVirtualMachine
    - consultingService
    - containerApp
    - coreVirtualMachine
    - cosellOnly
    - dynamics365BusinessCentral
    - dynamics365ForCustomerEngagement
    - dynamics365ForOperations
    - iotEdgeModule
    - managedService
    - powerBiApp
    - powerBiVisual
    - softwareAsAService
    - xbox360NonBackcompat
    type: string
    x-enum-varnames:
    - AzureMarketplaceProductType_azureApplication
    - AzureMarketplaceProductType_azureContainer
    - AzureMarketplaceProductType_azureVirtualMachine
    - AzureMarketplaceProductType_consultingService
    - AzureMarketplaceProductType_containerApp
    - AzureMarketplaceProductType_coreVirtualMachine
    - AzureMarketplaceProductType_cosellOnly
    - AzureMarketplaceProductType_dynamics365BusinessCentral
    - AzureMarketplaceProductType_dynamics365ForCustomerEngagement
    - AzureMarketplaceProductType_dynamics365ForOperations
    - AzureMarketplaceProductType_iotEdgeModule
    - AzureMarketplaceProductType_managedService
    - AzureMarketplaceProductType_powerBiApp
    - AzureMarketplaceProductType_powerBiVisual
    - AzureMarketplaceProductType_softwareAsAService
    - AzureMarketplaceProductType_xbox360NonBackcompat
  AzureMarketplaceProperty:
    properties:
      $schema:
        type: string
      appVersion:
        type: string
      categories:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
      cloudIndustries:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
      customAmendments:
        items:
          $ref: '#/definitions/AzureMarketplaceCustomAmendment'
        type: array
      id:
        type: string
      industries:
        additionalProperties:
          items:
            type: string
          type: array
        type: object
      kind:
        enum:
        - azureSaaS
        - azureVM
        type: string
      lifecycleState:
        $ref: '#/definitions/AzureMarketplaceResourceLifecycleState'
      product:
        type: string
      resourceName:
        type: string
      standardContractAmendment:
        type: string
      termsConditions:
        enum:
        - custom
        - standardMicrosoft
        type: string
      termsOfUse:
        type: string
      termsOfUseUrl:
        type: string
      validations:
        items:
          $ref: '#/definitions/AzureMarketplaceValidation'
        type: array
    type: object
  AzureMarketplaceReseller:
    properties:
      $schema:
        type: string
      audiences:
        items:
          $ref: '#/definitions/AzureMarketplacePreviewAudience'
        type: array
      id:
        type: string
      product:
        type: string
      resellerChannelState:
        type: string
      resourceName:
        type: string
      validations:
        items:
          $ref: '#/definitions/AzureMarketplaceValidation'
        type: array
    type: object
  AzureMarketplaceResourceLifecycleState:
    enum:
    - notAvailable
    - neverUsed
    - test
    - preview
    - generallyAvailable
    - deprecated
    - decommissioned
    - deleted
    type: string
    x-enum-varnames:
    - AzureMarketplaceResourceLifecycleState_NotAvailable
    - AzureMarketplaceResourceLifecycleState_NeverUsed
    - AzureMarketplaceResourceLifecycleState_Test
    - AzureMarketplaceResourceLifecycleState_Preview
    - AzureMarketplaceResourceLifecycleState_GenerallyAvailable
    - AzureMarketplaceResourceLifecycleState_Deprecated
    - AzureMarketplaceResourceLifecycleState_Decommissioned
    - AzureMarketplaceResourceLifecycleState_Deleted
  AzureMarketplaceResourceTarget:
    properties:
      targetId:
        type: string
      targetType:
        enum:
        - flight
        - sandbox
        - draft
        - preview
        - live
        - certification
        - retail
        type: string
    type: object
  AzureMarketplaceSaasTechnicalConfiguration:
    properties:
      $schema:
        type: string
      azureAdAppId:
        description: Azure AD Application Id
        type: string
      azureAdTenantId:
        description: Azure AD Tenant Id
        type: string
      connectionWebhook:
        type: string
      id:
        type: string
      landingPageUrl:
        type: string
      product:
        description: in format of "product/product-durable-id"
        type: string
      resourceName:
        type: string
      validations:
        items:
          $ref: '#/definitions/AzureMarketplaceValidation'
        type: array
    type: object
  AzureMarketplaceSubmission:
    properties:
      $schema:
        type: string
      created:
        description: Date-time string
        type: string
      deprecationSchedule:
        $ref: '#/definitions/AzureMarketplaceDeprecationSchedule'
      id:
        type: string
      lifecycleState:
        $ref: '#/definitions/AzureMarketplaceResourceLifecycleState'
      product:
        type: string
      resourceName:
        type: string
      result:
        enum:
        - succeeded
        - failed
        - pending
        type: string
      status:
        enum:
        - notStarted
        - running
        - completed
        type: string
      target:
        $ref: '#/definitions/AzureMarketplaceResourceTarget'
      validations:
        items:
          $ref: '#/definitions/AzureMarketplaceValidation'
        type: array
    type: object
  AzureMarketplaceSubscription:
    properties:
      allowedCustomerOperations:
        items:
          enum:
          - Read
          - Update
          - Delete
          type: string
        type: array
      autoRenew:
        type: boolean
      beneficiary:
        $ref: '#/definitions/AzureADIdentifier'
      created:
        format: date-time
        type: string
      fulfillmentId:
        type: string
      id:
        type: string
      isFreeTrial:
        type: boolean
      isTest:
        type: boolean
      lastModified:
        type: string
      name:
        type: string
      offerId:
        type: string
      planId:
        type: string
      publisherId:
        type: string
      purchaser:
        $ref: '#/definitions/AzureADIdentifier'
      quantity:
        type: integer
      saasSubscriptionStatus:
        $ref: '#/definitions/AzureMarketplaceSubscriptionStatus'
      sandboxType:
        enum:
        - None
        - Csp
        type: string
      sessionId:
        type: string
      sessionMode:
        enum:
        - None
        - DryRun
        type: string
      storeFront:
        type: string
      term:
        $ref: '#/definitions/AzureTerm'
    type: object
  AzureMarketplaceSubscriptionStatus:
    enum:
    - NotStarted
    - PendingFulfillmentStart
    - Subscribed
    - Suspended
    - Unsubscribed
    type: string
    x-enum-varnames:
    - AzureMarketplaceSubscriptionStatus_NotStarted
    - AzureMarketplaceSubscriptionStatus_PendingFulfillmentStart
    - AzureMarketplaceSubscriptionStatus_Subscribed
    - AzureMarketplaceSubscriptionStatus_Suspended
    - AzureMarketplaceSubscriptionStatus_Unsubscribed
  AzureMarketplaceTerm:
    properties:
      type:
        enum:
        - day
        - week
        - month
        - year
        type: string
      value:
        description: default 0
        type: number
    type: object
  AzureMarketplaceValidation:
    properties:
      $schema:
        type: string
      code:
        enum:
        - businessValidationError
        - collectionLimitExceeded
        - invalidId
        - invalidEntityStatus
        - invalidRequest
        - invalidResource
        - invalidState
        - notDeployed
        - notSupported
        - operationCanceled
        - productLocked
        - resourceNotFound
        - schemaValidationError
        type: string
      level:
        enum:
        - informational
        - warning
        type: string
      message:
        type: string
      resourceId:
        type: string
    type: object
  AzureMarketplaceVmPrice:
    properties:
      patternProperties:
        additionalProperties:
          $ref: '#/definitions/AzureMarketplaceVmPricePropertyItem'
        type: object
    type: object
  AzureMarketplaceVmPricePropertyItem:
    properties:
      quantity:
        type: number
      unitPricePerPaymentPeriodInUsd:
        type: number
    type: object
  AzurePendingUpdateInfo:
    properties:
      status:
        type: string
      updateType:
        type: string
    type: object
  AzurePrice:
    properties:
      currencyCode:
        description: ISO currency code, Three characters
        type: string
      openPrice:
        type: number
      priceTierID:
        type: string
    type: object
  AzurePriceCadence:
    properties:
      type:
        enum:
        - Month
        - Year
        type: string
      value:
        type: integer
    type: object
  AzurePriceSchedule:
    properties:
      priceCadence:
        $ref: '#/definitions/AzurePriceCadence'
      pricingModel:
        enum:
        - Flat
        - Recurring
        - Usage
        type: string
      pricingUnits:
        items:
          $ref: '#/definitions/AzurePricingUnit'
        type: array
      retailPrice:
        $ref: '#/definitions/AzurePrice'
    type: object
  AzurePricingUnit:
    properties:
      isUnlimitedUnit:
        type: boolean
      lowerUnit:
        type: integer
      name:
        enum:
        - sharedcore
        - transactions
        type: string
      unitType:
        type: string
      upperUnit:
        type: integer
    type: object
  AzureProduct:
    properties:
      availabilities:
        items:
          $ref: '#/definitions/AzureProductAvailability'
        type: array
      branches:
        items:
          $ref: '#/definitions/AzureProductBranch'
        type: array
      externalIDs:
        items:
          $ref: '#/definitions/AzureTypeValue'
        type: array
      id:
        type: string
      isModularPublishing:
        type: boolean
      listings:
        items:
          $ref: '#/definitions/AzureProductListing'
        type: array
      name:
        type: string
      packageConfigurations:
        items:
          $ref: '#/definitions/AzureProductPackageConfiguration'
        type: array
      plans:
        description: All plans under this product
        items:
          $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityPrivateOfferPlan'
        type: array
      properties:
        items:
          $ref: '#/definitions/AzureProductProperty'
        type: array
      resourceType:
        type: string
      setup:
        allOf:
        - $ref: '#/definitions/AzureProductSetup'
        description: Not original fields. They are populated by other API calls
      submissions:
        items:
          $ref: '#/definitions/AzureProductSubmission'
        type: array
      variants:
        items:
          $ref: '#/definitions/AzureProductVariant'
        type: array
    type: object
  AzureProductAvailability:
    properties:
      emailAudiences:
        items:
          $ref: '#/definitions/AzureAudience'
        type: array
      enterpriseLicensing:
        type: string
      id:
        type: string
      resourceType:
        type: string
      subscriptionAudiences:
        items:
          $ref: '#/definitions/AzureAudience'
        type: array
      visibility:
        type: string
    type: object
  AzureProductBranch:
    properties:
      currentDraftInstanceID:
        type: string
      friendlyName:
        type: string
      id:
        type: string
      module:
        type: string
      resourceType:
        type: string
      type:
        type: string
      variantID:
        type: string
    type: object
  AzureProductFeatureAvailability:
    properties:
      customMeters:
        items:
          $ref: '#/definitions/AzureProductVariantCustomMeter'
        type: array
      id:
        type: string
      isHidden:
        type: boolean
      marketStates:
        items:
          $ref: '#/definitions/AzureMarketState'
        type: array
      markets:
        items:
          $ref: '#/definitions/AzureMarket'
        type: array
      priceSchedules:
        items:
          $ref: '#/definitions/AzureProductVariantPriceSchedule'
        type: array
      properties:
        items:
          $ref: '#/definitions/AzureTypeValue'
        type: array
      resourceType:
        description: ResourceType = FeatureAvailability
        type: string
      subscriptionAudiences:
        items:
          $ref: '#/definitions/AzureAudience'
        type: array
      tenantAudiences:
        items:
          $ref: '#/definitions/AzureAudience'
        type: array
      trial:
        $ref: '#/definitions/AzureProductVariantTrial'
      visibility:
        enum:
        - Public
        - Private
        type: string
    type: object
  AzureProductListing:
    properties:
      accessInformation:
        type: string
      assets:
        description: Not original fields. They are populated by other API calls
        items:
          $ref: '#/definitions/AzureProductListingAsset'
        type: array
      compatibleProducts:
        items:
          type: string
        type: array
      description:
        type: string
      gettingStartedInstructions:
        type: string
      id:
        type: string
      keywords:
        items:
          type: string
        type: array
      languageCode:
        type: string
      listingContacts:
        items:
          $ref: '#/definitions/AzureListingContact'
        type: array
      listingUris:
        items:
          $ref: '#/definitions/AzureListingUri'
        type: array
      productDisplayName:
        type: string
      publisherName:
        type: string
      resourceType:
        enum:
        - AzureListing
        type: string
      shortDescription:
        type: string
      summary:
        type: string
      title:
        type: string
    type: object
  AzureProductListingAsset:
    properties:
      description:
        type: string
      fileName:
        type: string
      fileSasUri:
        type: string
      friendlyName:
        type: string
      id:
        type: string
      order:
        type: integer
      publisherDefinedSasUri:
        type: string
      resourceType:
        enum:
        - ListingAsset
        - ListingImage
        - ListingVideo
        type: string
      state:
        enum:
        - PendingUpload
        - Uploaded
        - InProcessing
        - Processed
        - ProcessFailed
        type: string
      type:
        type: string
    type: object
  AzureProductPackageConfiguration:
    properties:
      azureActiveDirectoryApplicationID:
        type: string
      azureActiveDirectoryTenantID:
        type: string
      connectionWebhook:
        type: string
      id:
        type: string
      landingPageUri:
        type: string
      resourceType:
        enum:
        - AzureSoftwareAsAServicePackageConfiguration
        type: string
    type: object
  AzureProductProperty:
    properties:
      additionalCategories:
        items:
          type: string
        type: array
      appVersion:
        type: string
      applicableProducts:
        items:
          type: string
        type: array
      categories:
        items:
          type: string
        type: array
      customAmendments:
        items:
          type: string
        type: array
      extendedProperties:
        items:
          type: string
        type: array
      globalAmendmentTerms:
        type: string
      hideKeys:
        items:
          type: string
        type: array
      id:
        type: string
      industries:
        items:
          type: string
        type: array
      leveledCategories:
        additionalProperties: true
        type: object
      leveledIndustries:
        additionalProperties: true
        type: object
      marketingOnlyChange:
        type: boolean
      productTags:
        items:
          type: string
        type: array
      resourceType:
        type: string
      submissionVersion:
        type: string
      termsOfUse:
        type: string
      useEnterpriseContract:
        type: boolean
    type: object
  AzureProductSetup:
    properties:
      callToAction:
        enum:
        - free
        - free-trial
        - contact-me
        type: string
      channelStates:
        items:
          $ref: '#/definitions/AzureTypeValue'
        type: array
      enableTestDrive:
        type: boolean
      resourceType:
        enum:
        - AzureProductSetup
        type: string
      sellingOption:
        enum:
        - ListingOnly
        - ListAndSell
        type: string
      testDriveType:
        type: string
      trialUri:
        type: string
    type: object
  AzureProductSubmission:
    properties:
      areResourcesReady:
        type: boolean
      friendlyName:
        type: string
      id:
        type: string
      pendingUpdateInfo:
        $ref: '#/definitions/AzurePendingUpdateInfo'
      publishedTimeInUtc:
        format: date-time
        type: string
      releaseNumber:
        type: integer
      resourceType:
        enum:
        - Submission
        type: string
      resources:
        items:
          $ref: '#/definitions/AzureTypeValue'
        type: array
      state:
        enum:
        - Inprogress
        - Published
        type: string
      subState:
        enum:
        - InDraft
        - Submitted
        - Failed
        - FailedInCertification
        - ReadyToPublish
        - Publishing
        - Published
        - InStore
        type: string
      targets:
        items:
          $ref: '#/definitions/AzureTypeValue'
        type: array
      variantResources:
        items:
          $ref: '#/definitions/AzureVariantResource'
        type: array
    type: object
  AzureProductVariant:
    properties:
      azureGovernmentCertifications:
        items:
          $ref: '#/definitions/AzureGovernmentCertification'
        type: array
      cloudAvailabilities:
        items:
          type: string
        type: array
      conversionPaths:
        type: string
      extendedProperties:
        items:
          $ref: '#/definitions/AzureTypeValue'
        type: array
      externalID:
        type: string
      featureAvailabilities:
        description: Not original fields. They are populated by other API calls
        items:
          $ref: '#/definitions/AzureProductFeatureAvailability'
        type: array
      friendlyName:
        type: string
      id:
        type: string
      leadGenID:
        type: string
      referenceVariantID:
        type: string
      resourceType:
        enum:
        - AzureSkuVariant
        - AzureTestDriveVariant
        type: string
      state:
        enum:
        - InActive
        - Active
        type: string
    type: object
  AzureProductVariantCustomMeter:
    properties:
      displayName:
        type: string
      id:
        type: string
      includedBaseQuantities:
        items:
          $ref: '#/definitions/AzureIncludedBaseQuantity'
        type: array
      isEnabled:
        type: boolean
      priceInUsd:
        type: number
      uniqueID:
        type: string
      unitOfMeasure:
        type: string
    type: object
  AzureProductVariantPriceSchedule:
    properties:
      dateTimeRange:
        $ref: '#/definitions/AzureLocalizedTimeRange'
      friendlyName:
        type: string
      isBaseSchedule:
        description: There is only one base schedule.
        type: boolean
      marketCodes:
        description: ISO country code
        items:
          type: string
        type: array
      schedules:
        items:
          $ref: '#/definitions/AzurePriceSchedule'
        type: array
    type: object
  AzureProductVariantTrial:
    properties:
      dateTimeRange:
        $ref: '#/definitions/AzureLocalizedTimeRange'
      duration:
        type: integer
      durationType:
        enum:
        - Minute
        - Days
        - Months
        type: string
      type:
        enum:
        - NoTrial
        - TimedAccess
        - TimedUsage
        - Unlimited
        type: string
    type: object
  AzureTerm:
    properties:
      chargeDuration:
        type: string
      endDate:
        format: date-time
        type: string
      startDate:
        format: date-time
        type: string
      termUnit:
        type: string
    type: object
  AzureTypeValue:
    properties:
      type:
        type: string
      value:
        type: string
    type: object
  AzureValidationResult:
    properties:
      errorMessage:
        type: string
      memberNames:
        items:
          type: string
        type: array
    type: object
  AzureVariantResource:
    properties:
      resources:
        items:
          $ref: '#/definitions/AzureTypeValue'
        type: array
      variantID:
        type: string
    type: object
  BillableDimension:
    properties:
      billableMetricId:
        description: The ID for the billable metric.
        type: string
      category:
        allOf:
        - $ref: '#/definitions/PriceModelCategory'
        description: The category of the pricing model. This is used to determine
          which pricing model to use.
      description:
        description: Description of the dimension. This is used in the UI to display
          the dimension.
        type: string
      discount:
        allOf:
        - $ref: '#/definitions/BillingDiscount'
        description: Discount for the dimension.
      length:
        description: The term length for the commit amount. Applicable to Direct only.
        type: integer
      minimumCommit:
        description: The minimum commit amount. Applicable to Direct only. Ignored
          if the value is 0 or less.
        type: number
      minimumCommitProrata:
        description: |-
          If the minimum commit is appled with pro-rata. Applicable to Direct only.
          If true, the minimum commit amount will be prorated based on the usage period (starting time and ending time).
        type: boolean
      minimumCommitScope:
        allOf:
        - $ref: '#/definitions/BillingMinimumCommitScope'
        description: The minimum commit scope. The default value is "DIMENSION" if
          not set.
      name:
        description: Display name of the dimension. This is used in the UI to display
          the dimension.
        type: string
      priceModelBasic:
        allOf:
        - $ref: '#/definitions/PriceModelBasic'
        description: The configuration for the Basic pricing model. Applicable to
          Direct only.
      priceModelBulk:
        allOf:
        - $ref: '#/definitions/PriceModelBulk'
        description: The configuration for the Package pricing model. Applicable to
          Direct only.
      priceModelMatrix:
        allOf:
        - $ref: '#/definitions/PriceModelMatrix'
        description: The configuration for the Matrix pricing model. Applicable to
          Direct only.
      priceModelPercentage:
        allOf:
        - $ref: '#/definitions/PriceModelPercentage'
        description: The configuration for the Percentage pricing model. Applicable
          to Direct only.
      priceModelTiered:
        allOf:
        - $ref: '#/definitions/PriceModelTiered'
        description: The configuration for the Tiered pricing model. Applicable to
          Direct only.
      priceModelTieredPercentage:
        allOf:
        - $ref: '#/definitions/PriceModelTieredPercentage'
        description: The configuration for the Tiered Percentage pricing model. Applicable
          to Direct only.
      priceModelVolume:
        allOf:
        - $ref: '#/definitions/PriceModelVolume'
        description: The configuration for the Bulk pricing model. Applicable to Direct
          only.
      timeUnit:
        allOf:
        - $ref: '#/definitions/TimeUnit'
        description: The term unit for the commit amount. Applicable to Direct only.
    type: object
  BillableDimensionFeeDetail:
    properties:
      descriptions:
        description: 'Description of the pricing model that is used to show what the
          amount is for. like ''Bulk pricing: 0-100 units'', ''Tiered pricing: 0-100
          units'''
        type: string
      feeExpressions:
        description: FeeExpression is the expression used to calculate the fee that
          is used to show how the amount is calculated. like '211 × $0.03'
        type: string
    type: object
  BillableDimensionPriceModelDetail:
    properties:
      amount:
        description: Amount is the amount that is calculated based on the FeeExpression
        type: number
      billableMetricKey:
        allOf:
        - $ref: '#/definitions/MeteringUsageRecordGroupByKey'
        description: BillableMetricKey is the key of the billable metric
      category:
        allOf:
        - $ref: '#/definitions/PriceModelCategory'
        description: Category of this billable dimension.
      details:
        description: Details is the details of the pricing model that is used to show
          what the amount is for.
        items:
          $ref: '#/definitions/BillableDimensionFeeDetail'
        type: array
      discount:
        allOf:
        - $ref: '#/definitions/BillingDiscount'
        description: The discount of this billable dimension if applicable.
      discountExpression:
        description: DiscountExpression is the expression used to calculate the discount
          that is used to show how the discount is calculated.
        type: string
      isTrial:
        description: Flag to indicate if this period is a trial period.
        type: boolean
      minimumCommit:
        description: |-
          MinimumCommit is the minimum commit amount that is used to show the minimum commit amount.
          Will be ignored if the value is 0 or less.
        type: number
      minimumCommitScope:
        allOf:
        - $ref: '#/definitions/BillingMinimumCommitScope'
        description: The minimum commit scope. The default value is "DIMENSION" if
          not set.
      name:
        description: Name of this billable dimension.
        type: string
      quantity:
        description: |-
          Final quantity of the billable dimension in the invoice period, which calculates the fee in price model.
          It may be the sum value of count/sum/unique_count or latest/max value according to different aggregation type.
        type: number
    type: object
  BillableDimensionUsageDailyRevenue:
    properties:
      billableMetricKey:
        $ref: '#/definitions/MeteringUsageRecordGroupByKey'
      date:
        type: string
      quantity:
        type: number
      uniquePropertyItems:
        additionalProperties: true
        type: object
    type: object
  BillableMetric:
    properties:
      aggregationType:
        $ref: '#/definitions/BillableMetricAggregationType'
      creationTime:
        format: date-time
        type: string
      description:
        maxLength: 300
        type: string
      id:
        maxLength: 36
        type: string
      info:
        $ref: '#/definitions/BillableMetricInfo'
      lastUpdateTime:
        format: date-time
        type: string
      name:
        maxLength: 50
        minLength: 4
        type: string
      organizationId:
        type: string
      status:
        $ref: '#/definitions/BillableMetricStatus'
    type: object
  BillableMetricAggregationType:
    enum:
    - COUNT
    - UNIQUE_COUNT
    - SUM
    - MAX
    - LAST
    type: string
    x-enum-varnames:
    - BillableMetricAggregationType_COUNT
    - BillableMetricAggregationType_UNIQUE_COUNT
    - BillableMetricAggregationType_SUM
    - BillableMetricAggregationType_MAX
    - BillableMetricAggregationType_LAST
  BillableMetricFilter:
    properties:
      name:
        type: string
      operation:
        $ref: '#/definitions/BillableMetricFilterOperation'
      value:
        description: The value of the filter. The type of the value depends on the
          valueType.
      valueType:
        $ref: '#/definitions/BillableMetricFilterValueType'
    type: object
  BillableMetricFilterGroup:
    properties:
      filters:
        items:
          $ref: '#/definitions/BillableMetricFilter'
        type: array
    type: object
  BillableMetricFilterOperation:
    enum:
    - IS
    - NOT_IS
    - CONTAINS
    - NOT_CONTAINS
    - GT
    - GTE
    - LT
    - LTE
    - EQ
    - NOT_EQ
    - EXISTS
    - NOT_EXISTS
    type: string
    x-enum-varnames:
    - BillableMetricFilterOperation_IS
    - BillableMetricFilterOperation_NOT_IS
    - BillableMetricFilterOperation_CONTAINS
    - BillableMetricFilterOperation_NOT_CONTAINS
    - BillableMetricFilterOperation_GT
    - BillableMetricFilterOperation_GTE
    - BillableMetricFilterOperation_LT
    - BillableMetricFilterOperation_LTE
    - BillableMetricFilterOperation_EQ
    - BillableMetricFilterOperation_NEQ
    - BillableMetricFilterOperation_EXISTS
    - BillableMetricFilterOperation_NOT_EXISTS
  BillableMetricFilterValueType:
    enum:
    - STRING
    - FLOAT
    type: string
    x-enum-varnames:
    - BillableMetricFilterValueType_STRING
    - BillableMetricFilterValueType_FLOAT
  BillableMetricInfo:
    properties:
      filterGroups:
        description: |-
          FilterGroups is a list of filter groups.
          The filterGroups are connected by AND.
        items:
          $ref: '#/definitions/BillableMetricFilterGroup'
        type: array
      groupBys:
        description: GroupBys is a list of fields to group by.
        items:
          type: string
        type: array
      propertyUniqueOn:
        description: The target property for unique count aggregate.
        type: string
    type: object
  BillableMetricStatus:
    enum:
    - ACTIVE
    - DELETED
    type: string
    x-enum-varnames:
    - BillableMetricStatus_ACTIVE
    - BillableMetricStatus_DELETED
  BillingAddon:
    properties:
      creationTime:
        format: date-time
        type: string
      description:
        description: Description of the addon
        maxLength: 300
        type: string
      id:
        maxLength: 36
        type: string
      info:
        $ref: '#/definitions/BillingAddonInfo'
      lastUpdateTime:
        format: date-time
        type: string
      name:
        description: Name of the addon, e.g. "Support Plan"
        maxLength: 50
        minLength: 4
        type: string
      organizationID:
        type: string
      status:
        $ref: '#/definitions/BillingAddonStatus'
    type: object
  BillingAddonInfo:
    properties:
      amount:
        type: number
    type: object
  BillingAddonRecord:
    properties:
      amount:
        type: number
      chargeOn:
        format: date-time
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  BillingAddonStatus:
    enum:
    - ACTIVE
    - DELETED
    type: string
    x-enum-varnames:
    - BillingAddonStatus_ACTIVE
    - BillingAddonStatus_DELETED
  BillingCycle:
    enum:
    - MONTH_FIRST_DAY
    - ENTITLEMENT_START_DATE
    type: string
    x-enum-varnames:
    - BillingCycle_MonthFirstDay
    - BillingCycle_EntitlementStartDate
  BillingDiscount:
    properties:
      discountType:
        $ref: '#/definitions/BillingDiscountType'
      value:
        type: number
    type: object
  BillingDiscountType:
    enum:
    - PERCENTAGE
    - ABSOLUTE
    type: string
    x-enum-varnames:
    - BillingDiscountType_PERCENTAGE
    - BillingDiscountType_ABSOLUTE
  BillingInvoice:
    properties:
      buyerID:
        maxLength: 36
        type: string
      creationTime:
        format: date-time
        type: string
      endDate:
        format: date-time
        type: string
      entitlementID:
        maxLength: 36
        type: string
      id:
        maxLength: 36
        type: string
      info:
        $ref: '#/definitions/BillingInvoiceInfo'
      invoiceURL:
        description: The invoice file URL, provided as AWS S3 presigned URL with expiration
          time. Output only.
        type: string
      lastUpdateTime:
        format: date-time
        type: string
      organizationID:
        type: string
      paymentStatus:
        $ref: '#/definitions/BillingPaymentStatus'
      startDate:
        format: date-time
        type: string
      status:
        $ref: '#/definitions/BillingInvoiceStatus'
      type:
        $ref: '#/definitions/BillingInvoiceType'
    type: object
  BillingInvoiceInfo:
    properties:
      addFixedFees:
        description: |-
          Adjust charge fields
          The fixed fees to be added to the invoice.
        items:
          $ref: '#/definitions/InvoiceAddFixedFee'
        type: array
      addonDetail:
        $ref: '#/definitions/BillingAddonRecord'
      adjustDiscountByDimensions:
        description: add or adjust discount for a specific dimension
        items:
          $ref: '#/definitions/InvoiceAdjustDiscountByDimension'
        type: array
      adjustMinimumSpendByDimensions:
        description: add or adjust minimum spend for a specific dimension
        items:
          $ref: '#/definitions/InvoiceAdjustMinimumSpendByDimension'
        type: array
      adjustOverallDiscount:
        allOf:
        - $ref: '#/definitions/InvoiceAdjustOverallDiscount'
        description: |-
          add or adjust overall discount
          calculate each dimension's discount first, then apply the overall discount
      adjustOverallMinimumSpend:
        allOf:
        - $ref: '#/definitions/InvoiceAdjustOverallMinimumSpend'
        description: |-
          add or adjust overall minimum spend
          calculate each dimension's minimum spend first, then apply the overall minimum spend
      amount:
        type: number
      billableDimensionDetails:
        items:
          $ref: '#/definitions/BillableDimensionPriceModelDetail'
        type: array
      commitsRevenueDetails:
        description: |-
          Recurring flat fee for the invoice.
          There should be only one type fee for each invoice, commits, or usage.
        items:
          $ref: '#/definitions/CommitRevenueDetail'
        type: array
      creationDate:
        description: |-
          The creation date of the invoice when the status of the invoice may be draft or issued.
          It may be different from the issue date.
        format: date-time
        type: string
      currency:
        type: string
      description:
        type: string
      dueDate:
        description: DueDate = IssueDate + NetTerm
        format: date-time
        type: string
      gracePeriodInDays:
        description: Grace Period in number of days
        type: integer
      issueDate:
        description: |-
          IssueDate, issue invoice automatically when CreationDate + GracePeriod, or issue invoice manually
          IssueDate >= CreationDate && IssueDate <= CreationDate + GracePeriod
        format: date-time
        type: string
      memo:
        type: string
      netTermsInDays:
        description: Net Terms period in number of days
        type: integer
      paymentInstallmentsDetail:
        $ref: '#/definitions/BillingPaymentInstallmentDetail'
      receiptUrl:
        description: Invoice receipt url, it only exists when there are transactions.
        type: string
      spaUrl:
        description: SPA url with JWT.
        type: string
      trialPeriodInDays:
        description: Trial period in number of days
        type: integer
      usageDailyRevenues:
        description: Billable dimension fees for the invoice.
        items:
          $ref: '#/definitions/BillableDimensionUsageDailyRevenue'
        type: array
    type: object
  BillingInvoiceStatus:
    enum:
    - DRAFT
    - FINALIZED
    - CANCELED
    - DELETED
    - ""
    type: string
    x-enum-varnames:
    - BillingInvoiceStatus_DRAFT
    - BillingInvoiceStatus_FINALIZED
    - BillingInvoiceStatus_CANCELED
    - BillingInvoiceStatus_DELETED
    - BillingInvoiceStatus_UNKNOWN
  BillingInvoiceType:
    enum:
    - COMMIT
    - USAGE
    - ADDON
    - INSTALLMENT
    type: string
    x-enum-varnames:
    - BillingInvoiceType_COMMIT
    - BillingInvoiceType_USAGE
    - BillingInvoiceType_ADDON
    - BillingInvoiceType_INSTALLMENT
  BillingMinimumCommitScope:
    enum:
    - ""
    - DIMENSION
    - DIMENSION_GROUP_BY
    type: string
    x-enum-varnames:
    - BillingMinimumCommitScope_UNKNOWN
    - BillingMinimumCommitScope_DIMENSION
    - BillingMinimumCommitScope_DIMENSION_GROUP_BY
  BillingPaymentInstallmentDetail:
    properties:
      amount:
        type: number
      chargeOn:
        format: date-time
        type: string
      description:
        type: string
    type: object
  BillingPaymentStatus:
    enum:
    - PENDING
    - PROCESSING
    - SUCCESS
    - FAILED
    type: string
    x-enum-varnames:
    - BillingPaymentStatus_PENDING
    - BillingPaymentStatus_PROCESSING
    - BillingPaymentStatus_SUCCESS
    - BillingPaymentStatus_FAILED
  BillingPaymentTransaction:
    properties:
      amount:
        type: number
      buyerID:
        type: string
      creationTime:
        format: date-time
        type: string
      currency:
        type: string
      entitlementID:
        type: string
      id:
        type: string
      info:
        $ref: '#/definitions/BillingPaymentTransactionInfo'
      invoiceID:
        type: string
      lastUpdateTime:
        format: date-time
        type: string
      organizationID:
        type: string
      parentID:
        type: string
      partner:
        $ref: '#/definitions/Partner'
      status:
        $ref: '#/definitions/BillingPaymentStatus'
      type:
        $ref: '#/definitions/BillingPaymentTransactionType'
      walletID:
        type: string
      walletType:
        $ref: '#/definitions/BillingWalletType'
    type: object
  BillingPaymentTransactionInfo:
    properties:
      invoiceDate:
        description: The invoice issue date.
        format: date-time
        type: string
      refundExists:
        description: Refund flag marks whether the transaction has any refund records.
        type: boolean
      stripeBalanceTransaction:
        allOf:
        - $ref: '#/definitions/StripeBalanceTransaction'
        description: Balance transaction that describes the impact of this charge
          on your account balance.
      stripeDisputes:
        description: Stripe dispute result, got by Dispute API, there may be multiple
          disputes.
        items:
          $ref: '#/definitions/StripeDispute'
        type: array
      stripeError:
        allOf:
        - $ref: '#/definitions/StripeError'
        description: Error of stripe API call
      stripePaymentIntent:
        allOf:
        - $ref: '#/definitions/StripePaymentIntent'
        description: Stripe payment intent result, got by PaymentIntent API
      stripeRefund:
        allOf:
        - $ref: '#/definitions/StripeRefund'
        description: Stripe refund result, got by Refund API
    type: object
  BillingPaymentTransactionType:
    enum:
    - CHARGE
    - REFUND
    type: string
    x-enum-varnames:
    - BillingPaymentTransactionType_CHARGE
    - BillingPaymentTransactionType_REFUND
  BillingWallet:
    properties:
      buyerID:
        type: string
      creationTime:
        format: date-time
        type: string
      currency:
        type: string
      expireTime:
        description: nullable
        format: date-time
        type: string
      externalID:
        description: The payment method id in payment provider, such as stripe payment
          method id.
        type: string
      id:
        type: string
      info:
        $ref: '#/definitions/BillingWalletInfo'
      lastUpdateTime:
        format: date-time
        type: string
      name:
        type: string
      organizationID:
        type: string
      partner:
        $ref: '#/definitions/Partner'
      startTime:
        format: date-time
        type: string
      status:
        $ref: '#/definitions/BillingWalletStatus'
      totalAmount:
        type: number
      type:
        $ref: '#/definitions/BillingWalletType'
      usedAmount:
        type: number
    type: object
  BillingWalletInfo:
    properties:
      closeDate:
        description: The close date of the wallet if applicable.
        format: date-time
        type: string
      stripePaymentMethod:
        $ref: '#/definitions/StripePaymentMethod'
      stripeSetupIntentId:
        type: string
    type: object
  BillingWalletStatus:
    enum:
    - ACTIVE
    - DELETED
    - PENDING_VERIFY
    - EXPIRED
    - CLOSED
    type: string
    x-enum-comments:
      BillingWalletStatus_DELETED: Soft delete.
      BillingWalletStatus_EXPIRED: for credit.
      BillingWalletStatus_PENDING_VERIFY: for payment method.
    x-enum-varnames:
    - BillingWalletStatus_ACTIVE
    - BillingWalletStatus_DELETED
    - BillingWalletStatus_PENDING_VERIFY
    - BillingWalletStatus_EXPIRED
    - BillingWalletStatus_CLOSED
  BillingWalletType:
    enum:
    - ach_debit
    - bacs_debit
    - card
    - credit
    - sepa_debit
    type: string
    x-enum-comments:
      BillingWalletType_ACH_DEBIT: for USD.
      BillingWalletType_BACS_DEBIT: for UK.
      BillingWalletType_CREDIT: Credit managed by Suger.
      BillingWalletType_SEPA_DEBIT: for EUR.
    x-enum-varnames:
    - BillingWalletType_ACH_DEBIT
    - BillingWalletType_BACS_DEBIT
    - BillingWalletType_CARD
    - BillingWalletType_CREDIT
    - BillingWalletType_SEPA_DEBIT
  BuyerInfo:
    properties:
      adyenBuyer:
        allOf:
        - $ref: '#/definitions/AdyenBuyer'
        description: Buyer on Adyen
      awsBuyer:
        allOf:
        - $ref: '#/definitions/AwsAccountIdentifier'
        description: Buyer from AWS Marketplace
      azureBuyer:
        allOf:
        - $ref: '#/definitions/AzureADIdentifier'
        description: Buyer from Azure Marketplace
      collectableAmount:
        description: The amount that the seller can collect. It excludes the marketplace
          commision fee.
        type: number
      companyInfo:
        $ref: '#/definitions/CompanyInfo'
      customerId:
        description: customerID of buyer on seller's side
        type: string
      disbursedAmount:
        description: The amount that has been disbursed to the seller account.
        type: number
      emailAddress:
        description: The email address of the buyer. This was copied from the new
          client signup form.
        type: string
      fields:
        additionalProperties: true
        description: Fields to store key-value pairs of buyer information.
        type: object
      gcpBuyer:
        allOf:
        - $ref: '#/definitions/GcpMarketplaceUserAccount'
        description: Buyer from GCP Marketplace
      grossAmount:
        description: The gross amount that the buyer has committed to pay, including
          usage metered amount.
        type: number
      invoicedAmount:
        description: The amount that the buyer has got invoiced.
        type: number
      lagoCustomerId:
        description: The lgo customer ID for the buyer if it is connected to a lago
          customer.
        type: string
      lastModifiedBy:
        description: Last modifier user ID.
        type: string
      metronomeCustomerId:
        description: The metronome customer ID for the buyer if it is connected to
          a metronome customer.
        type: string
      orbCustomerId:
        description: The orb customer ID for the buyer if it is connected to a orb
          customer.
        type: string
      paymentConfig:
        allOf:
        - $ref: '#/definitions/PaymentConfig'
        description: Payment Config for billing.
      spaUrl:
        description: Buyer SPA url, public page visited with jwt.
        type: string
      stripeBuyer:
        allOf:
        - $ref: '#/definitions/StripeCustomer'
        description: Buyer as Customer on Stripe
    type: object
  CancellationSchedule:
    properties:
      cancelDate:
        description: The cancellation date of the entitlement. It is required when
          the type is SpecificDate.
        type: string
      creationDate:
        description: When this cancellation schedule is created.
        type: string
      note:
        description: The cancellation note. Max 500 characters.
        maxLength: 500
        type: string
      type:
        allOf:
        - $ref: '#/definitions/CancellationScheduleType'
        description: Cancellation type
    type: object
  CancellationScheduleType:
    enum:
    - EndOfTerm
    - Immediate
    - SpecificDate
    type: string
    x-enum-varnames:
    - CancellationScheduleType_EndOfTerm
    - CancellationScheduleType_Immediate
    - CancellationScheduleType_SpecificDate
  CommitDimension:
    description: The commit dimension. There may be one or more commit dimensions
      defined in single product, offer or entitlement.
    properties:
      category:
        type: string
      description:
        type: string
      isUserCreated:
        description: |-
          Whether this commit dimension is newly created by user,
          when creating AWS Marketplace Contract private offer.
        type: boolean
      key:
        description: API name of the dimension
        type: string
      length:
        description: |-
          The term length for the commit amount, such as 6 months, or 1 year.
          The length is used together with timeUnit.
          If the length is zero, use the TermEndTime.
        type: integer
      maximumUsers:
        default: 1000000
        description: The maximum number of users for PER_USER commit
        maximum: 1000000
        minimum: 1
        type: integer
      minimumUsers:
        default: 1
        description: The minimum number of users for PER_USER commit
        maximum: 1000000
        minimum: 1
        type: integer
      name:
        description: Display name of the dimension
        type: string
      quantity:
        description: The quantity of this commit.
        type: integer
      rate:
        description: The commit amount. For GCP, it is monthly commitment.
        type: number
      term:
        description: The term of the commit amount. It is used for front-end display
          only.
        type: string
      termEndTime:
        description: The end time of the commit term.
        type: string
      timeUnit:
        allOf:
        - $ref: '#/definitions/TimeUnit'
        description: The term unit for the commit amount.
      type:
        allOf:
        - $ref: '#/definitions/CommitDimensionType'
        description: The type of the commit dimension. Applicable only to Azure Marketplace.
      types:
        description: These indicate whether the dimension covers metering, entitlement,
          or support for external metering
        items:
          type: string
        type: array
    type: object
  CommitDimensionType:
    enum:
    - FLAT_RATE
    - PER_USER
    type: string
    x-enum-varnames:
    - CommitDimensionType_FLAT_RATE
    - CommitDimensionType_PER_USER
  CommitRevenueDetail:
    properties:
      amount:
        description: The total amount of the commit revenue.
        type: number
      description:
        type: string
      expression:
        type: string
      key:
        type: string
      name:
        type: string
      quantity:
        description: The quantity of the commit dimension. Default is 1.
        type: integer
      rate:
        description: The unit price of the commit dimension.
        type: number
    type: object
  CompanyInfo:
    properties:
      addressLine1:
        type: string
      addressLine2:
        type: string
      city:
        type: string
      country:
        type: string
      emailDomain:
        type: string
      name:
        type: string
      postalCode:
        type: string
      state:
        type: string
      validFrom:
        description: When the company info becomes valid. in format "2006-01-02T15:04:05Z"
        type: string
    type: object
  Contact:
    properties:
      company:
        type: string
      email:
        type: string
      name:
        type: string
    type: object
  CreateAndUpdateAddonParams:
    properties:
      amount:
        description: The amount of the addon.
        type: number
      description:
        description: The description of the addon.
        maxLength: 300
        type: string
      name:
        description: The name of the addon.
        maxLength: 50
        minLength: 4
        type: string
    type: object
  CreateBuyerParams:
    properties:
      adyenCustomerId:
        description: Adyen customerId of this buyer. If not provided but Partner is
          ADYEN, will create a new customer on Adyen.
        type: string
      companyInfo:
        allOf:
        - $ref: '#/definitions/CompanyInfo'
        description: Optional. CompanyInfo of the buyer.
      customerId:
        description: The customer ID to recognize the cloud marketplace buyer in your
          internal system.
        type: string
      description:
        description: The description of the buyer.
        type: string
      lagoCustomerId:
        description: Optional. The Lago Customer ID of the buyer.
        type: string
      metronomeCustomerId:
        description: Optional. The Metronome Customer ID of the buyer.
        type: string
      name:
        description: The name of the buyer.
        type: string
      orbCustomerId:
        description: Optional. The Orb Customer ID of the buyer.
        type: string
      partner:
        allOf:
        - $ref: '#/definitions/Partner'
        description: The channel partner where this buyer is billed. Only STRIPE &
          ADYEN are supported at the moment.
      paymentConfig:
        allOf:
        - $ref: '#/definitions/PaymentConfig'
        description: Payment config for billing.
      stripeCustomerId:
        description: Stripe customerId of this buyer. If not provided but Partner
          is STRIPE, will create a new customer on stripe.
        type: string
    type: object
  CreateEntitlementParams:
    properties:
      buyerId:
        type: string
      endDate:
        description: |-
          The end date of the entitlement. If it is null, the entitlement will ends based on the offer.
          If it is in the past, the entitlement will be created as CANCELLED status.
        type: string
      offerId:
        type: string
      organizationId:
        type: string
      startDate:
        description: |-
          The start date of the entitlement. If it is null, the entitlement starts immediately.
          It can be in the future or in the past.
        type: string
    type: object
  CreateUsageRecordGroupParams:
    properties:
      billableRecords:
        description: for usage metering API v2, don't use it together with the records
          v1.
        items:
          $ref: '#/definitions/MeteringUsageRecord'
        type: array
      entitlementID:
        type: string
      id:
        description: |-
          The uuid of the UsageRecordGroup (the size is up to 36 characters).
          Optional, if not provided, suger will generate one.
        type: string
      metaInfo:
        allOf:
        - $ref: '#/definitions/MeteringUsageRecordGroupMetaInfo'
        description: read-only, don't set it up when reporting the usage record group.
      organizationID:
        type: string
      records:
        additionalProperties:
          type: number
        description: for usage metering API v1, don't use it together with the billableRecords
          v2.
        type: object
      timestamp:
        description: |-
          The timestamp of when the usage records were generated.
          Optional, if not provided, the current report timestamp will be used.
          This is not the timestamp of when the usage records were reported to Suger.
        format: date-time
        type: string
    required:
    - entitlementID
    - organizationID
    - records
    type: object
  DivideEntitlementCommitParams:
    properties:
      commitAmount:
        description: |-
          The amount of the commit to be divided.
          If it is less or equal to 0.0, the total commit of the entitlement will be divided
          into multiple sub entitlement terms with credit.
        type: number
      startDates:
        description: |-
          The start dates of the sub entitlement terms.
          The end date of the last sub entitlement term is the end date of the parent entitlement term.
          The first start date must be the same as the start date of the parent entitlement term.
        items:
          format: date-time
          type: string
        type: array
    type: object
  EntitlementInfo:
    properties:
      addons:
        description: The addons for the entitlement.
        items:
          $ref: '#/definitions/BillingAddonRecord'
        type: array
      alertDaysBeforeEnd:
        description: Alert days before the end of the entitlement
        type: integer
      alibabaEntitlements:
        description: Nullable. Alibaba Entitlements from Alibaba Marketplace.
        items:
          $ref: '#/definitions/client.DescribeInstanceResponseBody'
        type: array
      alibabaOrders:
        description: Nullable. Alibaba Orders from Alibaba Marketplace.
        items:
          $ref: '#/definitions/client.DescribeOrderResponseBody'
        type: array
      autoRenew:
        description: Is this Entitlement Auto Renew enabled.
        type: boolean
      awsAgreement:
        allOf:
        - $ref: '#/definitions/AwsMarketplaceAgreementV2'
        description: Nullable. AWS agreement from AWS Marketplace.
      awsChannelPartner:
        allOf:
        - $ref: '#/definitions/AwsChannelPartner'
        description: The AWS channel partner (reseller), only applicable if this entitlement
          is based on AWS CPPO offer.
      awsEntitlements:
        description: Nullable. AWS Entitlements from AWS Marketplace.
        items:
          $ref: '#/definitions/types.Entitlement'
        type: array
      azureSubscriptions:
        description: Nullable. Azure Subscriptions from Azure Marketplace.
        items:
          $ref: '#/definitions/AzureMarketplaceSubscription'
        type: array
      billableDimensions:
        description: The dimensions for billable metric usage-based metering. It's
          for Suger(Stripe, Ayden) metering.
        items:
          $ref: '#/definitions/BillableDimension'
        type: array
      billingCycle:
        allOf:
        - $ref: '#/definitions/BillingCycle'
        description: Billing Cycle
      collectableAmount:
        description: The amount that the seller can collect. It excludes the marketplace
          commision fee.
        type: number
      commitAmount:
        description: |-
          The amount that the buyer has committed to pay.
          It can be the sum of payment installments if applicable.
        type: number
      commits:
        description: The dimensions for flatrate commitment (recurring or one-time).
        items:
          $ref: '#/definitions/CommitDimension'
        type: array
      currency:
        description: The default Currency is USD.
        type: string
      dimensions:
        description: |-
          The dimensions for usage-based metering. It's for usage metering in cloud marketplaces.
          The max size of dimensions is 50. The oversized dimensions won't be saved in the EntitlementInfo.
          But the dimensions can be accessed from the connected offer info or product info.
        items:
          $ref: '#/definitions/MeteringDimension'
        type: array
      dimensionsOversized:
        description: Whether the upper metering dimensions are oversized (exceed the
          max size 50).
        type: boolean
      disbursedAmount:
        description: The amount that has been disbursed to the seller account.
        type: number
      eulaType:
        $ref: '#/definitions/EulaType'
      eulaUrl:
        type: string
      gcpEntitlements:
        description: Nullable. GCP Entitlements from GCP Marketplace.
        items:
          $ref: '#/definitions/GcpMarketplaceEntitlement'
        type: array
      gcpPlans:
        description: Only applicable for GCP Marketplace Entitlements.
        items:
          $ref: '#/definitions/GcpMarketplaceProductPurchaseOptionSpec'
        type: array
      gracePeriodInDays:
        description: |-
          The grace period for the offer.
          It is same as the TrialConfig in DirectOfferInfo. But can be overridden at the entitlement level.
        type: integer
      grossAmount:
        description: The gross amount that the buyer has committed to pay, including
          usage metered amount.
        type: number
      invoicedAmount:
        description: The amount that the buyer has got invoiced.
        type: number
      netTermsInDays:
        description: |-
          The net terms for the offer.
          It is same as the TrialConfig in DirectOfferInfo. But can be overridden at the entitlement level.
        type: integer
      paymentInstallments:
        description: For flexible payment schedules
        items:
          $ref: '#/definitions/PaymentInstallment'
        type: array
      paymentSchedule:
        allOf:
        - $ref: '#/definitions/PaymentScheduleType'
        description: |-
          The payment schedule for the entitlement.
          PREPAY means the buyer pays before the service is provided.
          POSTPAY means the buyer pays after the service is provided.
      refundCancellationPolicy:
        type: string
      sellerNotes:
        type: string
      spaUrl:
        description: The URL with JWT as auth method for the entitlement SPA. It can
          be shared with the buyer to access the SPA without login.
        type: string
      trialConfig:
        allOf:
        - $ref: '#/definitions/TrialConfig'
        description: |-
          The trial configuration for the offer.
          It is same as the TrialConfig in DirectOfferInfo. But can be overridden at the entitlement level.
    type: object
  EntitlementStatus:
    enum:
    - ""
    - ACTIVE
    - CANCELLED
    - DELETED
    - PENDING_CANCEL
    - PENDING_START
    - SUSPENDED
    type: string
    x-enum-varnames:
    - EntitlementStatus_UNKNOWN
    - EntitlementStatus_ACTIVE
    - EntitlementStatus_CANCELLED
    - EntitlementStatus_DELETED
    - EntitlementStatus_PENDING_CANCEL
    - EntitlementStatus_PENDING_START
    - EntitlementStatus_SUSPENDED
  EntitlementTermInfo:
    properties:
      dimensionQuantityDecimalParts:
        additionalProperties:
          type: number
        description: |-
          The decimal part of the dimension quantity, in format of <dimensionKey, decimalPart>
          It is used to save the decimal part of the dimension quantity for AWS Marketplace only.
          Because AWS Marketplace only accepts integer for dimension quantity.
          If the dimension quantity is a decimal number, we need to save the decimal part for future use.
        type: object
      isCommitDivided:
        description: |-
          Whether the commit is divided into multiple sub entitlement terms.
          If true, it has subEntitlementTermIds.
        type: boolean
      parentEntitlementTermId:
        description: |-
          The partner's entitlement term ID. It stands for the partner's entitlement term.
          Applicable to the sub entitlement term only.
        type: string
      subEntitlementTermIds:
        description: All sub entitlement terms id of this entitlement term if it is
          commit divided.
        items:
          type: string
        type: array
      type:
        $ref: '#/definitions/EntitlementTermType'
    type: object
  EntitlementTermType:
    enum:
    - ""
    - AutoRenew
    - ManualRenew
    - PlanChange
    - QuantityChange
    - Signup
    - DivideCommit
    type: string
    x-enum-comments:
      EntitlementTermType_ManualRenew: also for Upsell
    x-enum-varnames:
    - EntitlementTermType_Unknown
    - EntitlementTermType_AutoRenew
    - EntitlementTermType_ManualRenew
    - EntitlementTermType_PlanChange
    - EntitlementTermType_QuantityChange
    - EntitlementTermType_Signup
    - EntitlementTermType_DivideCommit
  EntityType:
    enum:
    - ""
    - API_CLIENT
    - AUDITING_EVENT
    - AUTO_SHARE_TASK
    - BUYER
    - CONTACT
    - ENTITLEMENT
    - ENTITLEMENT_TERM
    - HEADLESS_ENTITLEMENTS
    - HUBSPOT_USER
    - INTEGRATION
    - INVOICE
    - NEW_CLIENT
    - NOTIFICATION_MESSAGE
    - OFFER
    - ORGANIZATION
    - PAYMENT_TRANSACTION
    - PRODUCT
    - REFERRAL
    - REVENUE_RECORD
    - SUPPORT_TICKET
    - UNPURCHASED_OFFERS
    - USAGE_RECORD_GROUP
    - USAGE_RECORD_REPORT
    - USER
    - WORKFLOW
    type: string
    x-enum-varnames:
    - EntityType_UNKNOWN
    - EntityType_API_CLIENT
    - EntityType_AUDITING_EVENT
    - EntityType_AUTO_SHARE_TASK
    - EntityType_BUYER
    - EntityType_CONTACT
    - EntityType_ENTITLEMENT
    - EntityType_ENTITLEMENT_TERM
    - EntityType_HEADLESS_ENTITLEMENTS
    - EntityType_HUBSPOT_USER
    - EntityType_INTEGRATION
    - EntityType_INVOICE
    - EntityType_NEW_CLIENT
    - EntityType_NOTIFICATION_MESSAGE
    - EntityType_OFFER
    - EntityType_ORGANIZATION
    - EntityType_PAYMENT_TRANSACTION
    - EntityType_PRODUCT
    - EntityType_REFERRAL
    - EntityType_REVENUE_RECORD
    - EntityType_SUPPORT_TICKET
    - EntityType_UNPURCHASED_OFFERS
    - EntityType_USAGE_RECORD_GROUP
    - EntityType_USAGE_RECORD_REPORT
    - EntityType_USER
    - EntityType_WORKFLOW
  EulaType:
    enum:
    - ""
    - SCMP
    - ECMP
    - RCMP
    - CUSTOM
    - ISV
    - CURRENT
    type: string
    x-enum-comments:
      EulaType_CURRENT: Current EULA, used for existing entitlement.
      EulaType_CUSTOM: Custom EULA
      EulaType_ECMP: AWS Enterprise Contract EULA
      EulaType_ISV: ISV standard / default EULA
      EulaType_RCMP: AWS Reseller Contract EULA
      EulaType_SCMP: AWS Standard Contract EULA
    x-enum-varnames:
    - EulaType_UNKNOWN
    - EulaType_SCMP
    - EulaType_ECMP
    - EulaType_RCMP
    - EulaType_CUSTOM
    - EulaType_ISV
    - EulaType_CURRENT
  GcpAmountConstraint:
    properties:
      defaultAmount:
        $ref: '#/definitions/GcpAmountUnit'
      maxAmount:
        $ref: '#/definitions/GcpAmountUnit'
      minAmount:
        $ref: '#/definitions/GcpAmountUnit'
    type: object
  GcpAmountUnit:
    properties:
      nanos:
        type: integer
      units:
        type: string
    type: object
  GcpCommitmentAmountPerPeriodTemplate:
    properties:
      currencyCode:
        type: string
      decimalAmountConstraint:
        $ref: '#/definitions/GcpAmountConstraint'
    type: object
  GcpMarketplaceConsumer:
    properties:
      project:
        description: The project name with format `projects/`.
        type: string
    type: object
  GcpMarketplaceDocument:
    properties:
      description:
        type: string
      documentBody:
        type: string
      documentType:
        description: such as "PARTNER_EULA"
        type: string
      externalGoogleLink:
        allOf:
        - $ref: '#/definitions/GcpMarketplaceExternalGoogleLink'
        description: The external link to Standard EULA such as https://cloud.google.com/terms/marketplace/eula-standard-v2-01272021.
      name:
        description: in format of "projects/{projectNumber}/agreements/{agreementId}/documents/{documentId}"
        type: string
      unstructuredDocument:
        $ref: '#/definitions/GcpMarketplaceUnstructuredDocument'
      updateTime:
        format: date-time
        type: string
    type: object
  GcpMarketplaceEntitlement:
    properties:
      account:
        description: |-
          The resource name of the account that this entitlement is based on,
          if any, in format ""providers/{provider_id}/accounts/{account_id}"
        type: string
      consumers:
        description: The resources using this entitlement, if applicable.
        items:
          $ref: '#/definitions/GcpMarketplaceConsumer'
        type: array
      createTime:
        format: date-time
        type: string
      id:
        description: Entitlement Id generated by GCP Marketplace. For Marketplace
          pub/sub event.
        type: string
      inputProperties:
        description: The custom properties that were collected from the user to create
          this entitlement.
        items:
          type: integer
        type: array
      messageToUser:
        description: |-
          Provider-supplied message that is displayed to the end user. Currently this is used to communicate progress and ETA for
          provisioning. This field can be updated only when a user is waiting for an action from the provider, i.e. entitlement state is
          EntitlementState.ENTITLEMENT_ACTIVATION_REQUESTED or EntitlementState.ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL.
          This field is cleared automatically when the entitlement state changes.
        type: string
      name:
        description: |-
          The resource name of the entitlement. Entitlement names have the form of
          `providers/{provider_id}/entitlements/{entitlement_id}`.
        type: string
      newOfferDuration:
        description: in ISO 8601 duration format, such as "P2Y3M". For Marketplace
          pub/sub event.
        type: string
      newOfferEndTime:
        description: |-
          Output only. The end time of the new offer. Field is empty if the pending plan change is not moving to an offer.
          If the offer was created with a term instead of a specified end date, this field is empty.
        type: string
      newOfferStartTime:
        description: Output only. The start time of the new offer. Field is empty
          if the pending plan change is not moving to an offer.
        type: string
      newPendingOffer:
        description: |-
          The name of the offer the entitlement is switching to upon a pending plan change. Only exists if the
          pending plan change is moving to an offer. Format:
          'projects/{project}/services/{service}/privateOffers/{offer-id}' OR
          'projects/{project}/services/{service}/standardOffers/{offer-id}',
          depending on whether the offer is private or public.
        type: string
      newPendingOfferDuration:
        description: |-
          The offer duration of the new offer in ISO 8601 duration format. Field is empty if the pending plan
          change is not moving to an offer since the entitlement is not pending, only the plan change is pending.
        type: string
      newPendingPlan:
        description: The identifier of the pending new plan. Required if the product
          has plans and the entitlement has a pending plan change.
        type: string
      newPlan:
        description: When the buyer changes plan, For Marketplace pub/sub event.
        type: string
      offer:
        description: |-
          The name of the offer that was procured. Field is empty if order was not made using an offer. Format:
          'projects/{project}/services/{service}/privateOffers/{offer-id}' OR 'projects/{project}/services/{service}/standardOffers/{offer-id}',
          depending on whether the offer is private or public.
        type: string
      offerDuration:
        description: |-
          The offer duration of the current offer in ISO 8601 duration format.
          Field is empty if entitlement was not made using an offer, such as "P1Y", "P2M"
        type: string
      offerEffectiveTime:
        description: When the offer is effective.
        format: date-time
        type: string
      offerEndTime:
        description: |-
          Output only. End time for the Offer association corresponding to this entitlement.
          The field is only populated if the entitlement is currently associated with an Offer.
        format: date-time
        type: string
      plan:
        description: The identifier of the plan that was procured. Required if the
          product has plans.
        type: string
      product:
        description: |-
          The identifier of the entity that was purchased. This may actually represent a product, quote, or offer.
          For Private offer, "projects/project-id/services/product-id.endpoints.partner-id.cloud.goog/privateOffers/private-offer-id"
        type: string
      productExternalName:
        description: The identifier of the product that was procured.
        type: string
      provider:
        description: The ID of the service provider under Cloud Commerce platform
          that this entitlement was created against.
        type: string
      quoteExternalName:
        description: The identifier of the quote that was used to procure, such as
          the private offer Id. Empty if the order is not purchased using a quote.
        type: string
      state:
        allOf:
        - $ref: '#/definitions/GcpMarketplaceEntitlementState'
        description: Enums of the Entitlement State. https://cloud.google.com/marketplace/docs/partners/commerce-procurement-api/reference/rest/v1/providers.entitlements#EntitlementState
      subscriptionEndTime:
        description: The End time for the subscription corresponding to this entitlement.
        format: date-time
        type: string
      updateTime:
        description: The last update timestamp. It is the endTime for the cancelled
          entitlement.
        format: date-time
        type: string
      usageReportingId:
        description: |-
          The consumerId to use when reporting usage through the Service Control API. See the consumerId field at
          Reporting Metrics (https://cloud.google.com/service-control/reporting-metrics) for more details.
          This field is present only if the product has usage-based billing configured.
        type: string
    type: object
  GcpMarketplaceEntitlementState:
    enum:
    - ENTITLEMENT_STATE_UNSPECIFIED
    - ENTITLEMENT_ACTIVATION_REQUESTED
    - ENTITLEMENT_ACTIVE
    - ENTITLEMENT_PENDING_CANCELLATION
    - ENTITLEMENT_CANCELLED
    - ENTITLEMENT_PENDING_PLAN_CHANGE
    - ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL
    - ENTITLEMENT_SUSPENDED
    type: string
    x-enum-varnames:
    - GcpMarketplaceEntitlementState_ENTITLEMENT_STATE_UNSPECIFIED
    - GcpMarketplaceEntitlementState_ENTITLEMENT_ACTIVATION_REQUESTED
    - GcpMarketplaceEntitlementState_ENTITLEMENT_ACTIVE
    - GcpMarketplaceEntitlementState_ENTITLEMENT_PENDING_CANCELLATION
    - GcpMarketplaceEntitlementState_ENTITLEMENT_CANCELLED
    - GcpMarketplaceEntitlementState_ENTITLEMENT_PENDING_PLAN_CHANGE
    - GcpMarketplaceEntitlementState_ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL
    - GcpMarketplaceEntitlementState_ENTITLEMENT_SUSPENDED
  GcpMarketplaceExistingOfferData:
    properties:
      entitlement:
        $ref: '#/definitions/GcpMarketplaceEntitlement'
      existingPriceModelType:
        $ref: '#/definitions/GcpMarketplacePrivateOfferPriceModelType'
      hasEntitlementChanged:
        type: boolean
      privateOffer:
        $ref: '#/definitions/GcpMarketplaceExistingPrivateOffer'
      standardOffer: {}
    type: object
  GcpMarketplaceExistingPrivateOffer:
    properties:
      agreement:
        type: string
      customEula:
        $ref: '#/definitions/GcpMarketplaceDocument'
      installmentTimeline:
        $ref: '#/definitions/GcpMarketplacePrivateOfferInstallmentTimeline'
      name:
        description: GCP private offer resource name.
        type: string
      offerTerm:
        $ref: '#/definitions/GcpMarketplacePrivateOfferTerm'
      paymentSchedule:
        $ref: '#/definitions/PaymentScheduleType'
      priceModel:
        allOf:
        - $ref: '#/definitions/GcpMarketplacePrivateOfferPriceModel'
        description: Nill if the offer has payment installments.
      serviceLevel:
        description: The Plan of the offer.
        type: string
    type: object
  GcpMarketplaceExternalGoogleLink:
    properties:
      uri:
        type: string
    type: object
  GcpMarketplaceIsvInfo:
    properties:
      contactEmail:
        type: string
      contactName:
        type: string
      partnerAdvantageAccountLegalName:
        type: string
      partnerAdvantageId:
        type: string
    type: object
  GcpMarketplaceMeteringMetricValue:
    properties:
      boolValue:
        description: 'BoolValue: A boolean value.'
        type: boolean
      doubleValue:
        description: 'DoubleValue: A double precision floating point value.'
        type: number
      endTime:
        description: |-
          EndTime: The end of the time period over which this metric value's
          measurement applies. If not specified,
          google.api.servicecontrol.v1.Operation.end_time will be used.
        type: string
      int64Value:
        description: 'Int64Value: A signed 64-bit integer value.'
        example: "0"
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Labels: The labels describing the metric value. See comments on
          google.api.servicecontrol.v1.Operation.labels for the overriding
          relationship. Note that this map must not contain monitored resource
          labels.
        type: object
      moneyValue:
        allOf:
        - $ref: '#/definitions/GcpMarketplaceMeteringMoney'
        description: 'MoneyValue: A money value.'
      startTime:
        description: |-
          StartTime: The start of the time period over which this metric
          value's measurement applies. The time period has different semantics
          for different metric types (cumulative, delta, and gauge). See the
          metric definition documentation in the service configuration for
          details. If not specified,
          google.api.servicecontrol.v1.Operation.start_time will be used.
        type: string
      stringValue:
        description: 'StringValue: A text string value.'
        type: string
    type: object
  GcpMarketplaceMeteringMetricValueSet:
    properties:
      metricName:
        description: 'MetricName: The metric name defined in the service configuration.'
        type: string
      metricValues:
        description: 'MetricValues: The values in this metric.'
        items:
          $ref: '#/definitions/GcpMarketplaceMeteringMetricValue'
        type: array
    type: object
  GcpMarketplaceMeteringMoney:
    properties:
      currencyCode:
        description: 'CurrencyCode: The three-letter currency code defined in ISO
          4217.'
        type: string
      nanos:
        description: |-
          Nanos: Number of nano (10^-9) units of the amount. The value must be
          between -999,999,999 and +999,999,999 inclusive. If `units` is
          positive, `nanos` must be positive or zero. If `units` is zero,
          `nanos` can be positive, zero, or negative. If `units` is negative,
          `nanos` must be negative or zero. For example $-1.75 is represented
          as `units`=-1 and `nanos`=-750,000,000.
        type: integer
      units:
        description: |-
          Units: The whole units of the amount. For example if `currencyCode`
          is "USD", then 1 unit is one US dollar.
        example: "0"
        type: string
    type: object
  GcpMarketplaceMeteringOperation:
    properties:
      consumerId:
        description: |-
          ConsumerId: Identity of the consumer who is using the service. This
          field should be filled in for the operations initiated by a consumer,
          but not for service-initiated operations that are not related to a
          specific consumer. - This can be in one of the following formats: -
          project:PROJECT_ID, - project`_`number:PROJECT_NUMBER, -
          projects/PROJECT_ID or PROJECT_NUMBER, - folders/FOLDER_NUMBER, -
          organizations/ORGANIZATION_NUMBER, - api`_`key:API_KEY.
        type: string
      endTime:
        description: |-
          EndTime: End time of the operation. Required when the operation is
          used in ServiceController.Report, but optional when the operation is
          used in ServiceController.Check.
        type: string
      labels:
        additionalProperties:
          type: string
        description: |-
          Labels: Labels describing the operation. Only the following labels
          are allowed: - Labels describing monitored resources as defined in
          the service configuration. - Default labels of metric values. When
          specified, labels defined in the metric value override these default.
          - The following labels defined by Google Cloud Platform: -
          `cloud.googleapis.com/location` describing the location where the
          operation happened, - `servicecontrol.googleapis.com/user_agent`
          describing the user agent of the API request, -
          `servicecontrol.googleapis.com/service_agent` describing the service
          used to handle the API request (e.g. ESP), -
          `servicecontrol.googleapis.com/platform` describing the platform
          where the API is served, such as App Engine, Compute Engine, or
          Kubernetes Engine.
        type: object
      metricValueSets:
        description: |-
          MetricValueSets: Represents information about this operation. Each
          MetricValueSet corresponds to a metric defined in the service
          configuration. The data type used in the MetricValueSet must agree
          with the data type specified in the metric definition. Within a
          single operation, it is not allowed to have more than one MetricValue
          instances that have the same metric names and identical label value
          combinations. If a request has such duplicated MetricValue instances,
          the entire request is rejected with an invalid argument error.
        items:
          $ref: '#/definitions/GcpMarketplaceMeteringMetricValueSet'
        type: array
      operationId:
        description: |-
          OperationId: Identity of the operation. This must be unique within
          the scope of the service that generated the operation. If the service
          calls Check() and Report() on the same operation, the two calls
          should carry the same id. UUID version 4 is recommended, though not
          required. In scenarios where an operation is computed from existing
          information and an idempotent id is desirable for deduplication
          purpose, UUID version 5 is recommended. See RFC 4122 for details.
        type: string
      operationName:
        description: |-
          OperationName: Fully qualified name of the operation. Reserved for
          future use.
        type: string
      startTime:
        description: 'StartTime: Required. Start time of the operation.'
        type: string
    type: object
  GcpMarketplaceOfferProration:
    enum:
    - PRORATION_UNSPECIFIED
    - NOT_PRORATED_ANNIVERSARY_DATES
    - PRORATED
    type: string
    x-enum-varnames:
    - GcpMarketplaceOfferProration_UNSPECIFIED
    - GcpMarketplaceOfferProration_NO
    - GcpMarketplaceOfferProration_YES
  GcpMarketplaceOfferStartPolicy:
    enum:
    - ""
    - OFFER_START_POLICY_IMMEDIATE
    - OFFER_START_POLICY_SCHEDULED
    type: string
    x-enum-varnames:
    - GcpMarketplaceOfferStartPolicy_UNKNOWN
    - GcpMarketplaceOfferStartPolicy_IMMEDIATE
    - GcpMarketplaceOfferStartPolicy_SCHEDULED
  GcpMarketplaceOfferTemplatePolicies:
    properties:
      allowAutoRenewal:
        type: boolean
      allowScheduledStartDate:
        type: boolean
      maxRenewalTimes:
        description: such as "3"
        type: string
      proration:
        $ref: '#/definitions/GcpMarketplaceOfferProration'
    type: object
  GcpMarketplacePriceModel:
    enum:
    - FREE
    - SUBSCRIPTION
    - USAGE
    - SUBSCRIPTION_PLUS_USAGE
    type: string
    x-enum-varnames:
    - GcpMarketplacePriceModel_FREE
    - GcpMarketplacePriceModel_SUBSCRIPTION
    - GcpMarketplacePriceModel_USAGE
    - GcpMarketplacePriceModel_SUBSCRIPTION_PLUS_USAGE
  GcpMarketplacePrivateOffer:
    properties:
      activeEntitlement:
        $ref: '#/definitions/GcpMarketplaceEntitlement'
      agencyEnabled:
        type: boolean
      agreement:
        description: |-
          The resource name of agreement(entitlement)
          In format of "projects/{projectNumber}/agreements/{agreementId}"
        type: string
      cancelTime:
        format: date-time
        type: string
      customEula:
        $ref: '#/definitions/GcpMarketplaceDocument'
      customerInfo:
        $ref: '#/definitions/GcpMarketplacePrivateOfferCustomerInfo'
      eulaAgreementDocument:
        $ref: '#/definitions/GcpMarketplaceDocument'
      existingOfferData:
        $ref: '#/definitions/GcpMarketplaceExistingOfferData'
      expireTime:
        format: date-time
        type: string
      features:
        items:
          $ref: '#/definitions/GcpMarketplaceProductFeatureValue'
        type: array
      installmentTimeline:
        $ref: '#/definitions/GcpMarketplacePrivateOfferInstallmentTimeline'
      lifecycleState:
        description: such as "PUBLISHED"
        type: string
      metricInformation:
        $ref: '#/definitions/GcpMarketplacePrivateOfferMetricInformation'
      migrationMetadata:
        $ref: '#/definitions/GcpMarketplacePrivateOfferMigrationMetadata'
      name:
        description: |-
          In format of "projects/{projectNumber}/services/{serviceName,
          such as service-name.endpoints.gcp-project-id.cloud.goog}/privateOffers/{privateOfferId}"
        type: string
      offerId:
        description: GCP private offer ID
        type: string
      offerSource:
        description: such as "OFFER" or "RESOLD" (resold via channel partner)
        enum:
        - OFFER
        - RESOLD
        type: string
      offerState:
        $ref: '#/definitions/GcpMarketplacePrivateOfferState'
      offerTerm:
        $ref: '#/definitions/GcpMarketplacePrivateOfferTerm'
      offerTitle:
        description: The offer title in the GCP Marketplace.
        type: string
      offerTitleAutoGenerated:
        type: boolean
      paymentSchedule:
        allOf:
        - $ref: '#/definitions/PaymentScheduleType'
        description: such as "PREPAY" or "POSTPAY"
      policies:
        additionalProperties:
          type: string
        type: object
      priceModel:
        allOf:
        - $ref: '#/definitions/GcpMarketplacePrivateOfferPriceModel'
        description: Nill if the offer has payment installments.
      priceModelType:
        $ref: '#/definitions/GcpMarketplacePrivateOfferPriceModelType'
      providerCancellationInternalNote:
        type: string
      providerInfo:
        $ref: '#/definitions/GcpMarketplacePrivateOfferProviderInfo'
      providerInternalNote:
        type: string
      providerPublicNote:
        type: string
      purchaseChannel:
        $ref: '#/definitions/GcpMarketplacePurchaseChannel'
      purchaseTime:
        format: date-time
        type: string
      replacementMetadata:
        $ref: '#/definitions/GcpMarketplacePrivateOfferReplacementMetadata'
      resellerInfo:
        allOf:
        - $ref: '#/definitions/GcpMarketplaceResellerInfo'
        description: The info of the reseller who resold the offer and when OfferSource
          is "RESOLD".
      serviceLevel:
        description: The Plan of the offer.
        type: string
      updateTime:
        format: date-time
        type: string
      useLegacyPartnerEula:
        type: boolean
      userLabels:
        items:
          type: string
        type: array
    type: object
  GcpMarketplacePrivateOfferCustomerInfo:
    properties:
      address:
        description: The address of the customer
        type: string
      contact:
        description: The contact name of the customer
        type: string
      email:
        description: The email address of the customer
        type: string
      organization:
        description: The company name of the customer
        type: string
      unverifiedBillingAccount:
        description: The GCP billing account ID of the customer
        type: string
    type: object
  GcpMarketplacePrivateOfferInstallment:
    properties:
      priceModel:
        $ref: '#/definitions/GcpMarketplacePrivateOfferPriceModel'
      startTime:
        format: date-time
        type: string
    type: object
  GcpMarketplacePrivateOfferInstallmentTimeline:
    properties:
      installments:
        items:
          $ref: '#/definitions/GcpMarketplacePrivateOfferInstallment'
        type: array
    type: object
  GcpMarketplacePrivateOfferMetricDetail:
    properties:
      displayName:
        description: such as "CPU"
        type: string
      parentCommerceService:
        description: in format of "projects/{projectNumber}/services/service-name.endpoints.gcp-project-id.cloud.goog"
        type: string
      skuId:
        description: such as "BC1B-6259-BF57"
        type: string
      tiers:
        description: Price tiers for this metric.
        items:
          $ref: '#/definitions/GcpPriceTier'
        type: array
      unitDescription:
        description: such as "minute"
        type: string
    type: object
  GcpMarketplacePrivateOfferMetricInformation:
    properties:
      metricDetails:
        items:
          $ref: '#/definitions/GcpMarketplacePrivateOfferMetricDetail'
        type: array
    type: object
  GcpMarketplacePrivateOfferMigrationMetadata:
    properties:
      inventoryFlavorExternalName:
        description: Plan name maybe with term suffix, such as "plan-name-P1Y"
        type: string
      productExternalName:
        description: in format of "product-service-id.endpoints.gcp-project-id.cloud.goog"
        type: string
      projectNumber:
        description: The GCP project number of the provider.
        type: string
      providerId:
        description: The GCP project ID of the provider.
        type: string
    type: object
  GcpMarketplacePrivateOfferPriceModel:
    properties:
      baseOffer:
        description: in format of "projects/{projectNumber}/services/service-name.endpoints.gcp-project-id.cloud.goog/standardOffers/base-offer-id"
        type: string
      commitment:
        $ref: '#/definitions/GcpMarketplacePrivateOfferPriceModelCommitment'
      fixedPrice:
        $ref: '#/definitions/GcpMarketplacePrivateOfferPriceModelFixed'
      oneTimeCredit:
        allOf:
        - $ref: '#/definitions/GcpPriceValue'
        description: The one time credit in amount of money
      overage:
        $ref: '#/definitions/GcpMarketplacePrivateOfferPriceModelOverage'
      payg:
        allOf:
        - $ref: '#/definitions/GcpMarketplacePrivateOfferPriceModelPayg'
        description: Pay as you go.
      previousCreditBalancePolicy:
        description: such as "PREVIOUS_CREDIT_BALANCE_POLICY_UNSPECIFIED"
        type: string
    type: object
  GcpMarketplacePrivateOfferPriceModelCommitment:
    properties:
      commitmentAmountPerPeriod:
        $ref: '#/definitions/GcpPriceValue'
      discount:
        $ref: '#/definitions/GcpMarketplacePrivateOfferPriceModelDiscount'
      period:
        $ref: '#/definitions/GcpPeriodDuration'
    type: object
  GcpMarketplacePrivateOfferPriceModelDiscount:
    properties:
      discountPercentage:
        allOf:
        - $ref: '#/definitions/GcpAmountUnit'
        description: |-
          such as {"units": "0", "nanos": 0} as no discount,
          or {"units": "10", "nanos": 0} as 10% off discount
      discountedPrice:
        allOf:
        - $ref: '#/definitions/GcpPriceValue'
        description: |-
          The discounted price of the private offer.
          If the discount is 10% off, and the original price is $100, then the discounted price is $90.
    type: object
  GcpMarketplacePrivateOfferPriceModelFixed:
    properties:
      discount:
        $ref: '#/definitions/GcpMarketplacePrivateOfferPriceModelDiscount'
      period:
        $ref: '#/definitions/GcpPeriodDuration'
    type: object
  GcpMarketplacePrivateOfferPriceModelOverage:
    properties:
      discount:
        $ref: '#/definitions/GcpMarketplacePrivateOfferPriceModelDiscount'
      skuDiscounts:
        description: 'TODO: need to define the type'
        items: {}
        type: array
    type: object
  GcpMarketplacePrivateOfferPriceModelPayg:
    properties:
      discount:
        $ref: '#/definitions/GcpMarketplacePrivateOfferPriceModelDiscount'
      skuDiscounts:
        description: 'TODO: need to define the type'
        items: {}
        type: array
    type: object
  GcpMarketplacePrivateOfferPriceModelType:
    enum:
    - ""
    - PRICE_MODEL_TYPE_UNSPECIFIED
    - CUD
    - FIXED_FEE
    - FIXED_FEE_WITH_OVERAGE
    - PAYG
    - PAYG_WITH_CUD
    type: string
    x-enum-varnames:
    - GcpMarketplacePrivateOfferPriceModelType_UNKNOWN
    - GcpMarketplacePrivateOfferPriceModelType_UNSPECIFIED
    - GcpMarketplacePrivateOfferPriceModelType_CUD
    - GcpMarketplacePrivateOfferPriceModelType_FIXED_FEE
    - GcpMarketplacePrivateOfferPriceModelType_FIXED_FEE_WITH_OVERAGE
    - GcpMarketplacePrivateOfferPriceModelType_PAYG
    - GcpMarketplacePrivateOfferPriceModelType_PAYG_WITH_CUD
  GcpMarketplacePrivateOfferProviderInfo:
    properties:
      creatorEmailAddress:
        description: The email address of who create the private offer in the provider.
        type: string
      salesContactEmail:
        description: The sales contact email of the provider.
        type: string
      salesContactName:
        description: The sales contact name of the provider.
        type: string
    type: object
  GcpMarketplacePrivateOfferReplacementMetadata:
    properties:
      cotermAlignment:
        type: string
      replacedOffer:
        description: |-
          The resource name of the private offer being replaced.
          in format of "projects/{projectNumber}/services/{productServiceName}/privateOffers/{privateOfferId}"
        type: string
      replacedOfferEndTime:
        format: date-time
        type: string
      replacementPolicy:
        type: string
    type: object
  GcpMarketplacePrivateOfferState:
    enum:
    - OFFER_ACTIVE
    - OFFER_ACTIVATING
    - OFFER_SCHEDULED
    - OFFER_ENTITLEMENT_ACCOUNT_PENDING
    - OFFER_PUBLISHED
    - OFFER_LAPSED
    - OFFER_EXPIRED
    - OFFER_CANCELLED
    - OFFER_UNAVAILABLE
    - OFFER_DRAFT
    type: string
    x-enum-varnames:
    - GcpMarketplacePrivateOfferState_OFFER_ACTIVE
    - GcpMarketplacePrivateOfferState_OFFER_ACTIVATING
    - GcpMarketplacePrivateOfferState_OFFER_SCHEDULED
    - GcpMarketplacePrivateOfferState_OFFER_ENTITLEMENT_ACCOUNT_PENDING
    - GcpMarketplacePrivateOfferState_OFFER_PUBLISHED
    - GcpMarketplacePrivateOfferState_OFFER_LAPSED
    - GcpMarketplacePrivateOfferState_OFFER_EXPIRED
    - GcpMarketplacePrivateOfferState_OFFER_CANCELLED
    - GcpMarketplacePrivateOfferState_OFFER_UNAVAILABLE
    - GcpMarketplacePrivateOfferState_OFFER_DRAFT
  GcpMarketplacePrivateOfferTerm:
    properties:
      enableScheduledStartTimes:
        type: boolean
      endTime:
        format: date-time
        type: string
      startPolicy:
        $ref: '#/definitions/GcpMarketplaceOfferStartPolicy'
      startTime:
        format: date-time
        type: string
      termDuration:
        $ref: '#/definitions/GcpPeriodDuration'
    type: object
  GcpMarketplacePrivateOfferTermDurationConstraint:
    properties:
      defaultDuration:
        $ref: '#/definitions/GcpPeriodDuration'
    type: object
  GcpMarketplacePrivateOfferTermTemplate:
    properties:
      enableScheduledStartTimes:
        type: boolean
      endTime:
        format: date-time
        type: string
      paymentRecurrence:
        type: string
      startPolicy:
        $ref: '#/definitions/GcpMarketplaceOfferStartPolicy'
      startTime:
        format: date-time
        type: string
      termDuration:
        $ref: '#/definitions/GcpPeriodDuration'
      termDurationConstraint:
        $ref: '#/definitions/GcpMarketplacePrivateOfferTermDurationConstraint'
    type: object
  GcpMarketplaceProduct:
    properties:
      createTime:
        format: date-time
        type: string
      derivedDiscoveryState:
        $ref: '#/definitions/GcpMarketplaceProductDerivedDiscoveryState'
      id:
        description: Nullable, GCP Marketplace Product UUID
        type: string
      lastPublishTime:
        format: date-time
        type: string
      listingSpec:
        $ref: '#/definitions/GcpMarketplaceProductListingSpec'
      marketplace:
        enum:
        - marketplaces/google-cloud
        type: string
      name:
        description: In format of "projects/{project-number}/listings/{product-name}.endpoints.{provider-id}.cloud.goog"
        type: string
      revisionCreateTime:
        format: date-time
        type: string
      revisionId:
        type: string
      service:
        description: In format of "services/{product-name}.endpoints.{provider-id}.cloud.goog"
        type: string
      serviceConfig:
        $ref: '#/definitions/GcpMarketplaceProductServiceConfig'
      validationSummary:
        description: 'TODO: add type'
    type: object
  GcpMarketplaceProductAccessState:
    enum:
    - ALLUSERS_ACCESSIBLE
    - NOT_ALLUSERS_ACCESSIBLE
    - NOT_PUBLISHED
    type: string
    x-enum-varnames:
    - GcpMarketplaceProductAccessState_ALLUSERS_ACCESSIBLE
    - GcpMarketplaceProductAccessState_NOT_ALLUSERS_ACCESSIBLE
    - GcpMarketplaceProductAccessState_NOT_PUBLISHED
  GcpMarketplaceProductDerivedDiscoveryState:
    properties:
      accessState:
        $ref: '#/definitions/GcpMarketplaceProductAccessState'
      searchState:
        enum:
        - ADMIN_OVERRIDE_UNSEARCHABLE
        - SEARCHABLE
        type: string
    type: object
  GcpMarketplaceProductDocumentationSpec:
    properties:
      description:
        type: string
      title:
        type: string
      uri:
        type: string
    type: object
  GcpMarketplaceProductExternalAccountSpec:
    properties:
      loginUri:
        type: string
      signupUri:
        type: string
      singleSignOnUri:
        type: string
    type: object
  GcpMarketplaceProductFeature:
    properties:
      description:
        type: string
      name:
        type: string
      title:
        type: string
    type: object
  GcpMarketplaceProductFeatureValue:
    properties:
      featureDescription:
        description: such as "CPU per VM"
        type: string
      featureName:
        description: such as "cpu"
        type: string
      featureTitle:
        description: such as "CPU"
        type: string
      featureValue:
        description: such as "2 CPU per VM"
        type: string
    type: object
  GcpMarketplaceProductInfo:
    properties:
      flavorExternalName:
        description: The service level (price plan) with time duration suffix, such
          as "basic-plan-P1Y"
        type: string
      productExternalName:
        type: string
      providerId:
        type: string
      serviceLevel:
        description: The price plan, such as "basic-plan"
        type: string
      serviceName:
        type: string
    type: object
  GcpMarketplaceProductLicenseSpec:
    properties:
      description:
        type: string
      uri:
        type: string
    type: object
  GcpMarketplaceProductListingSpec:
    properties:
      externalAccountSpec:
        $ref: '#/definitions/GcpMarketplaceProductExternalAccountSpec'
      listingType:
        enum:
        - BillingIntegratedManagedService
        type: string
      marketingSpec:
        $ref: '#/definitions/GcpMarketplaceProductMarketingSpec'
      purchaseSpec:
        $ref: '#/definitions/GcpMarketplaceProductPurchaseSpec'
      termsSpec:
        $ref: '#/definitions/GcpMarketplaceProductTermsSpec'
    type: object
  GcpMarketplaceProductMarketingSpec:
    properties:
      description:
        type: string
      displayNames:
        items:
          type: string
        type: array
      documentationSpecs:
        items:
          $ref: '#/definitions/GcpMarketplaceProductDocumentationSpec'
        type: array
      eulaUrl:
        type: string
      externalLicenseSpecs:
        items:
          $ref: '#/definitions/GcpMarketplaceProductLicenseSpec'
        type: array
      externalMarketingUrl:
        type: string
      icon:
        description: in format of "base64://..."
        type: string
      searchCategories:
        items:
          type: string
        type: array
      searchDescription:
        type: string
      searchKeywords:
        items:
          type: string
        type: array
      signupUri:
        type: string
      supportSpec:
        $ref: '#/definitions/GcpMarketplaceProductSupportSpec'
      tagLine:
        type: string
      title:
        type: string
    type: object
  GcpMarketplaceProductMeteringMetric:
    properties:
      description:
        description: 'Description: A detailed description of the metric, which can
          be used in documentation.'
        type: string
      displayName:
        type: string
      displayUnit:
        description: such as "min"
        type: string
      displayUnitDescription:
        description: such as "minute"
        type: string
      id:
        description: |-
          The usage metering metric/dimension key, all in lower case with underscore.
          It is in format of "{plan_id}_{usage_dimension_key}". For example, "basic_plan_storage".
        type: string
      metricKind:
        description: such as "DELTA"
        type: string
      name:
        description: |-
          Name: The resource name of the metric descriptor,
          in format of "{productServiceName}/{plan_id}_{usage_dimension_key}"
        type: string
      priceTiers:
        description: |-
          Price info of this usage metering metric.
          Only applicable for the default offer (plan) and private offer.
        items:
          $ref: '#/definitions/GcpPriceTier'
        type: array
      reportingUnit:
        description: such as "min"
        type: string
      skuId:
        description: The SKU ID of this usage metering metric. Applicable only in
          Private Offer.
        type: string
      unit:
        description: such as "min"
        type: string
      valueType:
        allOf:
        - $ref: '#/definitions/ValueType'
        description: such as "INT64"
    type: object
  GcpMarketplaceProductPriceInfo:
    properties:
      description:
        type: string
      priceModel:
        $ref: '#/definitions/GcpMarketplacePriceModel'
      subscriptionPlans:
        description: Subscription Plan (Flat Commitment)
        items:
          $ref: '#/definitions/GcpMarketplaceProductSubscriptionPlan'
        type: array
      usageFees:
        description: Usage Metering Dimension/Metric if available
        items:
          $ref: '#/definitions/GcpMarketplaceProductUsageFee'
        type: array
    type: object
  GcpMarketplaceProductPurchaseOptionSpec:
    properties:
      featureValues:
        items:
          $ref: '#/definitions/GcpMarketplaceProductFeatureValue'
        type: array
      name:
        description: The plan ID, such as "starter", without the duration suffix,
          such as "P1Y".
        type: string
      priceInfo:
        $ref: '#/definitions/GcpMarketplaceProductPriceInfo'
      purchaseMode:
        enum:
        - PURCHASE_MODE_PRIVATE
        - PURCHASE_MODE_PUBLIC
        type: string
      title:
        description: such as "Starter"
        type: string
    type: object
  GcpMarketplaceProductPurchaseSpec:
    properties:
      features:
        items:
          $ref: '#/definitions/GcpMarketplaceProductFeature'
        type: array
      metrics:
        description: GCP Marketplace Product Usage Metering Dimension/Metric
        items:
          $ref: '#/definitions/GcpMarketplaceProductMeteringMetric'
        type: array
      purchaseOptionSpecs:
        description: GCP Marketplace Product Pricing Plans
        items:
          $ref: '#/definitions/GcpMarketplaceProductPurchaseOptionSpec'
        type: array
    type: object
  GcpMarketplaceProductServiceConfig:
    properties:
      billing:
        $ref: '#/definitions/GcpMarketplaceProductServiceConfigBilling'
      metrics:
        items:
          $ref: '#/definitions/GcpMarketplaceProductMeteringMetric'
        type: array
      name:
        description: in format of "product-name.endpoints.gcp-project-id.cloud.goog"
        type: string
      producerProjectId:
        description: The GCP project ID of the producer.
        type: string
      title:
        description: The title of the product listing.
        type: string
    type: object
  GcpMarketplaceProductServiceConfigBilling:
    properties:
      metrics:
        description: |-
          The list of metrics that are available for billing for the product.
          In format of "product-name.endpoints.gcp-project-id.cloud.goog/plan_name_metric_name"
        items:
          type: string
        type: array
    type: object
  GcpMarketplaceProductSubscriptionPlan:
    properties:
      period:
        description: such as "ONE_YEAR", "TWO_YEAR", "THREE_YEAR"
        type: string
      price:
        $ref: '#/definitions/GcpPriceValue'
    type: object
  GcpMarketplaceProductSupportSpec:
    properties:
      description:
        type: string
      email:
        type: string
      uri:
        type: string
    type: object
  GcpMarketplaceProductTermsSpec:
    properties:
      eulaUri:
        type: string
      inlineEula:
        description: 'TODO: need to define the type'
      standardEula:
        description: 'TODO: need to define the type'
    type: object
  GcpMarketplaceProductUsageFee:
    properties:
      displayQuantity:
        description: such as 1
        type: integer
      metricId:
        description: such as "Starter_storage"
        type: string
      priceTiers:
        items:
          $ref: '#/definitions/GcpPriceTier'
        type: array
    type: object
  GcpMarketplacePurchaseChannel:
    properties:
      marketplace:
        type: boolean
      reseller:
        type: boolean
    type: object
  GcpMarketplaceResellerInfo:
    properties:
      billingAccountId:
        type: string
      billingAccountNickname:
        type: string
      billingAccountOrgDisplayName:
        type: string
      billingAccountType:
        type: string
      notesToReseller:
        type: string
      partnerAccountName:
        description: In the format of ""organizations/{GcpOrganizationID}/partnerAccounts/{partnerAccountID}"
        type: string
      resellOfferTemplateId:
        type: string
      resellerContactEmail:
        type: string
      resellerContactName:
        type: string
      resellerPrivateOfferPlanId:
        type: string
      resellerPrivateOfferPlanScope:
        type: string
      subBillingAccount:
        description: In the format of "billingAccounts/..."
        type: string
    type: object
  GcpMarketplaceResellerPrivateOfferPlan:
    properties:
      acceptanceDeadlineTime:
        format: date-time
        type: string
      agreement:
        description: |-
          The resource name of agreement(entitlement)
          In format of "projects/{projectNumber}/agreements/{agreementId}"
        type: string
      agreementDocuments:
        $ref: '#/definitions/GcpMarketplaceResellerPrivateOfferPlanAgreementDocuments'
      amendmentContext: {}
      displayName:
        type: string
      durationConfig:
        $ref: '#/definitions/GcpMarketplaceResellerPrivateOfferPlanDurationConfig'
      features:
        items:
          $ref: '#/definitions/GcpMarketplaceProductFeatureValue'
        type: array
      installmentTimelineTemplate:
        $ref: '#/definitions/GcpMarketplaceResellerPrivateOfferPlanInstallmentTimelineTemplate'
      isvInfo:
        $ref: '#/definitions/GcpMarketplaceIsvInfo'
      margin:
        $ref: '#/definitions/GcpMarketplaceResellerPrivateOfferPlanMargin'
      metaInfo:
        $ref: '#/definitions/GcpMarketplaceResellerPrivateOfferPlanMetainfo'
      name:
        description: In format of "projects/{projectNumber}/partnerAccounts/{partnerAccountId}/resellerPrivateOfferPlans/{resellerPrivateOfferPlanId}"
        type: string
      offerTemplatePolicies:
        $ref: '#/definitions/GcpMarketplaceOfferTemplatePolicies'
      offerTermTemplate:
        $ref: '#/definitions/GcpMarketplacePrivateOfferTermTemplate'
      paymentSchedule:
        $ref: '#/definitions/PaymentScheduleType'
      priceModelTemplate:
        allOf:
        - $ref: '#/definitions/GcpMarketplaceResellerPrivateOfferPlanPriceModelTemplate'
        description: Nill if this reseller private offer plan has installmentTimelineTemplate
          (payment installments).
      productInfo:
        $ref: '#/definitions/GcpMarketplaceProductInfo'
      replacementMetadata: {}
      resellOfferTemplate:
        description: in format of "resellOfferTemplates/{resellOfferTemplateId}"
        type: string
      resellerInfo:
        $ref: '#/definitions/GcpMarketplaceResellerInfo'
      reusePolicy:
        $ref: '#/definitions/GcpMarketplaceResellerPrivateOfferPlanReusePolicy'
      startPolicy:
        $ref: '#/definitions/GcpMarketplaceStartPolicy'
      state:
        $ref: '#/definitions/GcpMarketplaceResellerPrivateOfferPlanState'
      stateTransitions:
        items:
          $ref: '#/definitions/GcpMarketplaceResellerPrivateOfferPlanStateTransition'
        type: array
      updateTime:
        format: date-time
        type: string
    type: object
  GcpMarketplaceResellerPrivateOfferPlanAgreementDocuments:
    properties:
      isvToCustomerAgreementDocument:
        $ref: '#/definitions/GcpMarketplaceDocument'
      isvToResellerAgreementDocument:
        $ref: '#/definitions/GcpMarketplaceDocument'
    type: object
  GcpMarketplaceResellerPrivateOfferPlanDurationConfig:
    properties:
      endTime:
        format: date-time
        type: string
      startTime:
        format: date-time
        type: string
    type: object
  GcpMarketplaceResellerPrivateOfferPlanInstallmentTemplate:
    properties:
      priceModelTemplate:
        $ref: '#/definitions/GcpMarketplaceResellerPrivateOfferPlanPriceModelTemplate'
      startTime:
        format: date-time
        type: string
    type: object
  GcpMarketplaceResellerPrivateOfferPlanInstallmentTimelineTemplate:
    properties:
      installmentTemplates:
        items:
          $ref: '#/definitions/GcpMarketplaceResellerPrivateOfferPlanInstallmentTemplate'
        type: array
    type: object
  GcpMarketplaceResellerPrivateOfferPlanMargin:
    properties:
      marginPercentage:
        $ref: '#/definitions/GcpMarketplaceResellerPrivateOfferPlanMarginPercentage'
    type: object
  GcpMarketplaceResellerPrivateOfferPlanMarginPercentage:
    properties:
      value:
        description: The percentage value of the margin in the range of 0 to 100.
        type: string
    type: object
  GcpMarketplaceResellerPrivateOfferPlanMetainfo:
    properties:
      gcpOrganizationId:
        description: Gcp Organiztion ID from integration with GCP Marketplace.
        type: string
      gcpProjectNumber:
        description: Gcp Project Number from integration with GCP Marketplace.
        type: string
    type: object
  GcpMarketplaceResellerPrivateOfferPlanNewState:
    properties:
      stateType:
        $ref: '#/definitions/GcpMarketplaceResellerPrivateOfferPlanStateType'
    type: object
  GcpMarketplaceResellerPrivateOfferPlanPriceModelSkuList:
    properties:
      skus:
        items:
          type: string
        type: array
    type: object
  GcpMarketplaceResellerPrivateOfferPlanPriceModelSkuRepresentation:
    properties:
      skuGroupList: {}
      skuList:
        $ref: '#/definitions/GcpMarketplaceResellerPrivateOfferPlanPriceModelSkuList'
      skus:
        type: string
    type: object
  GcpMarketplaceResellerPrivateOfferPlanPriceModelTemplate:
    properties:
      baseOffer:
        description: in format of "projects/{projectNumber}/services/service-name.endpoints.gcp-project-id.cloud.goog/standardOffers/base-offer-id"
        type: string
      commitment:
        $ref: '#/definitions/GcpMarketplaceResellerPrivateOfferPlanPriceModelTemplateCommitment'
      consumption:
        enum:
        - overage
        - payg
        type: string
      fixedPrice:
        $ref: '#/definitions/GcpMarketplaceResellerPrivateOfferPlanPriceModelTemplateFixedPrice'
      overage:
        $ref: '#/definitions/GcpMarketplaceResellerPrivateOfferPlanPriceModelTemplateOverage'
      payg:
        $ref: '#/definitions/GcpMarketplaceResellerPrivateOfferPlanPriceModelTemplatePayg'
      subscription:
        enum:
        - fixedPrice
        - commitment
        type: string
    type: object
  GcpMarketplaceResellerPrivateOfferPlanPriceModelTemplateCommitment:
    properties:
      commitmentAmountPerPeriodTemplate:
        $ref: '#/definitions/GcpCommitmentAmountPerPeriodTemplate'
      discountTemplate:
        $ref: '#/definitions/GcpPriceModelDiscountTemplate'
      period:
        $ref: '#/definitions/GcpPeriodDuration'
    type: object
  GcpMarketplaceResellerPrivateOfferPlanPriceModelTemplateFixedPrice:
    properties:
      discountTemplate:
        $ref: '#/definitions/GcpPriceModelDiscountTemplate'
      period:
        $ref: '#/definitions/GcpPeriodDuration'
    type: object
  GcpMarketplaceResellerPrivateOfferPlanPriceModelTemplateOverage:
    properties:
      discountTemplate:
        $ref: '#/definitions/GcpPriceModelDiscountTemplate'
      skuDiscountTemplates:
        items: {}
        type: array
      skuRepresentation:
        $ref: '#/definitions/GcpMarketplaceResellerPrivateOfferPlanPriceModelSkuRepresentation'
    type: object
  GcpMarketplaceResellerPrivateOfferPlanPriceModelTemplatePayg:
    properties:
      discountTemplate:
        $ref: '#/definitions/GcpPriceModelDiscountTemplate'
      period:
        $ref: '#/definitions/GcpPeriodDuration'
      skuDiscountTemplates:
        items: {}
        type: array
      skuRepresentation:
        $ref: '#/definitions/GcpMarketplaceResellerPrivateOfferPlanPriceModelSkuRepresentation'
    type: object
  GcpMarketplaceResellerPrivateOfferPlanReusePolicy:
    enum:
    - ""
    - REUSE_POLICY_SINGLE_USE
    - REUSE_POLICY_MULTI_USE
    type: string
    x-enum-varnames:
    - GcpMarketplaceResellerPrivateOfferPlanReusePolicy_UNKNOWN
    - GcpMarketplaceResellerPrivateOfferPlanReusePolicy_SINGLE_USE
    - GcpMarketplaceResellerPrivateOfferPlanReusePolicy_MULTI_USE
  GcpMarketplaceResellerPrivateOfferPlanState:
    properties:
      cancellationReason: {}
      comment:
        type: string
      rejectionReason: {}
      stateType:
        $ref: '#/definitions/GcpMarketplaceResellerPrivateOfferPlanStateType'
    type: object
  GcpMarketplaceResellerPrivateOfferPlanStateTransition:
    properties:
      newState:
        $ref: '#/definitions/GcpMarketplaceResellerPrivateOfferPlanNewState'
      transitionTime:
        format: date-time
        type: string
    type: object
  GcpMarketplaceResellerPrivateOfferPlanStateType:
    enum:
    - ""
    - STATE_TYPE_DRAFT
    - STATE_TYPE_READY_TO_ACCEPT
    - STATE_TYPE_READY_TO_USE
    - STATE_TYPE_REJECTED
    - STATE_TYPE_USED
    - STATE_TYPE_CANCELED
    - STATE_TYPE_EXPIRED_NEVER_ACCEPTED
    - STATE_TYPE_EXPIRED_ACCEPTED
    type: string
    x-enum-varnames:
    - GcpMarketplaceResellerPrivateOfferPlanStateType_UNKNOWN
    - GcpMarketplaceResellerPrivateOfferPlanStateType_DRAFT
    - GcpMarketplaceResellerPrivateOfferPlanStateType_READY_TO_ACCEPT
    - GcpMarketplaceResellerPrivateOfferPlanStateType_READY_TO_USE
    - GcpMarketplaceResellerPrivateOfferPlanStateType_REJECTED
    - GcpMarketplaceResellerPrivateOfferPlanStateType_USED
    - GcpMarketplaceResellerPrivateOfferPlanStateType_CANCELED
    - GcpMarketplaceResellerPrivateOfferPlanStateType_EXPIRED_NEVER_ACCEPTED
    - GcpMarketplaceResellerPrivateOfferPlanStateType_EXPIRED_ACCEPTED
  GcpMarketplaceStartPolicy:
    enum:
    - ""
    - START_POLICY_ON_ACCEPTANCE
    - START_POLICY_SCHEDULED
    type: string
    x-enum-varnames:
    - GcpMarketplaceStartPolicy_UNKNOWN
    - GcpMarketplaceStartPolicy_ON_ACCEPTANCE
    - GcpMarketplaceStartPolicy_SCHEDULED
  GcpMarketplaceUnstructuredDocument:
    properties:
      content:
        type: string
    type: object
  GcpMarketplaceUsagePlanPriceModel:
    enum:
    - ""
    - CUD_LIST_PRICE
    - CUD_ALL_USAGE_DISCOUNTED
    - USAGE_DISCOUNT_ONLY
    type: string
    x-enum-varnames:
    - GcpMarketplaceUsagePlanPriceModel_UNKNOWN
    - GcpMarketplaceUsagePlanPriceModel_CUD_LIST_PRICE
    - GcpMarketplaceUsagePlanPriceModel_CUD_ALL_USAGE_DISCOUNTED
    - GcpMarketplaceUsagePlanPriceModel_USAGE_DISCOUNT_ONLY
  GcpMarketplaceUserAccount:
    properties:
      approvals:
        description: The approvals for this account, that are permitted or have been
          completed.
        items:
          $ref: '#/definitions/GcpMarketplaceUserAccountApproval'
        type: array
      billingAccountId:
        description: The buyer's GCP billing account ID.
        type: string
      createTime:
        description: RFC3339 UTC timestamp
        format: date-time
        type: string
      id:
        description: GCP Marketplace User Account ID.
        type: string
      inputProperties:
        items:
          type: integer
        type: array
      name:
        description: |-
          The resource name of the account.
          Account names have the form providers/{provider_id}/accounts/{account_id}.
        type: string
      provider:
        description: The identifier of the service provider (SaaS Seller) that this
          account was created against.
        type: string
      state:
        allOf:
        - $ref: '#/definitions/GcpMarketplaceUserAccountState'
        description: The state of the account. An account might not be able to make
          a purchase if the billing account is suspended.
      updateTime:
        description: RFC3339 UTC timestamp
        format: date-time
        type: string
      userInfo:
        $ref: '#/definitions/GcpUserInfo'
    type: object
  GcpMarketplaceUserAccountApproval:
    properties:
      name:
        type: string
      reason:
        description: An explanation for the state of the approval.
        type: string
      state:
        $ref: '#/definitions/GcpMarketplaceUserAccountApprovalState'
      updateTime:
        description: RFC3339 UTC timestamp
        type: string
    type: object
  GcpMarketplaceUserAccountApprovalState:
    enum:
    - STATE_UNSPECIFIED
    - PENDING
    - APPROVED
    - REJECTED
    type: string
    x-enum-varnames:
    - GcpMarketplaceUserAccountApprovalState_STATE_UNSPECIFIED
    - GcpMarketplaceUserAccountApprovalState_PENDING
    - GcpMarketplaceUserAccountApprovalState_APPROVED
    - GcpMarketplaceUserAccountApprovalState_REJECTED
  GcpMarketplaceUserAccountState:
    enum:
    - ACCOUNT_STATE_UNSPECIFIED
    - ACCOUNT_ACTIVE
    type: string
    x-enum-varnames:
    - GcpMarketplaceUserAccountState_UNSPECIFIED
    - GcpMarketplaceUserAccountState_ACTIVE
  GcpPeriodDuration:
    properties:
      count:
        description: such as 1, 6, 12
        type: integer
      unit:
        $ref: '#/definitions/GcpPeriodDurationUnit'
    type: object
  GcpPeriodDurationUnit:
    enum:
    - MONTHLY_PERIOD
    - YEARLY_PERIOD
    type: string
    x-enum-varnames:
    - GcpPeriodDurationUnit_MONTHLY_PERIOD
    - GcpPeriodDurationUnit_YEARLY_PERIOD
  GcpPriceModelDiscountTemplate:
    properties:
      discountEconomics:
        type: string
      discountPercentage:
        $ref: '#/definitions/GcpAmountConstraint'
      discountedPrice:
        $ref: '#/definitions/GcpPriceValue'
      hideDiscountPercentage:
        type: boolean
    type: object
  GcpPriceTier:
    properties:
      fromAmount:
        description: such as 0
        type: number
      price:
        $ref: '#/definitions/GcpPriceValue'
      startingUsageAmount:
        description: such as "0"
        type: string
    type: object
  GcpPriceValue:
    properties:
      currencyCode:
        description: such as "USD"
        type: string
      nanos:
        description: for the decimal part, such as 30000000 = $0.03
        type: integer
      units:
        description: for the integer part, such as "500000" = $50K
        type: string
    type: object
  GcpUserInfo:
    properties:
      roles:
        description: 'An array of strings representing the user''s roles. Right now,
          it can be either: ** account_admin, which indicates that the user is a Billing
          Account Administrator of the billing account that purchased the product,
          or ** project_editor, which indicates that the user is a Project Editor,
          but not a Billing Administrator, of the project under that billing account.'
        items:
          type: string
        type: array
      user_identity:
        description: The user's obfuscated GAIA ID, which can be used to initiate
          Open ID Connect.
        type: string
    type: object
  GetApiClientAccessTokenParams:
    properties:
      id:
        description: The ID of the API Client.
        type: string
      organizationID:
        type: string
      secret:
        description: The secret of the API Client.
        type: string
    required:
    - id
    - organizationID
    - secret
    type: object
  GetRevenueReportParams:
    properties:
      buyerID:
        description: Optional, if available, return the report for the Buyer.
        type: string
      entitlementID:
        description: Optional, if available, return the report for the Entitlement.
        type: string
      organizationID:
        description: Required. If the productID & entitlementID are emtpy, return
          the report for the entire Organization.
        type: string
      partner:
        enum:
        - AWS
        - AZURE
        - GCP
        type: string
      productID:
        description: Optional, if available, return the report for the Product.
        type: string
      reportType:
        $ref: '#/definitions/RevenueReportType'
      service:
        enum:
        - MARKETPLACE
        type: string
    required:
    - organizationID
    - partner
    - reportType
    - service
    type: object
  IdentityBuyer:
    properties:
      contactIds:
        items:
          type: string
        type: array
      creationTime:
        format: date-time
        type: string
      description:
        type: string
      externalID:
        type: string
      id:
        type: string
      info:
        $ref: '#/definitions/BuyerInfo'
      lastUpdateTime:
        format: date-time
        type: string
      name:
        type: string
      organizationID:
        type: string
      partner:
        $ref: '#/definitions/Partner'
    type: object
  IdentityConctactInfo:
    properties:
      companyLocation:
        type: string
      companyName:
        type: string
      lastModifiedBy:
        type: string
      phoneNumber:
        type: string
      role:
        type: string
    type: object
  IdentityContact:
    properties:
      creationTime:
        type: string
      emailAddress:
        type: string
      id:
        description: This is generated by Suger. When you create a new contact, do
          not provide.
        type: string
      info:
        $ref: '#/definitions/IdentityConctactInfo'
      lastUpdateTime:
        type: string
      name:
        type: string
      organizationID:
        type: string
    type: object
  InvoiceAddFixedFee:
    properties:
      endDate:
        format: date-time
        type: string
      quantity:
        type: integer
      rate:
        type: number
      reason:
        type: string
      startDate:
        format: date-time
        type: string
    type: object
  InvoiceAdjustDiscountByDimension:
    properties:
      dimensionKey:
        type: string
      discount:
        $ref: '#/definitions/BillingDiscount'
      reason:
        type: string
    type: object
  InvoiceAdjustMinimumSpendByDimension:
    properties:
      dimensionKey:
        type: string
      minimumSpend:
        type: number
      reason:
        type: string
    type: object
  InvoiceAdjustOverallDiscount:
    properties:
      discount:
        $ref: '#/definitions/BillingDiscount'
      reason:
        type: string
    type: object
  InvoiceAdjustOverallMinimumSpend:
    properties:
      minimumSpend:
        type: number
      reason:
        type: string
    type: object
  LastModifiedBy:
    properties:
      email:
        description: The email of the creator.
        type: string
      entityId:
        description: The ID of the creator.
        type: string
      entityType:
        allOf:
        - $ref: '#/definitions/EntityType'
        description: The Entity type of the creator, either USER or API_CLIENT.
      name:
        description: The name of the creator.
        type: string
    type: object
  ListNotificationEventsResponse:
    properties:
      nextOffset:
        description: If it is nil, it means there is no more records.
        type: integer
      notificationEvents:
        items:
          $ref: '#/definitions/NotificationEvent'
        type: array
      totalCount:
        description: Only available when the request is made with offset=0.
        type: integer
    type: object
  ListNotificationMessagesResponse:
    properties:
      nextOffset:
        description: |-
          The next offset to use in the next request to get the next page of notification messages.
          If this field is null, there are no more notification messages to get.
        type: integer
      notificationMessages:
        items:
          $ref: '#/definitions/NotificationMessage'
        type: array
      totalCount:
        description: |-
          The total number of notification messages.
          Only available when the request is made with the first offset = 0.
        type: integer
    type: object
  ListRevenueRecordDetailsResponse:
    properties:
      nextOffset:
        type: integer
      revenueRecordDetails:
        items:
          $ref: '#/definitions/RevenueRecordDetail'
        type: array
    type: object
  ListRevenueRecordsResponse:
    properties:
      nextOffset:
        type: integer
      revenueRecords:
        items:
          $ref: '#/definitions/RevenueRecord'
        type: array
    type: object
  ListSupportTicketsResponse:
    properties:
      items:
        items:
          $ref: '#/definitions/SupportTicket'
        type: array
      totalCount:
        description: Only available when the request is made with offset=0.
        type: integer
    type: object
  ListUsageMeteringDailyRecordsResponse:
    properties:
      nextOffset:
        type: integer
      usageMeteringDailyRecords:
        items:
          $ref: '#/definitions/UsageMeteringDailyRecord'
        type: array
    type: object
  ListUsageRecordGroupsResponse:
    properties:
      nextOffset:
        type: integer
      usageRecordGroups:
        items:
          $ref: '#/definitions/MeteringUsageRecordGroup'
        type: array
    type: object
  ListUsageRecordReportsResponse:
    properties:
      nextOffset:
        type: integer
      usageRecordReports:
        items:
          $ref: '#/definitions/MeteringUsageRecordReport'
        type: array
    type: object
  MeteringDimension:
    description: The dimension to meter usage in entitlement.
    properties:
      category:
        type: string
      description:
        type: string
      includedBaseQuantities:
        description: how many quantities of this dimension are included in the commit.
        items:
          $ref: '#/definitions/AzureIncludedBaseQuantity'
        type: array
      key:
        type: string
      name:
        description: Display name of the dimension. For GCP Marketplace, it is the
          metering metric ID without plan prefix.
        type: string
      planId:
        description: |-
          The plan ID of the metering dimension. Applicable to GCP Marketplace only.
          No ISO duration suffix.
        type: string
      planName:
        description: |-
          The name of the plan for the metering dimension. Applicable to GCP Marketplace only.
          It may contains the ISO duration suffix, such as P1Y.
        type: string
      priceTiers:
        description: The price tiers of the metering dimension. Applicable to GCP
          Marketplace only.
        items:
          $ref: '#/definitions/GcpPriceTier'
        type: array
      rate:
        description: The unit price of this usage metering dimension.
        type: number
      skuId:
        description: The SKU ID of the metering dimension. Applicable to GCP Marketplace
          only.
        type: string
      types:
        items:
          type: string
        type: array
      usageCount:
        allOf:
        - $ref: '#/definitions/UsageCount'
        description: The current Dimension Usage Count. Available when call GetEntitlement
          API.
      valueType:
        allOf:
        - $ref: '#/definitions/ValueType'
        description: The value type of the metering dimension quantity. Applicable
          to GCP Marketplace only.
    type: object
  MeteringUsageRecord:
    properties:
      key:
        description: Key is the unique identifier of a billable metric.
        type: string
      properties:
        additionalProperties: true
        description: |-
          Properties is the filters of a billable metric.
          It should be equal to the filters of the billable metric.
        type: object
      quantity:
        description: The quantity (or numeric value) of a billable metric.
        type: number
    type: object
  MeteringUsageRecordGroup:
    properties:
      buyerID:
        type: string
      creationTime:
        format: date-time
        type: string
      entitlementID:
        type: string
      id:
        type: string
      lastUpdateTime:
        format: date-time
        type: string
      metaInfo:
        $ref: '#/definitions/MeteringUsageRecordGroupMetaInfo'
      organizationID:
        type: string
      partner:
        enum:
        - AWS
        - AZURE
        - GCP
        type: string
      records:
        additionalProperties:
          type: number
        type: object
      serialID:
        type: integer
      status:
        type: string
      usageRecordReportID:
        type: string
    type: object
  MeteringUsageRecordGroupByKey:
    properties:
      groupBysExpression:
        description: GroupBysExpression is string expression of array of group bys.
        type: string
      id:
        description: ID is billableMetric ID (Key)
        type: string
    type: object
  MeteringUsageRecordGroupMetaInfo:
    properties:
      SkipValidation:
        description: If it is true, the validation of the usage record group is skipped.
        type: boolean
      billableRecords:
        description: for usage metering API v2
        items:
          $ref: '#/definitions/MeteringUsageRecord'
        type: array
      lagoAmount:
        description: |-
          The lago amount (in dollars) of the customer.
          This field keeps the largest of the monthly amount.
          So it can only be updated when the invoice month increases.
        type: number
      lagoSubscriptionID:
        description: The lago subscription ID of the customer.
        type: string
      lagoUsageStartTime:
        description: The lago usage start time of the customer usage.
        format: date-time
        type: string
      metronomeDailyCostAmount:
        description: The metronome daily cost amount (in dollars) of the customer.
        type: number
      metronomeInvoiceID:
        description: The metronome invoice ID of the customer.
        type: string
      metronomeMonthlyInvoiceAmount:
        description: |-
          The metronome monthly invoice amount (in dollars) of the customer.
          This field keeps the largest amount of the invoice month.
          So it can only be updated when the invoice month increases.
        type: number
      metronomeMonthlyInvoiceAmountAdjusted:
        description: |-
          The metronome monthly invoice amount (in dollars) of the customer, which is adjusted by the seller.
          This field is populated only when the invoice amount is decreased by the seller via credit granting.
        type: number
      originRecords:
        additionalProperties:
          type: number
        description: |-
          The original records reported by the customer before convertion.
          If no dimension mapping is applied, this field is the same as the records field.
        type: object
      source:
        allOf:
        - $ref: '#/definitions/UsageRecordGroupSource'
        description: The source of the usage record group. Can be from Suger API or
          other third party services, such as Metronome.
      timestamp:
        description: |-
          The timestamp (UTC)) of when the usage records were generated.
          Optional, if not provided, the current report timestamp will be used.
        format: date-time
        type: string
    type: object
  MeteringUsageRecordReport:
    properties:
      buyerID:
        type: string
      creationTime:
        format: date-time
        type: string
      entitlementID:
        type: string
      entitlementTermID:
        type: string
      id:
        type: string
      info:
        $ref: '#/definitions/MeteringUsageRecordReportInfo'
      organizationID:
        type: string
      partner:
        type: string
      productID:
        type: string
    type: object
  MeteringUsageRecordReportInfo:
    properties:
      aggregatedBillableRecords:
        description: The aggregated billable records from the usage metering API v2.
        items:
          $ref: '#/definitions/AggregatedMeteringUsageRecord'
        type: array
      alibabaMeteringRequest:
        allOf:
        - $ref: '#/definitions/client.PushMeteringDataRequest'
        description: The raw request to call Alibaba metering service.
      alibabaMeteringResponse:
        allOf:
        - $ref: '#/definitions/client.PushMeteringDataResponseBody'
        description: The raw response from Alibaba metering service.
      awsMeteringRequest:
        allOf:
        - $ref: '#/definitions/AwsMarketplaceMeteringBatchMeterUsageInput'
        description: The raw request to call AWS metering service.
      awsMeteringResponse:
        allOf:
        - $ref: '#/definitions/marketplacemetering.BatchMeterUsageOutput'
        description: The raw response from AWS metering service.
      azureMeteringRequest:
        allOf:
        - $ref: '#/definitions/AzureMarketplaceMeteringBatchUsageEvent'
        description: The raw request to call Azure metering service.
      azureMeteringResponse:
        allOf:
        - $ref: '#/definitions/github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.BatchUsageEventOkResponse'
        description: The raw response from Azure metering service.
      commitAmount:
        description: The amount of the commit if applicable.
        type: number
      creditAmount:
        description: The amount of the credit if applicable.
        type: number
      creditRecords:
        additionalProperties:
          type: number
        description: The credit usage records in the map of <DimensionKey, Count>
          for usage metering API v1.
        type: object
      decimalParts:
        additionalProperties:
          type: number
        description: |-
          The decimal parts of the usage dimension quantity in the map of <DimensionKey, DecimalPart>,
          before this usage record report.
        type: object
      dimensionCategories:
        additionalProperties:
          type: string
        description: |-
          The categories of the usage records in the map of <DimensionKey, Category>.
          The dimension category is required when reporting usage records to Alibaba Marketplace.
          It comes from the metering dimension category.
        type: object
      dimensionUnitListPrice:
        additionalProperties:
          type: number
        description: The public list price of each dimension in the map of <DimensionKey,
          UnitPrice>.
        type: object
      dimensionUnitPrice:
        additionalProperties:
          type: number
        description: |-
          The unit price of each dimension in the map of <DimensionKey, UnitPrice>.
          It can be the negotiated price in the private offer or the public list price.
        type: object
      endTime:
        description: time in UTC when the UsageRecordReport ends
        format: date-time
        type: string
      gcpMeteringRequest:
        allOf:
        - $ref: '#/definitions/GcpMarketplaceMeteringOperation'
        description: The raw request to call GCP metering service.
      gcpMeteringResponse:
        allOf:
        - $ref: '#/definitions/servicecontrol.ReportResponse'
        description: The raw response from GCP metering service.
      includedRecords:
        additionalProperties:
          type: number
        description: The included usage records in the map of <DimensionKey, Count>
          for usage metering API v1.
        type: object
      message:
        type: string
      newDecimalParts:
        additionalProperties:
          type: number
        description: |-
          The decimal parts of the usage dimension quantity in the map of <DimensionKey, DecimalPart>,
          after this usage record report.
        type: object
      partner:
        description: The partner where this usage record report is sent to. Such as
          AWS, AZURE or GCP.
        type: string
      recordsToReportBeforeAdjustmentAtListPrice:
        additionalProperties:
          type: number
        description: |-
          The usage records to report before the adjustment by the commit with additional usage at list price,
          in the map of <DimensionKey, Count>.
        type: object
      reportedRecords:
        additionalProperties:
          type: number
        description: The reported usage records in the map of <DimensionKey, Count>
          for usage metering API v1.
        type: object
      startTime:
        description: time in UTC when the UsageRecordReport starts
        format: date-time
        type: string
      status:
        $ref: '#/definitions/UsageRecordReportStatus'
      usageRecordGroupIds:
        description: The IDs of UsageRecordGroups aggregated in this UsageRecordReport.
        items:
          type: string
        type: array
      usedCommitAmount:
        description: The amount of the used commit before this usage record report
          if applicable.
        type: number
      usedCommitAmountIncrement:
        description: The amount of the used commit increment in this usage record
          report if applicable.
        type: number
      usedCreditAmount:
        description: The amount of the used credit before this usage record report
          if applicable.
        type: number
      usedCreditAmountIncrement:
        description: The amount of the used credit increment in this usage record
          report if applicable.
        type: number
    type: object
  NewUsageRecordGroup:
    properties:
      billableRecords:
        description: for usage metering API v2, don't use it together with the records
          v1.
        items:
          $ref: '#/definitions/MeteringUsageRecord'
        type: array
      entitlementID:
        type: string
      metaInfo:
        allOf:
        - $ref: '#/definitions/MeteringUsageRecordGroupMetaInfo'
        description: read-only, don't set it when validating or reporting the usage
          record group.
      records:
        additionalProperties:
          type: number
        description: for usage metering API v1, don't use it together with the billableRecords
          v2.
        type: object
      timestamp:
        description: |-
          The timestamp of when the usage records were generated.
          Optional, if not provided, the current report timestamp will be used.
          This is not the timestamp of when the usage records were reported to Suger.
        format: date-time
        type: string
    required:
    - entitlementID
    - records
    type: object
  NotificationChannel:
    enum:
    - EMAIL
    - SLACK
    - SMS
    - SNS
    - SALESFORCE
    - WEBHOOK
    - SUGER_SUPPORT
    - MICROSOFT_TEAMS
    type: string
    x-enum-comments:
      NotificationChannel_MICROSOFT_TEAMS: Notify Microsoft Teams.
      NotificationChannel_SNS: Amazon Simple Notification Service
      NotificationChannel_SUGER_SUPPORT: Notify Suger Support team.
    x-enum-varnames:
    - NotificationChannel_EMAIL
    - NotificationChannel_SLACK
    - NotificationChannel_SMS
    - NotificationChannel_SNS
    - NotificationChannel_SALESFORCE
    - NotificationChannel_WEBHOOK
    - NotificationChannel_SUGER_SUPPORT
    - NotificationChannel_MICROSOFT_TEAMS
  NotificationEvent:
    properties:
      action:
        $ref: '#/definitions/NotificationEventAction'
      ccContactIds:
        description: Cc contactIds that will receive this notification
        items:
          type: string
        type: array
      channels:
        description: The list of channels this event will be sent to, e.g., ["SLACK",
          "EMAIL"]
        items:
          $ref: '#/definitions/NotificationChannel'
        type: array
      contactEmails:
        description: Contact emails that will receive this notification
        items:
          type: string
        type: array
      contactIds:
        description: ContactIds that will receive this notification
        items:
          type: string
        type: array
      createdBy:
        allOf:
        - $ref: '#/definitions/LastModifiedBy'
        description: |-
          Who originally created or triggered this notification event.
          It can be user or API client.
      customFields:
        additionalProperties: true
        description: Custom fields of the notification event.
        type: object
      entityID:
        type: string
      entityName:
        description: The name of the entity.
        type: string
      entityStatus:
        type: string
      entityType:
        $ref: '#/definitions/EntityType'
      eventID:
        description: notification event id.
        type: string
      eventStatus:
        allOf:
        - $ref: '#/definitions/NotificationEventStatus'
        description: notification event status.
      info:
        description: Additional info of the notification event.
      isActionItem:
        description: If this notification event is an action item.
        type: boolean
      lastUpdateTime:
        description: timestamp of the event when it is updated.
        format: date-time
        type: string
      message:
        description: The message of the notification event such as email body, action
          item description.
        type: string
      organizationID:
        description: suger organization id.
        type: string
      partner:
        allOf:
        - $ref: '#/definitions/Partner'
        description: the partner of the entity. Optional.
      priority:
        allOf:
        - $ref: '#/definitions/AuditingEventPriority'
        description: The priority of the notification event.
      requireAudit:
        description: If this notification event is an auditing event and need to store
          in DB.
        type: boolean
      timestamp:
        description: timestamp of the event when it is scheduled or created.
        format: date-time
        type: string
      title:
        description: The title of the notification event such as email subject, action
          item title.
        type: string
      trackEvents:
        description: The track events of the notification event.
        items:
          $ref: '#/definitions/TrackEvent'
        type: array
    type: object
  NotificationEventAction:
    enum:
    - ""
    - ABNORMAL_ALERT
    - ACCEPT
    - ADD
    - APPROVE
    - CANCEL
    - CLOSE
    - CREATE
    - DELETE
    - DISBURSE
    - END_SOON
    - EXPIRE
    - EXPIRE_SOON
    - MERGE
    - METER
    - NEW_CLIENT_SIGNUP
    - NOTIFY
    - NOTIFY_CONTACTS
    - OPEN_EMAIL
    - PENDING_CANCEL
    - PENDING_ACCEPTANCE
    - REINSTATE
    - REJECT
    - REOPEN
    - CHARGE
    - REFUND
    - ISSUE
    - ROTATE_SECRET
    - SUSPEND
    - TEST
    - UPDATE
    - ACE_ENGAGEMENT_SCORE_UPDATE
    - ACE_SALES_REP_UPDATE
    - ACE_CUSTOMER_EMAIL_UPDATE
    - SUBMIT_APPROVAL_REQUEST
    - REVIEW_APPROVAL_REQUEST
    - COMPLETE
    type: string
    x-enum-comments:
      NotificationEventAction_ADD: Add user to organization
    x-enum-varnames:
    - NotificationEventAction_UNKNOWN
    - NotificationEventAction_ABNORMAL_ALERT
    - NotificationEventAction_ACCEPT
    - NotificationEventAction_ADD
    - NotificationEventAction_APPROVE
    - NotificationEventAction_CANCEL
    - NotificationEventAction_CLOSE
    - NotificationEventAction_CREATE
    - NotificationEventAction_DELETE
    - NotificationEventAction_DISBURSE
    - NotificationEventAction_END_SOON
    - NotificationEventAction_EXPIRE
    - NotificationEventAction_EXPIRE_SOON
    - NotificationEventAction_MERGE
    - NotificationEventAction_METER
    - NotificationEventAction_NEW_CLIENT_SIGNUP
    - NotificationEventAction_NOTIFY
    - NotificationEventAction_NOTIFY_CONTACTS
    - NotificationEventAction_OPEN_EMAIL
    - NotificationEventAction_PENDING_CANCEL
    - NotificationEventAction_PENDING_ACCEPTANCE
    - NotificationEventAction_REINSTATE
    - NotificationEventAction_REJECT
    - NotificationEventAction_REOPEN
    - NotificationEventAction_CHARGE
    - NotificationEventAction_REFUND
    - NotificationEventAction_ISSUE
    - NotificationEventAction_ROTATE_SECRET
    - NotificationEventAction_SUSPEND
    - NotificationEventAction_TEST
    - NotificationEventAction_UPDATE
    - NotificationEventAction_ACE_ENGAGEMENT_SCORE_UPDATE
    - NotificationEventAction_ACE_SALES_REP_UPDATE
    - NotificationEventAction_ACE_CUSTOMER_EMAIL_UPDATE
    - NotificationEventAction_SUBMIT_APPROVAL_REQUEST
    - NotificationEventAction_REVIEW_APPROVAL_REQUEST
    - NotificationEventAction_COMPLETE
  NotificationEventStatus:
    enum:
    - ""
    - SCHEDULED
    - PENDING
    - DONE
    - FAILED
    type: string
    x-enum-varnames:
    - NotificationEventStatus_UNKNOWN
    - NotificationEventStatus_SCHEDULED
    - NotificationEventStatus_PENDING
    - NotificationEventStatus_DONE
    - NotificationEventStatus_FAILED
  NotificationMessage:
    properties:
      creationTime:
        format: date-time
        type: string
      id:
        type: string
      info:
        $ref: '#/definitions/NotificationMessageInfo'
      organizationID:
        type: string
      recipient:
        type: string
      type:
        $ref: '#/definitions/NotificationChannel'
    type: object
  NotificationMessageInfo:
    properties:
      action:
        allOf:
        - $ref: '#/definitions/NotificationEventAction'
        description: The action of this notification message.
      ccRecipients:
        items:
          type: string
        type: array
      customFields:
        additionalProperties: true
        description: All other fields
        type: object
      htmlContent:
        description: The HTML content of the email.
        type: string
      rccRecipients:
        items:
          type: string
        type: array
      standardFields:
        additionalProperties: true
        description: The standard fields to render the email content.
        type: object
      subject:
        type: string
      textContent:
        description: The text content of the email in case the recipient's email client
          does not support HTML.
        type: string
    type: object
  OfferInfo:
    properties:
      additionalEulaUrls:
        description: |-
          The URL of the additional EULA files. Only applicable when EulaType = CUSTOM.
          The additional EULA files will be attached to the EULA file in the EulaUrl, and form a single EULA file.
        items:
          type: string
        type: array
      additionalResellerEulaUrls:
        description: The URL of the additional reseller EULA files. Only applicable
          when ResellerEulaType = CUSTOM.
        items:
          type: string
        type: array
      attachEulaType:
        allOf:
        - $ref: '#/definitions/EulaType'
        description: Attach the standard EULA file to the CUSTOM EULA file. Only applicable
          when EulaType = CUSTOM
      autoRenew:
        description: Is this offer Auto Renew enabled.
        type: boolean
      awsAgreementDuration:
        description: |-
          Aws private subscription offer Usage duration. ISO8601 format.
          P300D means the contract Usage start date At acceptance, and with duration 300 days.
        type: string
      awsChannelPartner:
        allOf:
        - $ref: '#/definitions/AwsChannelPartner'
        description: The AWS channel partner (reseller), only applicable for AWS Marketplace
          CPPO_OUT or CPPO offers.
      awsCppoEventDetail:
        allOf:
        - $ref: '#/definitions/AwsMarketplaceEventBridgeEventDetail'
        description: AWS EventBridge Event, only applicable for AWS Marketplace CPPO
          offers.
      awsCppoOpportunity:
        allOf:
        - $ref: '#/definitions/AwsMarketplaceCppoOpportunity'
        description: AWS CPPO Opportunity, only applicable for AWS Marketplace CPPO_OUT
          or CPPO_IN offers.
      awsMarkupPercentage:
        description: AWS private reseller offer using markup percentage. 10.0 represent
          10% partner margin.
        type: number
      awsResaleAuthorizationId:
        description: AWS ResaleAuthorizationId(CPPO_IN offer id) for CPPO offers of
          the reseller.
        type: string
      azureOriginalPlan:
        allOf:
        - $ref: '#/definitions/AzureMarketplacePriceAndAvailabilityPrivateOfferPlan'
        description: The origin pricing of Azure plan. Only applicable for Azure Marketplace
          plans.
      azurePrivateOffer:
        allOf:
        - $ref: '#/definitions/AzureMarketplacePrivateOffer'
        description: The private offer for Azure Marketplace. Only applicable for
          Azure Marketplace private offers.
      azureProductVariant:
        allOf:
        - $ref: '#/definitions/AzureProductVariant'
        description: For Azure marketplace only.
      billableDimensions:
        description: Usage based metering dimensions based on Billable Metrics, managed
          by Suger only.
        items:
          $ref: '#/definitions/BillableDimension'
        type: array
      billingCycle:
        allOf:
        - $ref: '#/definitions/BillingCycle'
        description: Billing Cycle for the offer.
      buyerAwsAccountIds:
        description: The buyers' AWS Account IDs of this offer.
        items:
          type: string
        type: array
      buyerAzureTenants:
        description: The buyers' Azure tenants of this offer.
        items:
          $ref: '#/definitions/AzureAudience'
        type: array
      commitAmount:
        description: |-
          The amount that the buyer has committed to pay, before discount if applicable.
          It can be monthly commitment or total commitment.
          For frontend display or analysis purposes, not used for billing.
        type: number
      commitBillingIntervalInMonths:
        description: Billing interval in months for commitDimensions
        type: integer
      commits:
        description: Recurring flat fee for the offer, managed by cloud marketplaces
          or Suger.
        items:
          $ref: '#/definitions/CommitDimension'
        type: array
      currency:
        description: The currency code of the offer. ISO 4217 format.
        type: string
      dimensions:
        description: Usage based metering dimensions defined on cloud marketplaces,
          managed by Cloud marketplaces only.
        items:
          $ref: '#/definitions/MeteringDimension'
        type: array
      discountPercentage:
        description: |-
          The discount percentage off the original price. For example, 20 means 20% off. 0 means no discount.
          It can be discount off the commitment amount or discount off the usage price.
        type: number
      eulaType:
        $ref: '#/definitions/EulaType'
      eulaUrl:
        type: string
      gcpCustomerInfo:
        allOf:
        - $ref: '#/definitions/GcpMarketplacePrivateOfferCustomerInfo'
        description: Only required when creating GCP Marketplace private offer.
      gcpDuration:
        description: The duration of the offer in months. Only required when creating
          GCP Marketplace private offer.
        type: integer
      gcpMetrics:
        description: Only applicable for GCP Marketplace Offers (the default or private
          offer)
        items:
          $ref: '#/definitions/GcpMarketplaceProductMeteringMetric'
        type: array
      gcpPaymentSchedule:
        allOf:
        - $ref: '#/definitions/PaymentScheduleType'
        description: |-
          Only required when creating GCP Marketplace private offer,
          to specify the payment schedule for the private offer.
          TODO: It will be deprecated in the future and replaced by PaymentSchedule.
      gcpPlans:
        description: Only applicable for GCP Marketplace
        items:
          $ref: '#/definitions/GcpMarketplaceProductPurchaseOptionSpec'
        type: array
      gcpPrivateOffer:
        allOf:
        - $ref: '#/definitions/GcpMarketplacePrivateOffer'
        description: The private offer for GCP Marketplace. Only applicable for GCP
          Marketplace private offers.
      gcpProviderInfo:
        allOf:
        - $ref: '#/definitions/GcpMarketplacePrivateOfferProviderInfo'
        description: Only required when creating GCP Marketplace private offer.
      gcpProviderInternalNote:
        description: |-
          Optional when creating GCP Marketplace private offer.
          The internal note for the seller/ISV. It is only visible to the seller/ISV.
        type: string
      gcpProviderPublicNote:
        description: |-
          Optional when creating GCP Marketplace private offer. By default, it is the same as offer name.
          The public note for the buyer. It is visible to the buyer.
        type: string
      gcpResellerPrivateOfferPlan:
        $ref: '#/definitions/GcpMarketplaceResellerPrivateOfferPlan'
      gcpUsagePlanPriceModel:
        allOf:
        - $ref: '#/definitions/GcpMarketplaceUsagePlanPriceModel'
        description: Only applicable for GCP Marketplace with Usage plan. Not appliable
          for Subscription plan.
      gracePeriodInDays:
        description: |-
          The grace period in days for the offer.
          This is the number of days during which invoices remain in draft status, for reviewing.
          This filed can be overridden at the entitlement level.
        type: integer
      netTermsInDays:
        description: |-
          The net terms in days for the offer.
          This is the number of days the buyer has to pay the invoice.
          This filed can be overridden at the entitlement level.
        type: integer
      paymentInstallments:
        description: For flexible payment schedule, managed by cloud marketplaces
          or Suger.
        items:
          $ref: '#/definitions/PaymentInstallment'
        type: array
      paymentSchedule:
        allOf:
        - $ref: '#/definitions/PaymentScheduleType'
        description: |-
          The payment schedule for the offer.
          PREPAY means the buyer pays before the service is provided.
          POSTPAY means the buyer pays after the service is provided.
      privateOfferUrl:
        description: The URL of the private offer sent to buyers to accept. Only applicable
          for private offer.
        type: string
      proratedBilling:
        description: |-
          Prorated billing for the offer.
          If true, the billing is prorated based on the start date and end date.
          If false, the billing is not prorated.
          This filed can be overridden at the entitlement level.
        type: boolean
      refundCancellationPolicy:
        type: string
      resellerAttachEulaType:
        allOf:
        - $ref: '#/definitions/EulaType'
        description: Attach the standard EULA file to the CUSTOM EULA file. Only applicable
          when EulaType = CUSTOM
      resellerEulaType:
        allOf:
        - $ref: '#/definitions/EulaType'
        description: The type of the reseller EULA. Only applicable for CPPO offers.
      resellerEulaUrl:
        type: string
      sellerNotes:
        type: string
      startTime:
        description: |-
          Optional when creating AWS or GCP Marketplace private offer on the contract product.
          The future start time of the offer if it is not started on the acceptance.
        format: date-time
        type: string
      taxIds:
        description: |-
          Tax ids for the offer, used to calculate the tax amount for the offer.
          This field can be overridden at the entitlement level.
        items:
          type: string
        type: array
      trialConfig:
        allOf:
        - $ref: '#/definitions/TrialConfig'
        description: |-
          The offer for Direct. Only applicable for Direct offers.
          It is used in Stripe, Adyen, and other direct payment providers.
          The trial configuration for the offer.
      usageBillingIntervalInMonths:
        description: Billing interval in months for billableDimensions
        type: integer
      visibility:
        description: The default visibility of offer is PRIVATE.
        enum:
        - PRIVATE
        - PUBLIC
        type: string
    type: object
  OfferStatus:
    enum:
    - ""
    - INVALID
    - ACCEPTED
    - ACTIVE
    - CANCEL_FAILED
    - CANCEL_SUCCESS
    - CANCELLED
    - CREATE_FAILED
    - CREATE_SUCCESS
    - DELETED
    - DEPRECATED
    - DRAFT
    - EXPIRED
    - PENDING_ACCEPTANCE
    - PENDING_CANCEL
    - PENDING_CREATE
    - PENDING_UPDATE
    - PREVIEW
    - READY_TO_USE
    - REJECTED
    - RESTRICTED
    - TEST
    - UPDATE_FAILED
    - UPDATE_SUCCESS
    - USED
    type: string
    x-enum-comments:
      OfferStatus_USED: For AWS CPPO_OUT offer used by the channel partner.
    x-enum-varnames:
    - OfferStatus_UNKNOWN
    - OfferStatus_INVALID
    - OfferStatus_ACCEPTED
    - OfferStatus_ACTIVE
    - OfferStatus_CANCEL_FAILED
    - OfferStatus_CANCEL_SUCCESS
    - OfferStatus_CANCELLED
    - OfferStatus_CREATE_FAILED
    - OfferStatus_CREATE_SUCCESS
    - OfferStatus_DELETED
    - OfferStatus_DEPRECATED
    - OfferStatus_DRAFT
    - OfferStatus_EXPIRED
    - OfferStatus_PENDING_ACCEPTANCE
    - OfferStatus_PENDING_CANCEL
    - OfferStatus_PENDING_CREATE
    - OfferStatus_PENDING_UPDATE
    - OfferStatus_PREVIEW
    - OfferStatus_READY_TO_USE
    - OfferStatus_REJECTED
    - OfferStatus_RESTRICTED
    - OfferStatus_TEST
    - OfferStatus_UPDATE_FAILED
    - OfferStatus_UPDATE_SUCCESS
    - OfferStatus_USED
  OfferType:
    enum:
    - UNKNOWN
    - AMI
    - CONTAINER
    - CONTRACT
    - CPPO_OUT
    - CPPO_IN
    - CPPO
    - CUD
    - DEFAULT
    - FIXED_FEE
    - FIXED_FEE_WITH_OVERAGE
    - FLAT_RATE
    - FREE_TRIAL
    - PAYG
    - PAYG_WITH_CUD
    - PER_USER
    - PRIVATE
    - PROFESSIONAL_SERVICES
    - SUBSCRIPTION
    type: string
    x-enum-varnames:
    - OfferType_UNKNOWN
    - OfferType_AMI
    - OfferType_CONTAINER
    - OfferType_CONTRACT
    - OfferType_CPPO_OUT
    - OfferType_CPPO_IN
    - OfferType_CPPO
    - OfferType_CUD
    - OfferType_DEFAULT
    - OfferType_FIXED_FEE
    - OfferType_FIXED_FEE_WITH_OVERAGE
    - OfferType_FLAT_RATE
    - OfferType_FREE_TRIAL
    - OfferType_PAYG
    - OfferType_PAYG_WITH_CUD
    - OfferType_PER_USER
    - OfferType_PRIVATE
    - OfferType_PROFESSIONAL_SERVICES
    - OfferType_SUBSCRIPTION
  Partner:
    enum:
    - ""
    - ADYEN
    - ALIBABA
    - AWS
    - AWS_CHINA
    - AZURE
    - GCP
    - GOOGLE
    - HUBSPOT
    - INTUIT
    - LAGO
    - MARKETO
    - METRONOME
    - MICROSOFT
    - ORACLE
    - ORB
    - REDHAT
    - SALESFORCE
    - SLACK
    - SNOWFLAKE
    - STRIPE
    - ZOHO
    type: string
    x-enum-varnames:
    - Partner_UNKNOWN
    - Partner_ADYEN
    - Partner_ALIBABA
    - Partner_AWS
    - Partner_AWS_CHINA
    - Partner_AZURE
    - Partner_GCP
    - Partner_GOOGLE
    - Partner_HUBSPOT
    - Partner_INTUIT
    - Partner_LAGO
    - Partner_MARKETO
    - Partner_METRONOME
    - Partner_MICROSOFT
    - Partner_ORACLE
    - Partner_ORB
    - Partner_REDHAT
    - Partner_SALESFORCE
    - Partner_SLACK
    - Partner_SNOWFLAKE
    - Partner_STRIPE
    - Partner_ZOHO
  PartnerService:
    enum:
    - DEFAULT
    - ACE
    - BIGQUERY
    - BILLING
    - CHATBOT
    - COSELL
    - CRM
    - CPQ
    - DATABASE
    - DRIVE
    - EMAIL
    - MARKETPLACE
    - NETSUITE
    - PAYMENT
    - QUICKBOOKS
    - STORAGE
    - TEAMS
    type: string
    x-enum-comments:
      PartnerService_ACE: for AWS ACE Cosell
      PartnerService_BIGQUERY: for GCP Bigquery.
      PartnerService_BILLING: for Billing/metering service.
      PartnerService_COSELL: for Azure or GCP Co-sell
      PartnerService_DRIVE: for Google Drive.
      PartnerService_NETSUITE: for Oracle Netsuite.
      PartnerService_PAYMENT: for Stripe/Adyen
      PartnerService_QUICKBOOKS: for Intuit Quickbooks.
      PartnerService_STORAGE: for Google Cloud Storage.
      PartnerService_TEAMS: for Microsoft Teams
    x-enum-varnames:
    - PartnerService_DEFAULT
    - PartnerService_ACE
    - PartnerService_BIGQUERY
    - PartnerService_BILLING
    - PartnerService_CHATBOT
    - PartnerService_COSELL
    - PartnerService_CRM
    - PartnerService_CPQ
    - PartnerService_DATABASE
    - PartnerService_DRIVE
    - PartnerService_EMAIL
    - PartnerService_MARKETPLACE
    - PartnerService_NETSUITE
    - PartnerService_PAYMENT
    - PartnerService_QUICKBOOKS
    - PartnerService_STORAGE
    - PartnerService_TEAMS
  PartnerUsageMeteringConfig:
    properties:
      dimensionMapping:
        additionalProperties:
          $ref: '#/definitions/UsageMeteringDimensionMappingValue'
        description: |-
          Deprecated: Use DimensionMappingV2 instead.
          The mapping of the source dimension key to the destination dimension key of the usage metering.
        type: object
      dimensionMappingV2:
        additionalProperties:
          items:
            $ref: '#/definitions/UsageMeteringDimensionMappingValue'
          type: array
        description: |-
          The mapping of the source dimension key to the destination dimension keys of the usage metering.
          The destination dimension keys are the list of the destination dimension keys.
          So the source dimension key can be mapped to multiple destination dimension keys.
        type: object
      enableBillableDimension:
        type: boolean
      enableCommitWithAdditionalUsageAtListPrice:
        description: |-
          Enable the commit (discount) with additional usage metering at list price.
          Only applicable if EnableCommitWithAdditionalUsageMetering is true.
          The default is false, which means the commit with additional usage metering at the discounted price in the private offer.
          If set to true, the additional usage is metered at the list price (the price in public product listing) instead of the discounted price.
        type: boolean
      enableCommitWithAdditionalUsageMetering:
        description: |-
          Enable the commit with additional usage metering.
          The default is false, which means all usage records are reported to partner no matter how much is the commit.
          If set to true, the usage records will be reported to partner only if the current commit has been exhausted.
        type: boolean
      enableDimensionMapping:
        description: |-
          Enable the dimension mapping for the usage metering.
          The default is false, which means no dimension conversion and just use the origin dimension.
        type: boolean
      partner:
        allOf:
        - $ref: '#/definitions/Partner'
        description: The partner in this dimension mapping. Required. Such as AWS,
          AZURE or GCP.
    type: object
  PaymentConfig:
    properties:
      allowedWalletTypes:
        description: Allowed wallet types for this buyer, include payment methods
          from payment provider such as card, us_bank_account and credit.
        items:
          $ref: '#/definitions/BillingWalletType'
        type: array
      currency:
        description: Currency used for billing.
        type: string
      defaultWalletId:
        description: Default wallet id which is a stripe payment method used to invoice.
        type: string
    type: object
  PaymentInstallment:
    properties:
      amount:
        description: |-
          The amount the buyer has paid for this installment.
          If there is a discount off the original price, the amount is the discounted price.
        type: number
      chargeOn:
        description: |-
          When the buyer will be charged for this installment.
          If it is null, the buyer will be charged on the effective date of the entitlement.
        format: date-time
        type: string
      chargeOnStr:
        description: The charge on date in string format. It is used for front-end
          display only.
        type: string
      credit:
        description: |-
          Used in GCP Marketplace private offer as one-time credit.
          Default as zero if there is no credit.
        type: number
      discountPercentage:
        description: |-
          The discount percentage off the original price.
          For GCP Marketplace, it can be discount off the commitment amount or discount off the usage price.
          The value is between 0 to 100. For example, 20 means 20% off. Default as zero if there is no discount.
        type: number
      originalAmount:
        description: |-
          The original amount before discount if there is a discount off the original price.
          nil if there is no discount.
        type: number
    type: object
  PaymentScheduleType:
    enum:
    - ""
    - PREPAY
    - POSTPAY
    type: string
    x-enum-varnames:
    - PaymentScheduleType_UNKNOWN
    - PaymentScheduleType_PREPAY
    - PaymentScheduleType_POSTPAY
  PriceModelBasic:
    properties:
      unitAmount:
        type: number
    type: object
  PriceModelBulk:
    properties:
      bulkAmount:
        description: A currency amount to rate usage by
        type: number
      bulkSize:
        description: |-
          An integer amount to represent package size. For example, 1000 here would divide
          usage by 1000 before multiplying by package_amount in rating
        type: integer
    type: object
  PriceModelCategory:
    enum:
    - basic
    - tiered
    - bulk
    - volume
    - percentage
    - tiered-percentage
    - matrix
    type: string
    x-enum-varnames:
    - PriceModelCategory_Basic
    - PriceModelCategory_Tiered
    - PriceModelCategory_Bulk
    - PriceModelCategory_Volume
    - PriceModelCategory_Percentage
    - PriceModelCategory_TieredPercentage
    - PriceModelCategory_Matrix
  PriceModelMatrix:
    properties:
      defaultUnitAmount:
        type: number
      matrix:
        description: The matrix of the pricing model
        items:
          $ref: '#/definitions/PriceModelMatrixConfigGroup'
        type: array
    type: object
  PriceModelMatrixConfigGroup:
    properties:
      properties:
        items:
          $ref: '#/definitions/PriceModelMatrixProperty'
        type: array
      unitAmount:
        type: number
    type: object
  PriceModelMatrixProperty:
    properties:
      name:
        type: string
      value:
        type: string
    type: object
  PriceModelPercentage:
    properties:
      flatFee:
        type: number
      percentageRate:
        description: Basis point take rate per event
        type: number
    type: object
  PriceModelTiered:
    properties:
      tiers:
        items:
          $ref: '#/definitions/PriceModelTieredConfig'
        type: array
    type: object
  PriceModelTieredConfig:
    properties:
      firstUnit:
        description: Inclusive tier starting value
        type: number
      flatFee:
        type: number
      lastUnit:
        description: Exclusive tier ending value. If null, this is treated as the
          last tier
        type: number
      unitAmount:
        description: Amount per unit
        type: number
    type: object
  PriceModelTieredPercentage:
    properties:
      tiers:
        items:
          $ref: '#/definitions/PriceModelTieredPercentageConfig'
        type: array
    type: object
  PriceModelTieredPercentageConfig:
    properties:
      firstUnit:
        description: Inclusive tier starting value
        type: number
      flatFee:
        type: number
      lastUnit:
        description: Exclusive tier ending value. If null, this is treated as the
          last tier
        type: number
      percentageRate:
        type: number
    type: object
  PriceModelVolume:
    properties:
      tiers:
        items:
          $ref: '#/definitions/PriceModelVolumeConfig'
        type: array
    type: object
  PriceModelVolumeConfig:
    properties:
      flatFee:
        type: number
      maximumUnits:
        description: Upper bound for this tier
        type: number
      unitAmount:
        description: Amount per unit
        type: number
    type: object
  PrivateOfferDiscountType:
    enum:
    - absolute
    - percentage
    type: string
    x-enum-varnames:
    - PrivateOfferDiscountType_absolute
    - PrivateOfferDiscountType_percentage
  ProductInfo:
    properties:
      alibabaProduct:
        $ref: '#/definitions/AlibabaMarketplaceProduct'
      attributes:
        additionalProperties:
          type: string
        type: object
      awsAmiProduct:
        $ref: '#/definitions/AwsProduct'
      awsContainerProduct:
        $ref: '#/definitions/AwsProduct'
      awsProfessionalServicesProduct:
        $ref: '#/definitions/AwsProduct'
      awsSaasProduct:
        $ref: '#/definitions/AwsProduct'
      awsSnsSubscriptions:
        items:
          $ref: '#/definitions/AwsSnsSubscription'
        type: array
      azureProduct:
        $ref: '#/definitions/AzureProduct'
      azureProductResource:
        $ref: '#/definitions/AzureMarketplaceProductResource'
      commits:
        items:
          $ref: '#/definitions/CommitDimension'
        type: array
      currency:
        type: string
      dimensions:
        items:
          $ref: '#/definitions/MeteringDimension'
        type: array
      eulaType:
        allOf:
        - $ref: '#/definitions/EulaType'
        description: The public offer's EULA type.
      eulaUrl:
        description: The public offer's EULA URL.
        type: string
      gcpProduct:
        $ref: '#/definitions/GcpMarketplaceProduct'
      refundCancellationPolicy:
        type: string
      sellerNotes:
        type: string
      stripeProduct:
        $ref: '#/definitions/StripeProduct'
    type: object
  RevenueRecord:
    properties:
      amount:
        description: The revenue amount for the revenue report
        type: number
      buyerID:
        type: string
      collectableAmount:
        description: The revenue amount that the seller/ISV can collect.
        type: number
      currency:
        description: The currency of the revenue in ISO 4217 format, such as "USD".
        type: string
      date:
        description: The date for the revenue report
        format: date-time
        type: string
      disburseAmount:
        type: number
      disburseDate:
        format: date-time
        type: string
      entitlementID:
        type: string
      id:
        type: string
      info:
        $ref: '#/definitions/RevenueRecordInfo'
      invoiceAmount:
        type: number
      invoiceDate:
        format: date-time
        type: string
      organizationID:
        type: string
      partner:
        type: string
      paymentDueDate:
        format: date-time
        type: string
      productID:
        type: string
      refundDisburseAmount:
        type: number
      refundDisburseDate:
        format: date-time
        type: string
      refundInvoiceAmount:
        type: number
      refundInvoiceDate:
        format: date-time
        type: string
      taxAmount:
        type: number
    type: object
  RevenueRecordDetail:
    properties:
      awsRevenueRecordDetail:
        allOf:
        - $ref: '#/definitions/github_com_sugerio_marketplace-service_rds-db_lib.BillingAwsBillingEvent'
        description: For AWS Marketplace
      azureRevenueRecordDetail:
        allOf:
        - $ref: '#/definitions/github_com_sugerio_marketplace-service_rds-db_lib.BillingAzureCmaRevenue'
        description: For Azure Marketplace
      gcpRevenueRecordDetail:
        allOf:
        - $ref: '#/definitions/github_com_sugerio_marketplace-service_rds-db_lib.BillingGcpChargeUsage'
        description: For GCP Marketplace
    type: object
  RevenueRecordInfo:
    properties:
      awsRevenueRecords:
        description: For raw revenue records in AWS Marketplace
        items:
          $ref: '#/definitions/github_com_sugerio_marketplace-service_rds-db_lib.BillingAwsBillingEvent'
        type: array
      azureRevenueRecords:
        description: For raw revenue records in Azure Marketplace
        items:
          $ref: '#/definitions/github_com_sugerio_marketplace-service_rds-db_lib.BillingAzureCmaRevenue'
        type: array
      creditAmount:
        description: The credit amount used in the revenue record.
        type: number
      disbursementNotificationSent:
        description: Whether the disbursement notification has been sent to the seller/ISV.
        type: boolean
      gcpRevenueRecords:
        description: For raw revenue records in GCP Marketplace
        items:
          $ref: '#/definitions/github_com_sugerio_marketplace-service_rds-db_lib.BillingGcpChargeUsage'
        type: array
      idSource:
        description: Source of the revenue record ID.
        type: string
      resource:
        description: Resource name for the revenue record. Applicable only to GCP
          Marketplace.
        type: string
    type: object
  RevenueReport:
    properties:
      buyerID:
        type: string
      entitlementID:
        type: string
      organizationID:
        type: string
      partner:
        type: string
      productID:
        type: string
      reportDate:
        format: date-time
        type: string
      reportType:
        $ref: '#/definitions/RevenueReportType'
      revenueRecords:
        items:
          $ref: '#/definitions/RevenueRecord'
        type: array
      service:
        type: string
    type: object
  RevenueReportType:
    enum:
    - GrossAmount
    - InvoicedAmount
    - CollectableAmount
    - DisbursedAmount
    type: string
    x-enum-varnames:
    - RevenueReportType_GrossAmount
    - RevenueReportType_InvoicedAmount
    - RevenueReportType_CollectableAmount
    - RevenueReportType_DisbursedAmount
  StripeBalanceTransaction:
    properties:
      amount:
        description: Gross amount of this transaction (in cents (or local equivalent)).
          A positive value represents funds charged to another party, and a negative
          value represents funds sent to another party.
        type: integer
      available_on:
        description: The date that the transaction's net funds become available in
          the Stripe balance.
        type: integer
      chargeId:
        description: ID of the charge which the balance transaction comes from.
        type: string
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      exchange_rate:
        description: If applicable, this transaction uses an exchange rate. If money
          converts from currency A to currency B, then the `amount` in currency A,
          multipled by the `exchange_rate`, equals the `amount` in currency B. For
          example, if you charge a customer 10.00 EUR, the PaymentIntent's `amount`
          is `1000` and `currency` is `eur`. If this converts to 12.34 USD in your
          Stripe account, the BalanceTransaction's `amount` is `1234`, its `currency`
          is `usd`, and the `exchange_rate` is `1.234`.
        type: number
      fee:
        description: Fees (in cents (or local equivalent)) paid for this transaction.
          Represented as a positive integer when assessed.
        type: integer
      fee_details:
        description: Detailed breakdown of fees (in cents (or local equivalent)) paid
          for this transaction.
        items:
          $ref: '#/definitions/StripeBalanceTransactionFeeDetail'
        type: array
      id:
        description: Unique identifier for the object.
        type: string
      net:
        description: Net impact to a Stripe balance (in cents (or local equivalent)).
          A positive value represents incrementing a Stripe balance, and a negative
          value decrementing a Stripe balance. You can calculate the net impact of
          a transaction on a balance by `amount` - `fee`
        type: integer
      status:
        description: The transaction's net funds status in the Stripe balance, which
          are either `available` or `pending`.
        type: string
      type:
        description: 'Transaction type: `adjustment`, `advance`, `advance_funding`,
          `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`,
          `climate_order_purchase`, `climate_order_refund`, `connect_collection_transfer`,
          `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`,
          `issuing_dispute`, `issuing_transaction`, `obligation_outbound`, `obligation_reversal_inbound`,
          `payment`, `payment_failure_refund`, `payment_network_reserve_hold`, `payment_network_reserve_release`,
          `payment_refund`, `payment_reversal`, `payment_unreconciled`, `payout`,
          `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`,
          `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`,
          `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`.
          Learn more about [balance transaction types and what they represent](https://stripe.com/docs/reports/balance-transaction-types).
          To classify transactions for accounting purposes, consider `reporting_category`
          instead.'
        type: string
    type: object
  StripeBalanceTransactionFeeDetail:
    properties:
      amount:
        description: Amount of the fee, in cents.
        type: integer
      application:
        description: ID of the Connect application that earned the fee.
        type: string
      description:
        description: An arbitrary string attached to the object. Often useful for
          displaying to users.
        type: string
      type:
        description: 'Type of the fee, one of: `application_fee`, `payment_method_passthrough_fee`,
          `stripe_fee` or `tax`.'
        type: string
    type: object
  StripeCustomer:
    properties:
      address:
        $ref: '#/definitions/StripeCustomerAddress'
      description:
        type: string
      email:
        type: string
      id:
        description: The customer ID on the stripe platform.
        type: string
      metadata:
        additionalProperties:
          type: string
        description: Set of key-value pairs that you can attach to store additional
          information about customer.
        type: object
      name:
        type: string
      phone:
        type: string
    type: object
  StripeCustomerAddress:
    properties:
      city:
        description: City, district, suburb, town, or village.
        type: string
      country:
        description: Two-letter country code (ISO 3166-1 alpha-2)
        type: string
      line1:
        description: Address line 1 (e.g., street, PO Box, or company name).
        type: string
      line2:
        description: Address line 2 (e.g., apartment, suite, unit, or building).
        type: string
      postal_code:
        description: ZIP or postal code.
        type: string
      state:
        description: State, county, province, or region.
        type: string
    type: object
  StripeDispute:
    properties:
      amount:
        description: Disputed amount. Usually the amount of the charge, but it can
          differ (usually because of currency fluctuation or because only part of
          the order is disputed).
        type: integer
      chargeId:
        description: ID of the charge that's disputed.
        type: string
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      id:
        description: Unique identifier for the object.
        type: string
      is_charge_refundable:
        description: If true, it's still possible to refund the disputed payment.
          After the payment has been fully refunded, no further funds are withdrawn
          from your Stripe account as a result of this dispute.
        type: boolean
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      paymentIntentId:
        description: ID of the PaymentIntent that's disputed.
        type: string
      reason:
        description: Reason given by cardholder for dispute. Possible values are `bank_cannot_process`,
          `check_returned`, `credit_not_processed`, `customer_initiated`, `debit_not_authorized`,
          `duplicate`, `fraudulent`, `general`, `incorrect_account_details`, `insufficient_funds`,
          `product_not_received`, `product_unacceptable`, `subscription_canceled`,
          or `unrecognized`. Learn more about [dispute reasons](https://stripe.com/docs/disputes/categories).
        type: string
      status:
        description: Current status of dispute. Possible values are `warning_needs_response`,
          `warning_under_review`, `warning_closed`, `needs_response`, `under_review`,
          `won`, or `lost`.
        type: string
    type: object
  StripeError:
    properties:
      code:
        type: string
      message:
        type: string
      param:
        type: string
      status:
        type: integer
      type:
        type: string
    type: object
  StripePaymentIntent:
    properties:
      id:
        description: Unique identifier for the object.
        type: string
      last_payment_error:
        allOf:
        - $ref: '#/definitions/StripeError'
        description: The payment error encountered in the previous PaymentIntent confirmation.
          It will be cleared if the PaymentIntent is later updated for any reason.
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      status:
        allOf:
        - $ref: '#/definitions/StripePaymentIntentStatus'
        description: Status of this PaymentIntent. Read more about each PaymentIntent
          [status](https://stripe.com/docs/payments/intents#intent-statuses).
    type: object
  StripePaymentIntentStatus:
    enum:
    - requires_payment_method
    - requires_confirmation
    - requires_action
    - processing
    - requires_capture
    - canceled
    - succeeded
    type: string
    x-enum-varnames:
    - StripePaymentIntentStatus_RequiresPaymentMethod
    - StripePaymentIntentStatus_RequiresConfirmation
    - StripePaymentIntentStatus_RequiresAction
    - StripePaymentIntentStatus_Processing
    - StripePaymentIntentStatus_RequiresCapture
    - StripePaymentIntentStatus_Canceled
    - StripePaymentIntentStatus_Succeeded
  StripePaymentMethod:
    properties:
      bacs_debit:
        $ref: '#/definitions/StripePaymentMethodBACSDebit'
      card:
        $ref: '#/definitions/StripePaymentMethodCard'
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      id:
        description: Unique identifier for the payment method on stripe.
        type: string
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      object:
        description: String representing the object’s type. Always has the value `payment_method`.
        type: string
      sepa_debit:
        $ref: '#/definitions/StripePaymentMethodSEPADebit'
      us_bank_account:
        $ref: '#/definitions/StripePaymentMethodUSBankAccount'
    type: object
  StripePaymentMethodBACSDebit:
    properties:
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use
          this attribute to check whether two bank accounts are the same.
        type: string
      last4:
        description: Last four digits of the bank account number.
        type: string
      sort_code:
        description: Sort code of the bank account. (e.g., `10-20-30`)
        type: string
    type: object
  StripePaymentMethodCard:
    properties:
      brand:
        description: Card brand.
        type: string
      country:
        description: Two-letter ISO code representing the country of the card. You
          could use this attribute to get a sense of the international breakdown of
          cards you've collected.
        type: string
      display_brand:
        description: The brand to use when displaying the card, this accounts for
          customer's brand choice on dual-branded cards. Can be `american_express`,
          `cartes_bancaires`, `diners_club`, `discover`, `eftpos_australia`, `interac`,
          `jcb`, `mastercard`, `union_pay`, `visa`, or `other` and may contain more
          values in the future.
        type: string
      exp_month:
        description: Two-digit number representing the card's expiration month.
        type: integer
      exp_year:
        description: Four-digit number representing the card's expiration year.
        type: integer
      fingerprint:
        description: Uniquely identifies this particular card number. You can use
          this attribute to check whether two customers who’ve signed up with you
          are using the same card number, for example. For payment methods that tokenize
          card information (Apple Pay, Google Pay), the tokenized number might be
          provided instead of the underlying card number.
        type: string
      funding:
        description: Card funding type. Can be `credit`, `debit`, `prepaid`, or `unknown`.
        type: string
      last4:
        description: The last four digits of the card.
        type: string
    type: object
  StripePaymentMethodSEPADebit:
    properties:
      bank_code:
        description: Bank code of bank associated with the bank account.
        type: string
      branch_code:
        description: Branch code of bank associated with the bank account.
        type: string
      country:
        description: Two-letter ISO code representing the country the bank account
          is located in.
        type: string
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use
          this attribute to check whether two bank accounts are the same.
        type: string
      last4:
        description: Last four characters of the IBAN.
        type: string
    type: object
  StripePaymentMethodUSBankAccount:
    properties:
      account_holder_type:
        description: 'Account holder type: individual or company.'
        type: string
      account_type:
        description: 'Account type: checkings or savings. Defaults to checking if
          omitted.'
        type: string
      bank_name:
        description: The name of the bank.
        type: string
      fingerprint:
        description: Uniquely identifies this particular bank account. You can use
          this attribute to check whether two bank accounts are the same.
        type: string
      last4:
        description: Last four digits of the bank account number.
        type: string
      routing_number:
        description: Routing number of the bank account.
        type: string
    type: object
  StripeProduct:
    properties:
      active:
        description: Whether the product is currently available for purchase.
        type: boolean
      created:
        description: Time at which the object was created. Measured in seconds since
          the Unix epoch.
        type: integer
      description:
        description: The product's description, meant to be displayable to the customer.
          Use this field to optionally store a long form explanation of the product
          being sold for your own rendering purposes.
        type: string
      id:
        description: Unique identifier for the product in Stripe.
        type: string
      images:
        description: A list of up to 8 URLs of images for this product, meant to be
          displayable to the customer.
        items:
          type: string
        type: array
      livemode:
        description: Has the value `true` if the object exists in live mode or the
          value `false` if the object exists in test mode.
        type: boolean
      marketing_features:
        description: A list of up to 15 marketing features for this product. These
          are displayed in [pricing tables](https://stripe.com/docs/payments/checkout/pricing-table).
        items:
          $ref: '#/definitions/StripeProductMarketingFeature'
        type: array
      metadata:
        additionalProperties:
          type: string
        description: Set of [key-value pairs](https://stripe.com/docs/api/metadata)
          that you can attach to an object. This can be useful for storing additional
          information about the object in a structured format.
        type: object
      name:
        description: The product's name, meant to be displayable to the customer.
        type: string
      object:
        description: String representing the object's type. Always has the value `product`.
        type: string
      package_dimensions:
        allOf:
        - $ref: '#/definitions/StripeProductPackageDimensions'
        description: The dimensions of this product for shipping purposes.
      shippable:
        description: Whether this product is shipped (i.e., physical goods).
        type: boolean
      statement_descriptor:
        description: |-
          Extra information about a product which will appear on your customer's credit card statement.
          In the case that multiple products are billed at once, the first statement descriptor will be used.
        type: string
      tax_code:
        description: A [tax code](https://stripe.com/docs/tax/tax-categories) ID.
      unit_label:
        description: A label that represents units of this product. When set, this
          will be included in customers' receipts, invoices, Checkout, and the customer
          portal.
        type: string
      updated:
        description: Time at which the product was last updated. Measured in seconds
          since the Unix epoch.
        type: integer
      url:
        description: A URL of a publicly-accessible webpage for this product.
        type: string
    type: object
  StripeProductMarketingFeature:
    properties:
      name:
        description: The marketing feature name. Up to 80 characters long.
        maxLength: 80
        type: string
    type: object
  StripeProductPackageDimensions:
    properties:
      height:
        description: Height, in inches.
        type: number
      length:
        description: Length, in inches.
        type: number
      weight:
        description: Weight, in ounces.
        type: number
      width:
        description: Width, in inches.
        type: number
    type: object
  StripeRefund:
    properties:
      chargeId:
        description: ID of the charge that's refunded.
        type: string
      estinationDetails:
        allOf:
        - $ref: '#/definitions/StripeRefundDestinationDetails'
        description: Transaction-specific details for the refund.
      failureBalanceTransactionId:
        description: After the refund fails, this balance transaction describes the
          adjustment made on your account balance that reverses the initial balance
          transaction.
        type: string
      failureReason:
        description: 'Provides the reason for the refund failure. Possible values
          are: `lost_or_stolen_card`, `expired_or_canceled_card`, `charge_for_pending_refund_disputed`,
          `insufficient_funds`, `declined`, `merchant_request`, or `unknown`.'
        type: string
      id:
        type: string
      paymentIntentId:
        description: ID of the PaymentIntent that's refunded.
        type: string
      status:
        allOf:
        - $ref: '#/definitions/StripeRefundStatus'
        description: Status of the refund. This can be `pending`, `requires_action`,
          `succeeded`, `failed`, or `canceled`. Learn more about [failed refunds](https://stripe.com/docs/refunds#failed-refunds).
    type: object
  StripeRefundDestinationDetails:
    properties:
      card:
        $ref: '#/definitions/StripeRefundDestinationDetailsCard'
      type:
        description: The type of transaction-specific details of the payment method
          used in the refund (e.g., `card`). An additional hash is included on `destination_details`
          with a name matching this value. It contains information specific to the
          refund transaction.
        type: string
      us_bank_transfer:
        $ref: '#/definitions/StripeRefundDestinationDetailsUSBankTransfer'
    type: object
  StripeRefundDestinationDetailsCard:
    properties:
      reference:
        description: Value of the reference number assigned to the refund.
        type: string
      reference_status:
        description: Status of the reference number on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: string
      reference_type:
        description: Type of the reference number assigned to the refund.
        type: string
      type:
        description: The type of refund. This can be `refund`, `reversal`, or `pending`.
        type: string
    type: object
  StripeRefundDestinationDetailsUSBankTransfer:
    properties:
      reference:
        description: The reference assigned to the refund.
        type: string
      reference_status:
        description: Status of the reference on the refund. This can be `pending`,
          `available` or `unavailable`.
        type: string
    type: object
  StripeRefundStatus:
    enum:
    - pending
    - requires_action
    - succeeded
    - failed
    - canceled
    type: string
    x-enum-varnames:
    - StripeRefundStatus_Pending
    - StripeRefundStatus_RequiresAction
    - StripeRefundStatus_Succeeded
    - StripeRefundStatus_Failed
    - StripeRefundStatus_Canceled
  SupportTicket:
    properties:
      attachments:
        items:
          $ref: '#/definitions/SupportTicketAttachment'
        type: array
      closeTime:
        type: string
      comments:
        items:
          $ref: '#/definitions/SupportTicketComment'
        type: array
      creationTime:
        type: string
      creator:
        type: string
      description:
        type: string
      dueTime:
        type: string
      id:
        type: string
      name:
        type: string
      organizationId:
        type: string
      priority:
        $ref: '#/definitions/SupportTicketPriority'
      status:
        $ref: '#/definitions/SupportTicketStatus'
      watchers:
        items:
          type: string
        type: array
    type: object
  SupportTicketAttachment:
    properties:
      date:
        type: string
      id:
        type: string
      mimetype:
        type: string
      size:
        type: integer
      thumbnail_large:
        type: string
      thumbnail_medium:
        type: string
      thumbnail_small:
        type: string
      title:
        type: string
      url:
        type: string
    type: object
  SupportTicketComment:
    properties:
      comment:
        items:
          $ref: '#/definitions/SupportTicketCommentDetail'
        type: array
      comment_text:
        description: When creating a new comment, only CommentText is required.
        type: string
      creator:
        allOf:
        - $ref: '#/definitions/SupportTicketUser'
        description: who created the comment
      date:
        type: string
      id:
        type: string
    type: object
  SupportTicketCommentDetail:
    properties:
      attachment:
        $ref: '#/definitions/SupportTicketAttachment'
      frame:
        $ref: '#/definitions/SupportTicketFrame'
      image:
        $ref: '#/definitions/SupportTicketImage'
      text:
        type: string
      type:
        type: string
    type: object
  SupportTicketFrame:
    properties:
      id:
        type: string
      url:
        type: string
    type: object
  SupportTicketImage:
    properties:
      extension:
        type: string
      id:
        type: string
      name:
        type: string
      thumbnail_large:
        type: string
      thumbnail_medium:
        type: string
      thumbnail_small:
        type: string
      title:
        type: string
      type:
        type: string
      url:
        type: string
    type: object
  SupportTicketPriority:
    enum:
    - LOW
    - NORMAL
    - HIGH
    - URGENT
    type: string
    x-enum-varnames:
    - SupportTicketPriority_LOW
    - SupportTicketPriority_NORMAL
    - SupportTicketPriority_HIGH
    - SupportTicketPriority_URGENT
  SupportTicketStatus:
    enum:
    - OPEN
    - IN PROGRESS
    - IN REVIEW
    - BLOCKED
    - CLOSED
    - ARCHIVED
    - DELETED
    type: string
    x-enum-varnames:
    - SupportTicketStatus_OPEN
    - SupportTicketStatus_IN_PROGRESS
    - SupportTicketStatus_IN_REVIEW
    - SupportTicketStatus_BLOCKED
    - SupportTicketStatus_CLOSED
    - SupportTicketStatus_ARCHIVED
    - SupportTicketStatus_DELETED
  SupportTicketUser:
    properties:
      email:
        type: string
      id:
        description: The Suger user ID.
        type: string
      isSugerEmployee:
        description: Whether the user is a Suger employee.
        type: boolean
      profilePicture:
        type: string
      username:
        type: string
    type: object
  TimeUnit:
    enum:
    - DAY
    - MONTH
    - YEAR
    type: string
    x-enum-varnames:
    - TimeUnit_DAY
    - TimeUnit_MONTH
    - TimeUnit_YEAR
  TrackEvent:
    properties:
      action:
        $ref: '#/definitions/TrackEventActionType'
      contactId:
        description: The ID of the contact who triggered the track event if applicable.
        type: string
      timestamp:
        description: timestamp of the track event happened.
        format: date-time
        type: string
    type: object
  TrackEventActionType:
    enum:
    - OPEN_EMAIL
    type: string
    x-enum-varnames:
    - TrackEventActionType_OPEN_EMAIL
  TrialConfig:
    properties:
      trialPeriod:
        type: integer
      trialPeriodUnit:
        $ref: '#/definitions/TimeUnit'
    type: object
  UniqueCountAggregationResult:
    properties:
      newItems:
        additionalProperties: true
        description: Unique property values of current hour that are new of today.
          Leave the value as interface{} to save space.
        type: object
    type: object
  UpdateBillableMetricParams:
    properties:
      description:
        type: string
      name:
        type: string
      status:
        $ref: '#/definitions/BillableMetricStatus'
    type: object
  UpdateBuyerParams:
    properties:
      companyInfo:
        allOf:
        - $ref: '#/definitions/CompanyInfo'
        description: Optional. CompanyInfo of the buyer.
      customerId:
        description: |-
          The customer ID to recognize the cloud marketplace buyer in your internal system.
          This may be used for uploading CSV files for Batch Metering Usage
        type: string
      description:
        description: The description of the buyer. If not provided, the description
          will not be updated.
        type: string
      lagoCustomerId:
        description: The Lago Customer ID of the buyer. If not provided, the Lago
          Customer ID will not be updated.
        type: string
      metronomeCustomerId:
        description: The Metronome Customer ID of the buyer. If not provided, the
          Metronome Customer ID will not be updated.
        type: string
      name:
        description: The name of the buyer. If not provided, the name will not be
          updated.
        type: string
      orbCustomerId:
        description: The Orb Customer ID of the buyer. If not provided, the Orb Customer
          ID will not be updated.
        type: string
      paymentConfig:
        allOf:
        - $ref: '#/definitions/PaymentConfig'
        description: Optional. PaymentConfig of the buyer. The currency can't be updated.
    type: object
  UpdateProductParams:
    properties:
      fulfillmentUrl:
        type: string
      id:
        type: string
      organizationID:
        type: string
    required:
    - fulfillmentUrl
    - id
    - organizationID
    type: object
  UpdateSupportTicketRequest:
    properties:
      priority:
        $ref: '#/definitions/SupportTicketPriority'
      watchers:
        items:
          type: string
        type: array
    required:
    - priority
    - watchers
    type: object
  UsageCount:
    properties:
      creditCount:
        description: The count of this dimension usage records that are handled as
          credit.
        type: number
      includedCount:
        description: The count of this dimension usage records that are handled as
          included in IncludedBaseQuantity
        type: number
      reportedCount:
        description: The count of this dimension usage records that are reported to
          cloud vendors.
        type: number
    type: object
  UsageMeteringConfigInfo:
    properties:
      partnerUsageMeteringConfigs:
        description: The usage metering configuration for each Partner, such as AWS,
          AZURE & GCP.
        items:
          $ref: '#/definitions/PartnerUsageMeteringConfig'
        type: array
    type: object
  UsageMeteringDailyRecord:
    properties:
      amount:
        type: number
      date:
        format: date-time
        type: string
      entitlementID:
        description: The Entitlement ID of the usage metering daily record.
        type: string
      groupBysExpression:
        description: |-
          The group bys expression of the usage metering.
          When the same usage metering key may have multiple expressions of group bys to aggregate the usage.
        type: string
      key:
        description: The dimension key of the usage metering.
        type: string
      partner:
        allOf:
        - $ref: '#/definitions/Partner'
        description: The partner where this usage metering daily record is from. Such
          as AWS, AZURE or GCP.
      quantity:
        type: number
    type: object
  UsageMeteringDimensionMappingMode:
    enum:
    - ""
    - QUANTITY
    - AMOUNT
    type: string
    x-enum-varnames:
    - UsageMeteringDimensionMappingMode_UNKNOWN
    - UsageMeteringDimensionMappingMode_QUANTITY
    - UsageMeteringDimensionMappingMode_AMOUNT
  UsageMeteringDimensionMappingValue:
    properties:
      convertionMultiplier:
        description: |-
          The convertion multiplier when mapping from the source dimension key to the destination dimensionKey by quantity mode.
          Not required if the mapping mode is AMOUNT.
        type: number
      dimensionKey:
        description: The destination dimension key of the usage metering mapping.
        type: string
      mappingMode:
        allOf:
        - $ref: '#/definitions/UsageMeteringDimensionMappingMode'
        description: The conversion mode of UsageMeteringDimensionMapping. The default
          is QUANTITY if not available.
    type: object
  UsageRecordGroupSource:
    enum:
    - ""
    - API
    - INTERNAL
    - METRONOME
    - ORB
    - LAGO
    type: string
    x-enum-varnames:
    - UsageRecordGroupSource_UNKNOWN
    - UsageRecordGroupSource_API
    - UsageRecordGroupSource_INTERNAL
    - UsageRecordGroupSource_METRONOME
    - UsageRecordGroupSource_ORB
    - UsageRecordGroupSource_LAGO
  UsageRecordReportStatus:
    enum:
    - ""
    - SUCCESS
    - FAILED
    - CREATED
    - INVOICED
    - DELETED
    - CANCELED
    type: string
    x-enum-varnames:
    - UsageRecordReportStatus_UNKNOWN
    - UsageRecordReportStatus_SUCCESS
    - UsageRecordReportStatus_FAILED
    - UsageRecordReportStatus_CREATED
    - UsageRecordReportStatus_INVOICED
    - UsageRecordReportStatus_DELETED
    - UsageRecordReportStatus_CANCELED
  ValueType:
    enum:
    - ""
    - VALUE_TYPE_UNSPECIFIED
    - BOOL
    - INT64
    - DOUBLE
    - STRING
    - DISTRIBUTION
    - MONEY
    type: string
    x-enum-varnames:
    - ValueType_UNKNOWN
    - ValueType_UNSPECIFIED
    - ValueType_BOOL
    - ValueType_INT64
    - ValueType_DOUBLE
    - ValueType_STRING
    - ValueType_DISTRIBUTION
    - ValueType_MONEY
  WorkloadEntitlement:
    properties:
      buyerID:
        type: string
      creationTime:
        format: date-time
        type: string
      endTime:
        description: nullable
        format: date-time
        type: string
      entitlementTermID:
        type: string
      externalBuyerID:
        type: string
      externalID:
        type: string
      externalProductID:
        type: string
      id:
        type: string
      info:
        $ref: '#/definitions/EntitlementInfo'
      lastUpdateTime:
        format: date-time
        type: string
      metaInfo:
        $ref: '#/definitions/WorkloadMetaInfo'
      name:
        type: string
      offerID:
        type: string
      organizationID:
        type: string
      partner:
        $ref: '#/definitions/Partner'
      productID:
        type: string
      service:
        $ref: '#/definitions/PartnerService'
      startTime:
        format: date-time
        type: string
      status:
        $ref: '#/definitions/EntitlementStatus'
      type:
        type: string
    type: object
  WorkloadEntitlementTerm:
    properties:
      buyerID:
        type: string
      commitAmount:
        type: number
      creditAmount:
        type: number
      endTime:
        description: nullable
        format: date-time
        type: string
      entitlementID:
        type: string
      entitlementInfo:
        $ref: '#/definitions/EntitlementInfo'
      externalEntitlementID:
        type: string
      id:
        type: string
      info:
        $ref: '#/definitions/EntitlementTermInfo'
      offerID:
        type: string
      organizationID:
        type: string
      partner:
        $ref: '#/definitions/Partner'
      productID:
        type: string
      reportedAmount:
        type: number
      service:
        $ref: '#/definitions/PartnerService'
      startTime:
        format: date-time
        type: string
      usedCommitAmount:
        type: number
      usedCreditAmount:
        type: number
    type: object
  WorkloadMetaInfo:
    properties:
      aceApnCrmUniqueIdentifier:
        description: The linked ACE ApnCrmUniqueIdentifier of the private offer if
          available.
        type: string
      awsSaasProductDimensions:
        description: |-
          The AWS SaaS product dimensions. Applicable for AWS SaaS products only.
          This is used to save price info when creating AWS SaaS product.
        items:
          $ref: '#/definitions/AwsProductDimension'
        type: array
      baseAgreementId:
        description: Applicable for AWS Marketplace only, when the IsAgreementBasedOffer
          is true.
        type: string
      buyerIds:
        description: The Suger buyer IDs of the private offer if available.
        items:
          type: string
        type: array
      contacts:
        description: The contacts of the offer to notify if any updates.
        items:
          $ref: '#/definitions/Contact'
        type: array
      cppoInOfferId:
        description: The Suger CPPO_IN offer ID.
        type: string
      cppoOfferId:
        description: The Suger CPPO offer ID.
        type: string
      cppoOutOfferId:
        description: The Suger CPPO_OUT offer ID.
        type: string
      customMetaInfo:
        additionalProperties:
          type: string
        description: The custom meta info of the offer can be updated by seller via
          API or console.
        type: object
      enableTestUsageMetering:
        description: If enabled, Suger will test metering the usage for this entitlement
          hourly.
        type: boolean
      entitlementCancellationSchedule:
        allOf:
        - $ref: '#/definitions/CancellationSchedule'
        description: The cancellation schedule for the entitlement. It is nill if
          no cancellation schedule.
      errorMessages:
        description: |-
          The error messages when the offer is invalid or offer related tasks failed.
          Populated by Suger service.
        items:
          type: string
        type: array
      hubspotDealId:
        description: Hubsport deal ID of the private offer if available.
        type: string
      internalNote:
        description: |-
          The Internal note of the private offer.
          It is only visible to the seller/ISV, not visible to the buyer.
          Up to 1000 characters.
        type: string
      isAgreementBasedOffer:
        description: Applicable for AWS Marketplace only, If this offer is agreement
          based offer.
        type: boolean
      isGrossRevenueFullSync:
        description: Whether the gross revenue is fully synced for the entitlement.
        type: boolean
      isRenewalOffer:
        description: |-
          Applicable for AWS Marketplace only. If this offer is renewal offer of existing agreement.
          The existing agreement can be within or outside AWS Marketplace. AWS may audit and verify your offer is a renewal.
          If AWS is unable to verify your offer, then AWS may revoke the offer and entitlements from your customer.
        type: boolean
      isReplacementOffer:
        description: If this offer is a GCP replacement offer. Applicable for GCP
          Marketplace replacement offer only.
        type: boolean
      lastModifiedBy:
        allOf:
        - $ref: '#/definitions/LastModifiedBy'
        description: The user who last modified the product/offer/buyer/contact.
      notifications:
        description: |-
          The notifications of the offer if any updates.
          In most cases, it is to notify contacts/buyers when the offer is pending acceptance.
        items:
          $ref: '#/definitions/NotificationEvent'
        type: array
      offerAcceptDate:
        description: The date when the offer is accepted by the buyer. Only available
          when the private offer has been accepted.
        format: date-time
        type: string
      renewalOfferType:
        allOf:
        - $ref: '#/definitions/AwsRenewalOfferType'
        description: Applicable for AWS Marketplace only, required when the IsRenewalOffer
          is true.
      replacedOfferEndTime:
        description: The end time of the replaced offer. Applicable for GCP Marketplace
          replacement offer only.
        format: date-time
        type: string
      replacedOfferResourceName:
        description: |-
          The resource name of the GCP Marketplace offer that this offer is replacing.
          In format of "projects/{gcpProjectNumber}/services/{productServiceName}/privateOffers/{privateOfferId}"
          Applicable for GCP Marketplace replacement offer only.
        type: string
      salesforceEntitlementURL:
        description: The Salesforce entitlement URL
        type: string
      salesforceOpportunityId:
        description: The Salesforce opportunity ID of the private offer if available.
        type: string
      testUsageMeteringEndTime:
        description: |-
          The test usage metering end time. It is used for test usage metering only.
          Required if EnableTestUsageMetering is true.
        format: date-time
        type: string
      updateMessage:
        description: The message to notify when the offer is updated.
        type: string
    type: object
  WorkloadOffer:
    properties:
      buyerID:
        type: string
      contactIds:
        items:
          type: string
        type: array
      createdBy:
        type: string
      creationTime:
        format: date-time
        type: string
      endTime:
        description: nullable
        format: date-time
        type: string
      expireTime:
        description: nullable
        format: date-time
        type: string
      externalID:
        type: string
      id:
        type: string
      info:
        $ref: '#/definitions/OfferInfo'
      lastUpdateTime:
        format: date-time
        type: string
      lastUpdatedBy:
        type: string
      metaInfo:
        $ref: '#/definitions/WorkloadMetaInfo'
      name:
        type: string
      offerType:
        $ref: '#/definitions/OfferType'
      organizationID:
        type: string
      partner:
        $ref: '#/definitions/Partner'
      productID:
        type: string
      service:
        $ref: '#/definitions/PartnerService'
      status:
        $ref: '#/definitions/OfferStatus'
    type: object
  WorkloadProduct:
    properties:
      createdBy:
        type: string
      creationTime:
        format: date-time
        type: string
      externalID:
        type: string
      fulfillmentUrl:
        type: string
      id:
        type: string
      info:
        $ref: '#/definitions/ProductInfo'
      lastUpdateTime:
        format: date-time
        type: string
      lastUpdatedBy:
        type: string
      metaInfo:
        $ref: '#/definitions/WorkloadMetaInfo'
      name:
        type: string
      organizationID:
        type: string
      partner:
        $ref: '#/definitions/Partner'
      productType:
        enum:
        - UNKNOWN
        - SUBSCRIPTION
        - CONTRACT
        - FLAT_RATE
        - PER_USER
        - USAGE_BASED
        type: string
      service:
        $ref: '#/definitions/PartnerService'
      status:
        type: string
    type: object
  client.DescribeInstanceResponseBody:
    properties:
      AppJson:
        type: string
      AutoRenewal:
        type: string
      BeganOn:
        type: integer
      ComponentJson:
        type: string
      Constraints:
        type: string
      CreatedOn:
        type: integer
      EndOn:
        type: integer
      ExtendJson:
        type: string
      HostJson:
        type: string
      InstanceId:
        type: integer
      IsTrial:
        type: boolean
      Modules:
        $ref: '#/definitions/client.DescribeInstanceResponseBodyModules'
      OrderId:
        type: integer
      ProductCode:
        type: string
      ProductName:
        type: string
      ProductSkuCode:
        type: string
      ProductType:
        type: string
      RelationalData:
        $ref: '#/definitions/client.DescribeInstanceResponseBodyRelationalData'
      Status:
        type: string
      SupplierName:
        type: string
    type: object
  client.DescribeInstanceResponseBodyModules:
    properties:
      Module:
        items:
          $ref: '#/definitions/client.DescribeInstanceResponseBodyModulesModule'
        type: array
    type: object
  client.DescribeInstanceResponseBodyModulesModule:
    properties:
      Code:
        type: string
      Id:
        type: string
      Name:
        type: string
      Properties:
        $ref: '#/definitions/client.DescribeInstanceResponseBodyModulesModuleProperties'
    type: object
  client.DescribeInstanceResponseBodyModulesModuleProperties:
    properties:
      Property:
        items:
          $ref: '#/definitions/client.DescribeInstanceResponseBodyModulesModulePropertiesProperty'
        type: array
    type: object
  client.DescribeInstanceResponseBodyModulesModulePropertiesProperty:
    properties:
      DisplayUnit:
        type: string
      Key:
        type: string
      Name:
        type: string
      PropertyValues:
        $ref: '#/definitions/client.DescribeInstanceResponseBodyModulesModulePropertiesPropertyPropertyValues'
      ShowType:
        type: string
    type: object
  client.DescribeInstanceResponseBodyModulesModulePropertiesPropertyPropertyValues:
    properties:
      PropertyValue:
        items:
          $ref: '#/definitions/client.DescribeInstanceResponseBodyModulesModulePropertiesPropertyPropertyValuesPropertyValue'
        type: array
    type: object
  client.DescribeInstanceResponseBodyModulesModulePropertiesPropertyPropertyValuesPropertyValue:
    properties:
      DisplayName:
        type: string
      Max:
        type: string
      Min:
        type: string
      Remark:
        type: string
      Step:
        type: string
      Type:
        type: string
      Value:
        type: string
    type: object
  client.DescribeInstanceResponseBodyRelationalData:
    properties:
      ServiceStatus:
        type: string
    type: object
  client.DescribeOrderResponseBody:
    properties:
      AccountQuantity:
        type: integer
      AliUid:
        type: integer
      Components:
        additionalProperties: true
        type: object
      CouponPrice:
        type: number
      CreatedOn:
        type: integer
      InstanceIds:
        $ref: '#/definitions/client.DescribeOrderResponseBodyInstanceIds'
      OrderId:
        type: integer
      OrderStatus:
        type: string
      OrderType:
        type: string
      OriginalPrice:
        type: number
      PaidOn:
        type: integer
      PayStatus:
        type: string
      PaymentPrice:
        type: number
      PeriodType:
        type: string
      ProductCode:
        type: string
      ProductName:
        type: string
      ProductSkuCode:
        type: string
      Quantity:
        type: integer
      RequestId:
        type: string
      SupplierCompanyName:
        type: string
      SupplierTelephones:
        $ref: '#/definitions/client.DescribeOrderResponseBodySupplierTelephones'
      TotalPrice:
        type: number
    type: object
  client.DescribeOrderResponseBodyInstanceIds:
    properties:
      InstanceId:
        items:
          type: string
        type: array
    type: object
  client.DescribeOrderResponseBodySupplierTelephones:
    properties:
      Telephone:
        items:
          type: string
        type: array
    type: object
  client.PushMeteringDataRequest:
    properties:
      Metering:
        type: string
    type: object
  client.PushMeteringDataResponseBody:
    properties:
      RequestId:
        type: string
      Success:
        type: boolean
    type: object
  database_sql.NullTime:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  github_com_aws_aws-sdk-go-v2_service_marketplacemetering_types.Tag:
    properties:
      key:
        description: |-
          One part of a key-value pair that makes up a tag . A key is a label that acts
          like a category for the specific tag values.

          This member is required.
        type: string
      value:
        description: |-
          One part of a key-value pair that makes up a tag . A value acts as a descriptor
          within a tag category (key). The value can be empty or null.

          This member is required.
        type: string
    type: object
  github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.BatchUsageEventOkResponse:
    properties:
      count:
        type: integer
      result:
        items:
          $ref: '#/definitions/github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageBatchEventOkMessage'
        type: array
    type: object
  github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageBatchEventOkMessage:
    properties:
      dimension:
        description: Dimension identifier
        type: string
      effectiveStartTime:
        description: Time in UTC when the usage event occurred
        type: string
      error:
        $ref: '#/definitions/github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponse'
      messageTime:
        description: Time this message was created in UTC
        type: string
      planId:
        description: Plan associated with the purchased offer
        type: string
      quantity:
        description: Number of units consumed
        type: number
      resourceId:
        description: Identifier of the resource against which usage is emitted
        type: string
      resourceUri:
        description: Identifier of the managed app resource against which usage is
          emitted
        type: string
      status:
        allOf:
        - $ref: '#/definitions/github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventStatusEnum'
        description: Status of the operation.
      usageEventId:
        description: Unique identifier associated with the usage event
        type: string
    type: object
  github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponse:
    properties:
      additionalInfo:
        $ref: '#/definitions/github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponseAdditionalInfo'
      code:
        type: string
      message:
        type: string
    type: object
  github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventConflictResponseAdditionalInfo:
    properties:
      acceptedMessage:
        $ref: '#/definitions/github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventOkResponse'
    type: object
  github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventOkResponse:
    properties:
      dimension:
        description: Dimension identifier
        type: string
      effectiveStartTime:
        description: Time in UTC when the usage event occurred
        type: string
      messageTime:
        description: Time this message was created in UTC
        type: string
      planId:
        description: Plan associated with the purchased offer
        type: string
      quantity:
        description: Number of units consumed
        type: number
      resourceId:
        description: Identifier of the resource against which usage is emitted
        type: string
      resourceUri:
        description: Identifier of the managed app resource against which usage is
          emitted
        type: string
      status:
        allOf:
        - $ref: '#/definitions/github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventStatusEnum'
        description: Status of the operation.
      usageEventId:
        description: Unique identifier associated with the usage event
        type: string
    type: object
  github_com_sugerio_marketplace-service_azure_sdk_marketplacemeteringv1.UsageEventStatusEnum:
    enum:
    - Accepted
    - Expired
    - Duplicate
    - Error
    - ResourceNotFound
    - ResourceNotAuthorized
    - InvalidDimension
    - InvalidQuantity
    - BadArgument
    type: string
    x-enum-varnames:
    - UsageEventStatusEnumAccepted
    - UsageEventStatusEnumExpired
    - UsageEventStatusEnumDuplicate
    - UsageEventStatusEnumError
    - UsageEventStatusEnumResourceNotFound
    - UsageEventStatusEnumResourceNotAuthorized
    - UsageEventStatusEnumInvalidDimension
    - UsageEventStatusEnumInvalidQuantity
    - UsageEventStatusEnumBadArgument
  github_com_sugerio_marketplace-service_rds-db_lib.BillingAwsBillingEvent:
    properties:
      action:
        type: string
      agreementID:
        type: string
      amount:
        type: number
      balanceImpacting:
        type: integer
      bankTraceID:
        type: string
      billingAddressID:
        type: string
      brokerID:
        type: string
      buyerID:
        type: string
      currency:
        type: string
      dataFeedProductID:
        type: string
      disbursementBillingEventID:
        type: string
      endUserAccountID:
        type: string
      entitlementID:
        type: string
      fromAccountID:
        type: string
      id:
        type: string
      insertDate:
        $ref: '#/definitions/database_sql.NullTime'
      invoiceDate:
        $ref: '#/definitions/database_sql.NullTime'
      invoiceID:
        type: string
      offerID:
        type: string
      organizationID:
        type: string
      parentBillingEventID:
        type: string
      paymentDueDate:
        $ref: '#/definitions/database_sql.NullTime'
      productID:
        type: string
      toAccountID:
        type: string
      transactionReferenceID:
        type: string
      transactionType:
        type: string
      usagePeriodEndDate:
        $ref: '#/definitions/database_sql.NullTime'
      usagePeriodStartDate:
        $ref: '#/definitions/database_sql.NullTime'
    type: object
  github_com_sugerio_marketplace-service_rds-db_lib.BillingAzureCmaRevenue:
    properties:
      azureAssetID:
        type: string
      azureBillingAccountID:
        type: string
      azureCustomerID:
        type: string
      azureOfferID:
        type: string
      azurePlanID:
        type: string
      billingModel:
        type: string
      buyerID:
        type: string
      earningUsd:
        type: number
      entitlementID:
        type: string
      estimatedPayoutMonth:
        $ref: '#/definitions/database_sql.NullTime'
      offerID:
        type: string
      organizationID:
        type: string
      paymentSentDate:
        $ref: '#/definitions/database_sql.NullTime'
      payoutStatus:
        type: string
      productID:
        type: string
      purchaseRecordID:
        type: string
      revenueUsd:
        type: number
      termEndDate:
        type: string
      termStartDate:
        type: string
    type: object
  github_com_sugerio_marketplace-service_rds-db_lib.BillingGcpChargeUsage:
    properties:
      abandoned:
        type: number
      accountID:
        type: string
      buyerID:
        type: string
      charges:
        type: number
      currency:
        type: string
      dueVendor:
        type: number
      entitlementID:
        type: string
      googleEntity:
        type: string
      insightAccountID:
        type: string
      offerID:
        type: string
      ordinal:
        type: integer
      organizationID:
        type: string
      paymentSchedule:
        type: string
      paymentType:
        type: string
      prepayCredits:
        type: number
      productID:
        type: string
      refundBalanceDeductedThisMonth:
        type: number
      refundBalanceOutstanding:
        type: number
      refundReason:
        type: string
      released:
        type: number
      reportDate:
        type: string
      resource:
        type: string
      sku:
        type: string
      trialUse:
        type: number
      unit:
        type: string
      usage:
        type: number
      usedBy:
        type: string
      withheld:
        type: number
    type: object
  github_com_sugerio_marketplace-service_rds-db_lib.IdentityApiClient:
    properties:
      apiKeyHash:
        type: string
      creationTime:
        type: string
      id:
        type: string
      info:
        items:
          type: integer
        type: array
      lastUpdateTime:
        type: string
      organizationID:
        type: string
      provider:
        type: string
      role:
        type: string
      secret:
        type: string
      type:
        type: string
    type: object
  github_com_sugerio_marketplace-service_rds-db_lib.UpdateEntitlementNameParams:
    properties:
      id:
        type: string
      name:
        type: string
      organizationID:
        type: string
    type: object
  marketplacemetering.BatchMeterUsageOutput:
    properties:
      resultMetadata:
        allOf:
        - $ref: '#/definitions/middleware.Metadata'
        description: Metadata pertaining to the operation's result.
      results:
        description: |-
          Contains all UsageRecords processed by BatchMeterUsage . These records were
          either honored by AWS Marketplace Metering Service or were invalid. Invalid
          records should be fixed before being resubmitted.
        items:
          $ref: '#/definitions/types.UsageRecordResult'
        type: array
      unprocessedRecords:
        description: |-
          Contains all UsageRecords that were not processed by BatchMeterUsage . This is a
          list of UsageRecords . You can retry the failed request by making another
          BatchMeterUsage call with this list as input in the BatchMeterUsageRequest .
        items:
          $ref: '#/definitions/types.UsageRecord'
        type: array
    type: object
  middleware.Metadata:
    type: object
  servicecontrol.ReportError:
    properties:
      operationId:
        description: 'OperationId: The Operation.operation_id value from the request.'
        type: string
      status:
        allOf:
        - $ref: '#/definitions/servicecontrol.Status'
        description: 'Status: Details of the error when processing the Operation.'
    type: object
  servicecontrol.ReportResponse:
    properties:
      reportErrors:
        description: |-
          ReportErrors: Partial failures, one for each `Operation` in the request that
          failed processing. There are three possible combinations of the RPC status:
          1. The combination of a successful RPC status and an empty `report_errors`
          list indicates a complete success where all `Operations` in the request are
          processed successfully. 2. The combination of a successful RPC status and a
          non-empty `report_errors` list indicates a partial success where some
          `Operations` in the request succeeded. Each `Operation` that failed
          processing has a corresponding item in this list. 3. A failed RPC status
          indicates a general non-deterministic failure. When this happens, it's
          impossible to know which of the 'Operations' in the request succeeded or
          failed.
        items:
          $ref: '#/definitions/servicecontrol.ReportError'
        type: array
      serviceConfigId:
        description: 'ServiceConfigId: The actual config id used to process the request.'
        type: string
      serviceRolloutId:
        description: |-
          ServiceRolloutId: The current service rollout id used to process the
          request.
        type: string
    type: object
  servicecontrol.Status:
    properties:
      code:
        description: 'Code: The status code, which should be an enum value of google.rpc.Code.'
        type: integer
      details:
        description: |-
          Details: A list of messages that carry the error details. There is a common
          set of message types for APIs to use.
        items:
          items:
            type: integer
          type: array
        type: array
      message:
        description: |-
          Message: A developer-facing error message, which should be in English. Any
          user-facing error message should be localized and sent in the
          google.rpc.Status.details field, or localized by the client.
        type: string
    type: object
  types.Entitlement:
    properties:
      customerIdentifier:
        description: |-
          The customer identifier is a handle to each unique customer in an application.
          Customer identifiers are obtained through the ResolveCustomer operation in AWS
          Marketplace Metering Service.
        type: string
      dimension:
        description: |-
          The dimension for which the given entitlement applies. Dimensions represent
          categories of capacity in a product and are specified when the product is listed
          in AWS Marketplace.
        type: string
      expirationDate:
        description: |-
          The expiration date represents the minimum date through which this entitlement
          is expected to remain valid. For contractual products listed on AWS Marketplace,
          the expiration date is the date at which the customer will renew or cancel their
          contract. Customers who are opting to renew their contract will still have
          entitlements with an expiration date.
        type: string
      productCode:
        description: |-
          The product code for which the given entitlement applies. Product codes are
          provided by AWS Marketplace when the product listing is created.
        type: string
      value:
        allOf:
        - $ref: '#/definitions/types.EntitlementValue'
        description: |-
          The EntitlementValue represents the amount of capacity that the customer is
          entitled to for the product.
    type: object
  types.EntitlementValue:
    properties:
      booleanValue:
        description: |-
          The BooleanValue field will be populated with a boolean value when the
          entitlement is a boolean type. Otherwise, the field will not be set.
        type: boolean
      doubleValue:
        description: |-
          The DoubleValue field will be populated with a double value when the
          entitlement is a double type. Otherwise, the field will not be set.
        type: number
      integerValue:
        description: |-
          The IntegerValue field will be populated with an integer value when the
          entitlement is an integer type. Otherwise, the field will not be set.
        type: integer
      stringValue:
        description: |-
          The StringValue field will be populated with a string value when the
          entitlement is a string type. Otherwise, the field will not be set.
        type: string
    type: object
  types.UsageAllocation:
    properties:
      allocatedUsageQuantity:
        description: |-
          The total quantity allocated to this bucket of usage.

          This member is required.
        type: integer
      tags:
        description: |-
          The set of tags that define the bucket of usage. For the bucket of items with
          no tags, this parameter can be left out.
        items:
          $ref: '#/definitions/github_com_aws_aws-sdk-go-v2_service_marketplacemetering_types.Tag'
        type: array
    type: object
  types.UsageRecord:
    properties:
      customerIdentifier:
        description: |-
          The CustomerIdentifier is obtained through the ResolveCustomer operation and
          represents an individual buyer in your application.

          This member is required.
        type: string
      dimension:
        description: |-
          During the process of registering a product on AWS Marketplace, dimensions are
          specified. These represent different units of value in your application.

          This member is required.
        type: string
      quantity:
        description: |-
          The quantity of usage consumed by the customer for the given dimension and
          time. Defaults to 0 if not specified.
        type: integer
      timestamp:
        description: |-
          Timestamp, in UTC, for which the usage is being reported. Your application can
          meter usage for up to one hour in the past. Make sure the timestamp value is
          not before the start of the software usage.

          This member is required.
        type: string
      usageAllocations:
        description: |-
          The set of UsageAllocations to submit. The sum of all UsageAllocation
          quantities must equal the Quantity of the UsageRecord .
        items:
          $ref: '#/definitions/types.UsageAllocation'
        type: array
    type: object
  types.UsageRecordResult:
    properties:
      meteringRecordId:
        description: The MeteringRecordId is a unique identifier for this metering
          event.
        type: string
      status:
        allOf:
        - $ref: '#/definitions/types.UsageRecordResultStatus'
        description: |-
          The UsageRecordResult Status indicates the status of an individual UsageRecord
          processed by BatchMeterUsage .
            - Success- The UsageRecord was accepted and honored by BatchMeterUsage .
            - CustomerNotSubscribed- The CustomerIdentifier specified is not able to use
            your product. The UsageRecord was not honored. There are three causes for this
            result:
            - The customer identifier is invalid.
            - The customer identifier provided in the metering record does not have an
            active agreement or subscription with this product. Future UsageRecords for
            this customer will fail until the customer subscribes to your product.
            - The customer's AWS account was suspended.
            - DuplicateRecord- Indicates that the UsageRecord was invalid and not honored.
            A previously metered UsageRecord had the same customer, dimension, and time,
            but a different quantity.
      usageRecord:
        allOf:
        - $ref: '#/definitions/types.UsageRecord'
        description: The UsageRecord that was part of the BatchMeterUsage request.
    type: object
  types.UsageRecordResultStatus:
    enum:
    - Success
    - CustomerNotSubscribed
    - DuplicateRecord
    type: string
    x-enum-varnames:
    - UsageRecordResultStatusSuccess
    - UsageRecordResultStatusCustomerNotSubscribed
    - UsageRecordResultStatusDuplicateRecord
host: https://api.suger.cloud
info:
  contact:
    email: support@suger.io
    name: Suger Support
    url: https://www.suger.io/support
  description: CRUD operations on a set of resources, including organizations, products,
    offers, entitlements, usage record groups for meterting, etc.
  title: Suger API
  version: "1.0"
paths:
  /org/{orgId}/addon:
    get:
      consumes:
      - application/json
      description: List all addon templates
      operationId: ListAddons
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: List pagination size, default 1000, max value is 1000
        in: query
        name: limit
        type: integer
      - description: List pagination offset, default 0
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/BillingAddon'
            type: array
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: internal error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list addons
      tags:
      - Billing
    post:
      consumes:
      - application/json
      description: Create an addon template
      operationId: CreateAddon
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: CreateAndUpdateAddonParams
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/CreateAndUpdateAddonParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BillingAddon'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: internal error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: create addon
      tags:
      - Billing
  /org/{orgId}/addon/{addonId}:
    delete:
      consumes:
      - application/json
      description: Soft delete an addon template
      operationId: DeleteAddon
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Addon ID
        in: path
        name: addonId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Empty string if deletion is successful
          schema:
            type: string
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: internal error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: delete addon
      tags:
      - Billing
    get:
      consumes:
      - application/json
      description: Get an addon template
      operationId: GetAddon
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Addon ID
        in: path
        name: addonId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BillingAddon'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: internal error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: get addon
      tags:
      - Billing
    patch:
      consumes:
      - application/json
      description: Update an addon template
      operationId: UpdateAddon
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Addon ID
        in: path
        name: addonId
        required: true
        type: string
      - description: CreateAndUpdateAddonParams
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/CreateAndUpdateAddonParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BillingAddon'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: internal error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: update addon
      tags:
      - Billing
  /org/{orgId}/apiClient:
    get:
      consumes:
      - application/json
      description: List all API clients in the given organization.
      operationId: ListApiClients
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/github_com_sugerio_marketplace-service_rds-db_lib.IdentityApiClient'
            type: array
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list api clients
      tags:
      - API
  /org/{orgId}/apiClient/{apiClientId}:
    get:
      consumes:
      - application/json
      description: Get the API client by ID.
      operationId: GetApiClient
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: API client ID
        in: path
        name: apiClientId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/github_com_sugerio_marketplace-service_rds-db_lib.IdentityApiClient'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: get api client
      tags:
      - API
  /org/{orgId}/batchCreateUsageRecordGroups:
    post:
      consumes:
      - application/json
      description: Batch report new usage record groups.
      operationId: BatchReportUsageRecordGroups
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Array of new usage record groups to report
        in: body
        name: usageRecordGroups
        required: true
        schema:
          items:
            $ref: '#/definitions/NewUsageRecordGroup'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/MeteringUsageRecordGroup'
            type: array
        "400":
          description: all the quantity of usage records are zero
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: batch report usageRecordGroups
      tags:
      - Metering
  /org/{orgId}/batchValidateUsageRecordGroups:
    post:
      consumes:
      - application/json
      description: Provide a batch of usage record groups and validate each individual
        usage record group one by one.
      operationId: BatchValidateUsageRecordGroups
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Array of usage record groups to be validated
        in: body
        name: data
        required: true
        schema:
          items:
            $ref: '#/definitions/NewUsageRecordGroup'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: Empty string if validation is successful
          schema:
            type: string
        "400":
          description: Bad request error description
          schema:
            type: string
        "500":
          description: validation failed for usage record group
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: batch validate usageRecordGroups
      tags:
      - Metering
  /org/{orgId}/billableMetric:
    get:
      consumes:
      - application/json
      description: list billable metrics for the given organization.
      operationId: ListBillableMetrics
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Status of the billable metric
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/BillableMetric'
            type: array
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list billable metrics
      tags:
      - Metering
    post:
      consumes:
      - application/json
      description: Create a new billable metric for the given organization.
      operationId: CreateBillableMetric
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: RequestBody
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/BillableMetric'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BillableMetric'
        "400":
          description: Bad request params
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: create billable metric
      tags:
      - Metering
  /org/{orgId}/billableMetric/{billableMetricId}:
    get:
      consumes:
      - application/json
      description: Get the billable metric for the given organization and billable
        metric ID.
      operationId: GetBillableMetric
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Billable Metric ID
        in: path
        name: billableMetricId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BillableMetric'
        "400":
          description: Bad request error
          schema:
            type: string
        "404":
          description: billable metric not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: get billable metric
      tags:
      - Metering
    patch:
      consumes:
      - application/json
      description: Update the name, description and status of the billable metric
        for the given organization.
      operationId: UpdateBillableMetric
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Billable Metric ID
        in: path
        name: billableMetricId
        required: true
        type: string
      - description: RequestBody
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/UpdateBillableMetricParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BillableMetric'
        "400":
          description: Bad request error
          schema:
            type: string
        "404":
          description: billable metric not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: update billable metric
      tags:
      - Metering
  /org/{orgId}/buyer:
    get:
      consumes:
      - application/json
      description: list buyers by the given organization with pagination and optional
        filters.
      operationId: ListBuyers
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: filter by partner
        in: query
        name: partner
        type: string
      - description: filter by contactId
        in: query
        name: contactId
        type: string
      - description: List pagination size, default 1000, max value is 1000
        in: query
        name: limit
        type: integer
      - description: List pagination offset, default 0
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/IdentityBuyer'
            type: array
        "500":
          description: Internal Server Error
      security:
      - APIKeyAuth: []
      summary: list buyers
      tags:
      - Buyer
    post:
      consumes:
      - application/json
      description: create a new buyer for Stripe or Adyen under the given organization.
      operationId: CreateBuyer
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: CreateBuyerParams
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/CreateBuyerParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/IdentityBuyer'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: internal error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: create buyer
      tags:
      - Buyer
  /org/{orgId}/buyer/{buyerId}:
    get:
      consumes:
      - application/json
      description: get buyer by the given organization and buyer id.
      operationId: GetBuyer
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Buyer ID
        in: path
        name: buyerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/IdentityBuyer'
        "400":
          description: Bad request error
          schema:
            type: string
        "404":
          description: not found
          schema:
            type: string
        "500":
          description: internal error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: get buyer
      tags:
      - Buyer
    patch:
      consumes:
      - application/json
      description: update buyer by the given organization and buyer id.
      operationId: UpdateBuyer
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Buyer ID
        in: path
        name: buyerId
        required: true
        type: string
      - description: UpdateBuyerParams
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/UpdateBuyerParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/IdentityBuyer'
        "500":
          description: internal error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: update buyer
      tags:
      - Buyer
  /org/{orgId}/buyer/{buyerId}/paymentTransaction/{paymentTransactionId}/refund:
    get:
      consumes:
      - application/json
      description: list refunds of the payment transactions.
      operationId: ListRefundOfPaymentTransaction
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Buyer ID
        in: path
        name: buyerId
        required: true
        type: string
      - description: Payment transaction ID
        in: path
        name: paymentTransactionId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/BillingPaymentTransaction'
            type: array
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list refunds.
      tags:
      - Billing
    post:
      consumes:
      - application/json
      description: create refund on the payment transaction, support partial refunds
        multiple times.
      operationId: CreateRefund
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Buyer ID
        in: path
        name: buyerId
        required: true
        type: string
      - description: Payment transaction ID
        in: path
        name: paymentTransactionId
        required: true
        type: string
      - description: Refund amount
        in: query
        name: amount
        required: true
        type: number
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BillingPaymentTransaction'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: create refund.
      tags:
      - Billing
  /org/{orgId}/buyer/{buyerId}/wallet:
    get:
      consumes:
      - application/json
      description: list all wallets of a buyer.
      operationId: ListBuyerWallets
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Buyer ID
        in: path
        name: buyerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/BillingWallet'
            type: array
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list buyer's wallets
      tags:
      - Buyer
    post:
      consumes:
      - application/json
      description: create a new credit wallet for the buyer.
      operationId: CreateCreditWallet
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Buyer ID
        in: path
        name: buyerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BillingWallet'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: create credit wallet
      tags:
      - Buyer
  /org/{orgId}/buyer/{buyerId}/wallet/{walletId}:
    delete:
      consumes:
      - application/json
      description: delete a wallet of the buyer, if it's a payment method, sync to
        payment provider too.
      operationId: DeleteBuyerWallet
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Buyer ID
        in: path
        name: buyerId
        required: true
        type: string
      - description: Wallet ID
        in: path
        name: walletId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: delete buyer wallet
      tags:
      - Buyer
    patch:
      consumes:
      - application/json
      description: update startTime or expireTime of the wallet.
      operationId: UpdateCreditWallet
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Buyer ID
        in: path
        name: buyerId
        required: true
        type: string
      - description: Wallet ID
        in: path
        name: walletId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BillingWallet'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: update credit wallet
      tags:
      - Buyer
  /org/{orgId}/buyer/{buyerId}/wallet/{walletId}/close:
    patch:
      consumes:
      - application/json
      description: Close the given credit wallet, if it's a payment method, sync to
        payment provider too. Once closed, it can't be used for payment.
      operationId: CloseCreditWallet
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Buyer ID
        in: path
        name: buyerId
        required: true
        type: string
      - description: Wallet ID
        in: path
        name: walletId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BillingWallet'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: close credit wallet
      tags:
      - Buyer
  /org/{orgId}/buyer/{buyerId}/wallet/{walletId}/default:
    patch:
      consumes:
      - application/json
      description: set a payment method wallet as buyer's default wallet.
      operationId: SetBuyerDefaultWallet
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Buyer ID
        in: path
        name: buyerId
        required: true
        type: string
      - description: Wallet ID
        in: path
        name: walletId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/IdentityBuyer'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: set buyer default wallet
      tags:
      - Buyer
  /org/{orgId}/contact:
    get:
      consumes:
      - application/json
      description: List all contacts under the given organization.
      operationId: ListContactsByOrganization
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: List pagination size, default 1000, max value is 1000
        in: query
        name: limit
        type: integer
      - description: List pagination offset, default 0
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/IdentityContact'
            type: array
        "400":
          description: Bad request error description
          schema:
            type: string
        "500":
          description: internal error description
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list contacts by organization
      tags:
      - Contact
    post:
      consumes:
      - application/json
      description: Create a contact under the given organization. If the email address
        already exists, return the existing contact.
      operationId: CreateContact
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: RequestBody
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/IdentityContact'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/IdentityContact'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: create contact
      tags:
      - Contact
  /org/{orgId}/contact/{contactId}:
    get:
      consumes:
      - application/json
      description: Get the Contact by the given contact ID.
      operationId: GetContact
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Contact ID
        in: path
        name: contactId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: the Contact Object
          schema:
            $ref: '#/definitions/IdentityContact'
        "400":
          description: Bad request error description
          schema:
            type: string
        "500":
          description: internal error description
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: get contact
      tags:
      - Contact
    patch:
      consumes:
      - application/json
      description: update contact by the given organization and buyer id. The given
        name and information should be complete. Please note that this function does
        not support partial updates.
      operationId: UpdateContact
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Contact ID
        in: path
        name: contactId
        required: true
        type: string
      - description: Request Body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/IdentityContact'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/IdentityContact'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: update contact
      tags:
      - Contact
  /org/{orgId}/contact/{contactId}/buyer/{buyerId}:
    delete:
      consumes:
      - application/json
      description: remove contact from buyer by the given organization, buyer id and
        contact id.
      operationId: RemoveContactFromBuyer
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Buyer ID
        in: path
        name: buyerId
        required: true
        type: string
      - description: Contact ID
        in: path
        name: contactId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: empty string if success
          schema:
            type: string
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: remove contact from buyer
      tags:
      - Contact
    post:
      consumes:
      - application/json
      description: add contact to buyer by the given organization, buyer id and contact
        id.
      operationId: AddContactToBuyer
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Buyer ID
        in: path
        name: buyerId
        required: true
        type: string
      - description: Contact ID
        in: path
        name: contactId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/IdentityBuyer'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: add contact to buyer
      tags:
      - Contact
  /org/{orgId}/contact/{contactId}/offer/{offerId}:
    delete:
      consumes:
      - application/json
      description: remove contact from offer by given organization, offer id and contact
        id.
      operationId: RemoveContactFromOffer
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Contact ID
        in: path
        name: contactId
        required: true
        type: string
      - description: Offer ID
        in: path
        name: offerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: empty string if success
          schema:
            type: string
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: remove contact from offer
      tags:
      - Contact
    post:
      consumes:
      - application/json
      description: add contact to offer by the given organization, offer id and contact
        id.
      operationId: AddContactToOffer
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Contact ID
        in: path
        name: contactId
        required: true
        type: string
      - description: Offer ID
        in: path
        name: offerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: empty string if success
          schema:
            type: string
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: add contact to offer
      tags:
      - Contact
  /org/{orgId}/contact/batch:
    post:
      consumes:
      - application/json
      description: Create multiple contacts under the given organization. If an email
        address already exists, return the existing contact.
      operationId: BatchCreateContacts
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: RequestBody
        in: body
        name: data
        required: true
        schema:
          items:
            $ref: '#/definitions/IdentityContact'
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              items:
                $ref: '#/definitions/IdentityContact'
              type: array
            type: array
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: batch create contacts
      tags:
      - Contact
  /org/{orgId}/dailyRevenueRecord:
    get:
      consumes:
      - application/json
      description: list daily revenue records for the given organization, partner,
        entitlement, or buyer, within the given date range.
      operationId: ListDailyRevenueRecords
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Cloud Partner
        enum:
        - AWS
        - AZURE
        - GCP
        in: query
        name: partner
        type: string
      - description: Filter daily revenue records by the given product ID
        in: query
        name: productId
        type: string
      - description: Filter daily revenue records by the given buyer ID
        in: query
        name: buyerId
        type: string
      - description: Filter daily revenue records by the given entitlement ID
        in: query
        name: entitlementId
        type: string
      - description: start date (UTC) in YYYY-MM-DD format, default is 30 days before
          the endDate
        in: query
        name: startDate
        type: string
      - description: end date (UTC) in YYYY-MM-DD format, default is today
        in: query
        name: endDate
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/RevenueRecord'
            type: array
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list daily revenue records
      tags:
      - Report
  /org/{orgId}/draftOffer:
    post:
      consumes:
      - application/json
      description: Create a new draft offer or update the existing draft offer. When
        updating draft offer, the offer.ID is required.
      operationId: CreateOrUpdateDraftOffer
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: the draft offer to create
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/WorkloadOffer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkloadOffer'
        "400":
          description: Bad request error
          schema:
            type: string
        "405":
          description: Method not allowed
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: create or update draft offer
      tags:
      - Offer
  /org/{orgId}/draftProduct:
    post:
      consumes:
      - application/json
      description: Create a new draft product or update the existing draft product.
        When updating draft product, the product.ID is required.
      operationId: CreateOrUpdateDraftProduct
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: the draft product to create
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/WorkloadProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkloadProduct'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: create or update draft product
      tags:
      - Product
  /org/{orgId}/entitlement:
    get:
      consumes:
      - application/json
      description: List entitlements under the given organization with pagination
        and optional filters.
      operationId: ListEntitlements
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: filter by partner
        in: query
        name: partner
        type: string
      - description: filter by productId
        in: query
        name: productId
        type: string
      - description: filter by offerId
        in: query
        name: offerId
        type: string
      - description: filter by buyerId
        in: query
        name: buyerId
        type: string
      - description: List pagination size, default 1000, max value is 1000
        in: query
        name: limit
        type: integer
      - description: List pagination offset, default 0
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/WorkloadEntitlement'
            type: array
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list entitlements
      tags:
      - Entitlement
    post:
      consumes:
      - application/json
      description: Create an new entitlement for the given buyer & offer. Only applicable
        to non cloud billing partners.
      operationId: CreateEntitlement
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: RequestBody
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/CreateEntitlementParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkloadEntitlement'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: create entitlement
      tags:
      - Entitlement
  /org/{orgId}/entitlement/{entitlementId}:
    get:
      consumes:
      - application/json
      description: Get the entitlement by ID.
      operationId: GetEntitlement
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Entitlement ID
        in: path
        name: entitlementId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkloadEntitlement'
        "400":
          description: Bad request error
          schema:
            type: string
        "404":
          description: Not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: get entitlement
      tags:
      - Entitlement
  /org/{orgId}/entitlement/{entitlementId}/addCredit:
    post:
      consumes:
      - application/json
      description: Add the credit amount to the given Entitlement. The credit amount
        is accumulated & saved in the current Entitlement Term of the gvien Entitlement.
      operationId: AddEntitlementCredit
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Entitlement ID
        in: path
        name: entitlementId
        required: true
        type: string
      - description: RequestBody
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/AddEntitlementCreditParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/AddEntitlementCreditResponse'
        "400":
          description: Bad Request Error
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: add entitlement credit
      tags:
      - Entitlement
  /org/{orgId}/entitlement/{entitlementId}/addon:
    post:
      consumes:
      - application/json
      description: Apply one billing addon to the given Entitlement. The entitlement
        status must be ACTIVE.
      operationId: ApplyAddonToEntitlement
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Entitlement ID
        in: path
        name: entitlementId
        required: true
        type: string
      - description: RequestBody
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/BillingAddonRecord'
      produces:
      - application/json
      responses:
        "200":
          description: Entitlement
          schema:
            $ref: '#/definitions/WorkloadEntitlement'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: apply addon to entitlement
      tags:
      - Entitlement
  /org/{orgId}/entitlement/{entitlementId}/approve:
    post:
      consumes:
      - application/json
      description: Approve the given Entitlement. Only applicable to the Azure or
        GCP Entitlements with the status of "PENDING_START". Return 200 if the entitlement
        is already active.
      operationId: ApproveEntitlement
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Entitlement ID
        in: path
        name: entitlementId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkloadEntitlement'
        "400":
          description: Bad request error
          schema:
            type: string
        "404":
          description: Not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: approve entitlement
      tags:
      - Entitlement
  /org/{orgId}/entitlement/{entitlementId}/cancel:
    post:
      consumes:
      - application/json
      description: Cancel the active subscription in Azure Marketplace.
      operationId: CancelEntitlement
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Entitlement ID
        in: path
        name: entitlementId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: the canceled Entitlement
          schema:
            $ref: '#/definitions/WorkloadEntitlement'
        "400":
          description: Bad request error
          schema:
            type: string
        "404":
          description: Not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: cancel entitlement
      tags:
      - Entitlement
  /org/{orgId}/entitlement/{entitlementId}/divideCommit:
    post:
      consumes:
      - application/json
      description: Divide the commit equally from the given entitlement into sub entitlement
        terms based on the given time periods.
      operationId: DivideEntitlementCommit
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Entitlement ID
        in: path
        name: entitlementId
        required: true
        type: string
      - description: RequestBody
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/DivideEntitlementCommitParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: divide entitlement commit
      tags:
      - Entitlement
  /org/{orgId}/entitlement/{entitlementId}/entitlementName:
    patch:
      consumes:
      - application/json
      description: Update the name of the given Entitlement.
      operationId: UpdateEntitlementName
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Entitlement ID
        in: path
        name: entitlementId
        required: true
        type: string
      - description: UpdateEntitlementNameParams
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/github_com_sugerio_marketplace-service_rds-db_lib.UpdateEntitlementNameParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkloadEntitlement'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: update entitlement name
      tags:
      - Entitlement
  /org/{orgId}/entitlement/{entitlementId}/entitlementTerm:
    get:
      consumes:
      - application/json
      description: List all Entitlement Terms of the given Entitlement.
      operationId: ListEntitlementTerms
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Entitlement ID
        in: path
        name: entitlementId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/WorkloadEntitlementTerm'
            type: array
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list entitlement terms
      tags:
      - Entitlement
  /org/{orgId}/entitlement/{entitlementId}/entitlementTerm/{entitlementTermId}:
    delete:
      consumes:
      - application/json
      description: Delete the entitlement term by the given entitlement ID and entitlement
        term ID. Only allow to delete the divided entitlement term.
      operationId: DeleteEntitlementTerm
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Entitlement ID
        in: path
        name: entitlementId
        required: true
        type: string
      - description: Entitlement Term ID
        in: path
        name: entitlementTermId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: delete entitlement term
      tags:
      - Entitlement
    get:
      consumes:
      - application/json
      description: Get the entitlement term by ID.
      operationId: GetEntitlementTerm
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Entitlement ID
        in: path
        name: entitlementId
        required: true
        type: string
      - description: Entitlement Term ID
        in: path
        name: entitlementTermId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkloadEntitlementTerm'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: get entitlement term
      tags:
      - Entitlement
  /org/{orgId}/entitlement/{entitlementId}/invoice/{invoiceId}:
    get:
      consumes:
      - application/json
      description: Get the invoice by ID
      operationId: GetInvoice
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Entitlement ID
        in: path
        name: entitlementId
        required: true
        type: string
      - description: Invoice ID
        in: path
        name: invoiceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BillingInvoice'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: get invoice
      tags:
      - Billing
  /org/{orgId}/entitlement/{entitlementId}/invoice/{invoiceId}/issue:
    patch:
      consumes:
      - application/json
      description: Issue the invoice immediately. It can be used for manual issue
        or reissue invoice.
      operationId: IssueInvoice
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Entitlement ID
        in: path
        name: entitlementId
        required: true
        type: string
      - description: Invoice ID
        in: path
        name: invoiceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: the issued Invoice
          schema:
            $ref: '#/definitions/BillingInvoice'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: issue invoice
      tags:
      - Billing
  /org/{orgId}/entitlement/{entitlementId}/invoice/{invoiceId}/pay:
    patch:
      consumes:
      - application/json
      description: Initiate the payment for the invoice immediately. It can be used
        for manual payment or retry payment.
      operationId: PayInvoice
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Entitlement ID
        in: path
        name: entitlementId
        required: true
        type: string
      - description: Invoice ID
        in: path
        name: invoiceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BillingInvoice'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: pay invoice
      tags:
      - Billing
  /org/{orgId}/entitlement/{entitlementId}/invoice/{invoiceId}/void:
    patch:
      consumes:
      - application/json
      description: Void the invoice. It can be used for manual void or cancel the
        invoice.
      operationId: VoidInvoice
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Entitlement ID
        in: path
        name: entitlementId
        required: true
        type: string
      - description: Invoice ID
        in: path
        name: invoiceId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/BillingInvoice'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: void invoice
      tags:
      - Billing
  /org/{orgId}/entitlement/{entitlementId}/metaInfo:
    patch:
      consumes:
      - application/json
      description: Update the meta info of the given entitlement.
      operationId: UpdateEntitlementMetaInfo
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Entitlement ID
        in: path
        name: entitlementId
        required: true
        type: string
      - description: Entitlement meta info to update
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/WorkloadMetaInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkloadMetaInfo'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: update entitlement meta info
      tags:
      - Entitlement
  /org/{orgId}/entitlement/{entitlementId}/scheduleCancellation:
    post:
      consumes:
      - application/json
      description: Schedule the cancellation of the given Entitlement.
      operationId: ScheduleEntitlementCancellation
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Entitlement ID
        in: path
        name: entitlementId
        required: true
        type: string
      - description: RequestBody
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/CancellationSchedule'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkloadEntitlement'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: schedule entitlement cancellation
      tags:
      - Entitlement
  /org/{orgId}/entitlement/{entitlementId}/seat:
    patch:
      consumes:
      - application/json
      description: Update the seat number for the active AZURE subscription.
      operationId: UpdateEntitlementSeat
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Entitlement ID
        in: path
        name: entitlementId
        required: true
        type: string
      - description: New seat number
        in: query
        name: newSeat
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: the original entitlement before the seat update
          schema:
            $ref: '#/definitions/WorkloadEntitlement'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: update seat for the active AZURE subscription
      tags:
      - Entitlement
  /org/{orgId}/entitlement/{entitlementId}/unscheduleCancellation:
    post:
      consumes:
      - application/json
      description: Unschedule the cancellation of the given Entitlement.
      operationId: UnscheduleEntitlementCancellation
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Entitlement ID
        in: path
        name: entitlementId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkloadEntitlement'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: unschedule entitlement cancellation
      tags:
      - Entitlement
  /org/{orgId}/entitlement/{entitlementId}/usageRecordGroup:
    post:
      consumes:
      - application/json
      description: It is recommended to provide the ID in the request body CreateUsageRecordGroupParams,
        so the report can be deduplicated. All duplicate report will return error
        code 409.
      operationId: ReportUsageRecordGroup
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Entitlement ID
        in: path
        name: entitlementId
        required: true
        type: string
      - description: RequestBody
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/CreateUsageRecordGroupParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MeteringUsageRecordGroup'
        "400":
          description: all the quantity of usage records are zero
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: report usageRecordGroup
      tags:
      - Metering
  /org/{orgId}/invoice:
    get:
      consumes:
      - application/json
      description: List invoices with pagination and filter by status (optional)
      operationId: ListInvoices
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Optional, filter by the entitlement ID
        in: query
        name: entitlementId
        type: string
      - description: Optional, filter by the given buyer ID
        in: query
        name: buyerId
        type: string
      - description: Optional, filter by invoice status as filter, if not provided,
          all status invoices are returned
        enum:
        - DRAFT
        - FINALIZED
        - CANCELED
        - DELETED
        - ""
        in: query
        name: status
        type: string
      - description: List pagination size, default 1000, max value is 1000
        in: query
        name: limit
        type: integer
      - description: List pagination offset, default 0
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/BillingInvoice'
            type: array
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list invoices
      tags:
      - Billing
  /org/{orgId}/notificationEvent:
    get:
      consumes:
      - application/json
      description: List the notification events of the given organization with pagination
        and optional filters.
      operationId: ListNotificationEvents
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: start date (UTC) in YYYY-MM-DD format, default is 30 days before
          the endDate
        in: query
        name: startDate
        type: string
      - description: end date (UTC) in YYYY-MM-DD format, default is today
        in: query
        name: endDate
        type: string
      - description: List pagination size, default 1000, max value is 1000
        in: query
        name: limit
        type: integer
      - description: List pagination offset, default 0
        in: query
        name: offset
        type: integer
      - description: 'Filter by priorities, empty means all priorities. Valid values
          are: LOW, MEDIUM, HIGH, CRITICAL. Multiple values are supported, separated
          by comma.'
        in: query
        name: priorities
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListNotificationEventsResponse'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list notification events
      tags:
      - Notification
  /org/{orgId}/notificationEvent/{entityType}/{entityId}:
    get:
      consumes:
      - application/json
      description: List the notification events of the given organization and entity
        with pagination.
      operationId: ListNotificationEventsByEntity
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: 'Entity type, valid values are: PRODUCT, OFFER, ENTITLEMENT,
          INTEGRATION etc.'
        in: path
        name: entityType
        required: true
        type: string
      - description: Entity ID
        in: path
        name: entityId
        required: true
        type: string
      - description: List pagination size, default 1000, max value is 1000
        in: query
        name: limit
        type: integer
      - description: List pagination offset, default 0
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListNotificationEventsResponse'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list notification events by entity
      tags:
      - Notification
  /org/{orgId}/notificationMessage:
    get:
      consumes:
      - application/json
      description: List the notification messages of the given organization with pagination.
      operationId: ListNotificationMessages
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: List pagination size, default 1000, max value is 1000
        in: query
        name: limit
        type: integer
      - description: List pagination offset, default 0
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListNotificationMessagesResponse'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list notification messages
      tags:
      - Notification
  /org/{orgId}/notificationMessage/{notificationMessageId}:
    get:
      consumes:
      - application/json
      description: Get the notification message of the organization & notification
        message ID.
      operationId: GetNotificationMessage
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Notification Message ID
        in: path
        name: notificationMessageId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/NotificationMessage'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: get notification message
      tags:
      - Notification
  /org/{orgId}/offer:
    get:
      consumes:
      - application/json
      description: List offers under the given organization with pagination and optional
        filter.
      operationId: ListOffers
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: filter by offer status
        in: query
        name: status
        type: string
      - description: filter by partner
        in: query
        name: partner
        type: string
      - description: filter by offerType
        in: query
        name: offerType
        type: string
      - description: filter by productId
        in: query
        name: productId
        type: string
      - description: filter by buyerId
        in: query
        name: buyerId
        type: string
      - description: filter by hubspotDealId
        in: query
        name: hubspotDealId
        type: string
      - description: filter by contactId
        in: query
        name: contactId
        type: string
      - description: List pagination size, default 1000, max value is 1000
        in: query
        name: limit
        type: integer
      - description: List pagination offset, default 0
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/WorkloadOffer'
            type: array
        "400":
          description: Bad request error
          schema:
            type: string
        "405":
          description: Method not allowed
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list offers
      tags:
      - Offer
    post:
      consumes:
      - application/json
      description: Create a private offer under the given organization.
      operationId: CreateOffer
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Offer to create
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/WorkloadOffer'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkloadOffer'
        "400":
          description: Bad request error
          schema:
            type: string
        "405":
          description: Method not allowed
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: create offer
      tags:
      - Offer
  /org/{orgId}/offer/{offerId}:
    delete:
      consumes:
      - application/json
      description: The offer is soft deleted (marked as DELETED status) in Suger service.
        Only the offer with status = "DRAFT", "CREATE_FAILED", "EXPIRED" or "CANCELLED"
        is allowed to be deleted.
      operationId: DeleteOffer
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Offer ID
        in: path
        name: offerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Empty string if deletion is successful
          schema:
            type: string
        "400":
          description: Bad request error
          schema:
            type: string
        "404":
          description: Not found error
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: delete offer
      tags:
      - Offer
    get:
      consumes:
      - application/json
      description: Get the offer by the given offer ID.
      operationId: GetOffer
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Offer ID
        in: path
        name: offerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: the Offer Object
          schema:
            $ref: '#/definitions/WorkloadOffer'
        "400":
          description: Bad request error
          schema:
            type: string
        "404":
          description: Not found
          schema:
            type: string
        "405":
          description: Method not allowed
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: get offer
      tags:
      - Offer
  /org/{orgId}/offer/{offerId}/cancel:
    post:
      consumes:
      - application/json
      description: Only the offer with status = "PENDING_ACCEPTANCE", "PENDING_CANCEL",
        "ACTIVE" or "USED" is allowed to cancel.
      operationId: CancelOffer
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Offer ID
        in: path
        name: offerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkloadOffer'
        "400":
          description: Bad request error
          schema:
            type: string
        "405":
          description: Method not allowed
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: cancel offer
      tags:
      - Offer
  /org/{orgId}/offer/{offerId}/eula:
    get:
      consumes:
      - application/json
      description: Get the EULA file of the given offer ID.
      operationId: GetOfferEula
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Offer ID
        in: path
        name: offerId
        required: true
        type: string
      - description: response format in JSON or string
        in: query
        name: format
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: AWS S3 signed URL with 30 minutes expiry time
          schema:
            type: string
        "400":
          description: Bad request error
          schema:
            type: string
        "405":
          description: Method not allowed
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: get offer EULA
      tags:
      - Offer
  /org/{orgId}/offer/{offerId}/extendExpiryDate:
    post:
      consumes:
      - application/json
      description: Only the offer with status = "PENDING_ACCEPTANCE", "EXPIRED" or
        "ACCEPTED" is allowed to extend expiry date.
      operationId: ExtendPrivateOfferExpiryDate
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Offer ID
        in: path
        name: offerId
        required: true
        type: string
      - description: new expiry date in YYYY-MM-DD format
        in: query
        name: newExpiryDate
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkloadOffer'
        "400":
          description: Bad request error
          schema:
            type: string
        "404":
          description: Not found
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: extend offer expiry date
      tags:
      - Offer
  /org/{orgId}/offer/{offerId}/metaInfo:
    patch:
      consumes:
      - application/json
      description: Update the meta info of the given offer.
      operationId: UpdateOfferMetaInfo
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Offer ID
        in: path
        name: offerId
        required: true
        type: string
      - description: Offer meta info to update
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/WorkloadMetaInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkloadMetaInfo'
        "400":
          description: Bad request error
          schema:
            type: string
        "405":
          description: Method not allowed
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: update offer meta info
      tags:
      - Offer
  /org/{orgId}/offer/{offerId}/notifyContacts:
    post:
      consumes:
      - application/json
      description: Send offer notifications to the given contact ids. If contactIds
        is empty, send notifications to all contacts of the offer.
      operationId: SendOfferNotifications
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Offer ID
        in: path
        name: offerId
        required: true
        type: string
      - description: List of Contact IDs, if emoty or nil, send notifications to all
          contacts of the offer
        in: body
        name: contactIds
        schema:
          items:
            type: string
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: NotificationEvent object
          schema:
            $ref: '#/definitions/NotificationEvent'
        "400":
          description: Bad request error
          schema:
            type: string
        "405":
          description: Method not allowed
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: notify offer contacts
      tags:
      - Offer
  /org/{orgId}/offer/{offerId}/resellerEula:
    get:
      consumes:
      - application/json
      description: Get the Reseller EULA file of the given offer ID.
      operationId: GetOfferResellerEula
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Offer ID
        in: path
        name: offerId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: AWS S3 signed URL with 30 minutes expiry time
          schema:
            type: string
        "400":
          description: Bad request error
          schema:
            type: string
        "405":
          description: Method not allowed
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: get offer reseller EULA
      tags:
      - Offer
  /org/{orgId}/offerExternalId/{offerExternalId}:
    get:
      consumes:
      - application/json
      description: Get the offer by the given offer external ID.
      operationId: GetOfferByExternalId
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Offer External ID
        in: path
        name: offerExternalId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: the Offer Object
          schema:
            $ref: '#/definitions/WorkloadOffer'
        "400":
          description: Bad request error
          schema:
            type: string
        "404":
          description: Not found
          schema:
            type: string
        "405":
          description: Method not allowed
          schema:
            type: string
        "500":
          description: Internal error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: get offer by external ID
      tags:
      - Offer
  /org/{orgId}/partner/{partner}/product:
    get:
      consumes:
      - application/json
      description: list all products under the given organization and cloud partner
      operationId: ListProductsByPartner
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Cloud Partner
        enum:
        - AWS
        - AZURE
        - GCP
        in: path
        name: partner
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/WorkloadProduct'
            type: array
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list products by partner
      tags:
      - Product
  /org/{orgId}/partner/{partner}/revenueRecord:
    get:
      consumes:
      - application/json
      description: list the revenue records for the given organization, product, entitlement,
        or buyer.
      operationId: ListRevenueRecords
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Cloud Partner
        enum:
        - AWS
        - AZURE
        - GCP
        in: path
        name: partner
        required: true
        type: string
      - description: Filter revenue records by the given product ID
        in: query
        name: productId
        type: string
      - description: Filter revenue records by the given entitlement ID
        in: query
        name: entitlementId
        type: string
      - description: Filter revenue records by the given buyer ID
        in: query
        name: buyerId
        type: string
      - description: start date (UTC) in YYYY-MM-DD format, default is 30 days before
          the endDate
        in: query
        name: startDate
        type: string
      - description: end date (UTC) in YYYY-MM-DD format, default is today
        in: query
        name: endDate
        type: string
      - description: List pagination size, default 1000, max value is 1000
        in: query
        name: limit
        type: integer
      - description: List pagination offset, default 0
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListRevenueRecordsResponse'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list revenue records
      tags:
      - Report
  /org/{orgId}/partner/{partner}/revenueRecordDetail:
    get:
      consumes:
      - application/json
      description: list the raw revenue record details for the given organization,
        partner, product, entitlement, or buyer.
      operationId: ListRevenueRecordDetails
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Cloud Partner
        enum:
        - AWS
        - AZURE
        - GCP
        in: path
        name: partner
        required: true
        type: string
      - description: Filter revenue record details by the given product ID
        in: query
        name: productId
        type: string
      - description: Filter revenue record details by the given buyer ID
        in: query
        name: buyerId
        type: string
      - description: Filter revenue record details by the given entitlement ID
        in: query
        name: entitlementId
        type: string
      - description: start date (UTC) in YYYY-MM-DD format, default is 30 days before
          the endDate
        in: query
        name: startDate
        type: string
      - description: end date (UTC) in YYYY-MM-DD format, default is today
        in: query
        name: endDate
        type: string
      - description: List pagination size, default 1000, max value is 1000
        in: query
        name: limit
        type: integer
      - description: List pagination offset, default 0
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListRevenueRecordDetailsResponse'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list revenue record details
      tags:
      - Report
  /org/{orgId}/partner/{partner}/usageMeteringDailyRecord:
    get:
      consumes:
      - application/json
      description: list the daily records of the usage metering from the cloud marketplace
        for the given organization, entitlement, or buyer.
      operationId: ListUsageMeteringDailyRecords
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Filter by the Cloud Partner
        enum:
        - AWS
        - AZURE
        - GCP
        in: path
        name: partner
        required: true
        type: string
      - description: Filter usage metering daily records by the given buyer ID
        in: query
        name: buyerId
        type: string
      - description: Filter usage metering daily records by the given entitlement
          ID
        in: query
        name: entitlementId
        type: string
      - description: start date (UTC) in YYYY-MM-DD format, default is 30 days before
          the endDate
        in: query
        name: startDate
        type: string
      - description: end date (UTC) in YYYY-MM-DD format, default is today
        in: query
        name: endDate
        type: string
      - description: List pagination size, default 1000, max value is 1000
        in: query
        name: limit
        type: integer
      - description: List pagination offset, default 0
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListUsageMeteringDailyRecordsResponse'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list usage metering daily records
      tags:
      - Report
  /org/{orgId}/paymentTransaction:
    get:
      consumes:
      - application/json
      description: List payment transactions with pagination and filters
      operationId: ListPaymentTransactions
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Optional, filter by the given buyer ID
        in: query
        name: buyerId
        type: string
      - description: Optional, filter by the given entitlement ID
        in: query
        name: entitlementId
        type: string
      - description: Optional, filter by the given invoice ID
        in: query
        name: invoiceId
        type: string
      - description: Optional, filter by status
        enum:
        - PENDING
        - PROCESSING
        - SUCCESS
        - FAILED
        in: query
        name: status
        type: string
      - description: Optional, filter by transaction type
        enum:
        - CHARGE
        - REFUND
        in: query
        name: type
        type: string
      - description: List pagination size, default 1000, max value is 1000
        in: query
        name: limit
        type: integer
      - description: List pagination offset, default 0
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/BillingPaymentTransaction'
            type: array
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list payment transactions
      tags:
      - Billing
  /org/{orgId}/product:
    get:
      consumes:
      - application/json
      description: list all products under the given organization
      operationId: ListProductsByOrganization
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/WorkloadProduct'
            type: array
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list products by organization
      tags:
      - Product
    post:
      consumes:
      - application/json
      description: create a new product in the marketplace
      operationId: CreateProduct
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: the product to create
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/WorkloadProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkloadProduct'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: create product
      tags:
      - Product
  /org/{orgId}/product/{productId}:
    delete:
      consumes:
      - application/json
      description: The product is soft deleted (marked as DELETED status) in Suger
        service. only the products with non PUBLIC status are allowed to be deleted.
      operationId: DeleteProduct
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Product ID
        in: path
        name: productId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Empty string if deletion is successful
          schema:
            type: string
        "400":
          description: Bad request error
          schema:
            type: string
        "404":
          description: Not found error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: delete product
      tags:
      - Product
    get:
      consumes:
      - application/json
      description: get product by product id
      operationId: GetProduct
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Product ID
        in: path
        name: productId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkloadProduct'
        "400":
          description: Bad request error
          schema:
            type: string
        "404":
          description: Not found error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: get product
      tags:
      - Product
    patch:
      consumes:
      - application/json
      description: update product info, no price update is allowed via this API.
      operationId: UpdateProduct
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Product ID
        in: path
        name: productId
        required: true
        type: string
      - description: the product to update
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/WorkloadProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkloadProduct'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: update product
      tags:
      - Product
  /org/{orgId}/product/{productId}/dimension:
    get:
      consumes:
      - application/json
      description: list all metering dimensions of the given product
      operationId: ListProductMeteringDimensions
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Product ID
        in: path
        name: productId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/MeteringDimension'
            type: array
        "400":
          description: Bad request error
          schema:
            type: string
        "404":
          description: Not found error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list metering dimensions of product
      tags:
      - Product
  /org/{orgId}/product/{productId}/fulfillmentUrl:
    patch:
      consumes:
      - application/json
      description: update the fulfillment url of the given product
      operationId: UpdateProductFulfillmentUrl
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Product ID
        in: path
        name: productId
        required: true
        type: string
      - description: Update Product Params
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/UpdateProductParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkloadProduct'
        "500":
          description: Internal Server Error
      security:
      - APIKeyAuth: []
      summary: update product fulfillment url
      tags:
      - Product
  /org/{orgId}/product/{productId}/metaInfo:
    patch:
      consumes:
      - application/json
      description: Update the meta info of the given product.
      operationId: UpdateProductMetaInfo
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Product ID
        in: path
        name: productId
        required: true
        type: string
      - description: Product meta info to update
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/WorkloadMetaInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkloadMetaInfo'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: update product meta info
      tags:
      - Product
  /org/{orgId}/product/{productId}/publish:
    patch:
      consumes:
      - application/json
      description: publish the given product to the public status in the marketplace
      operationId: PublishProduct
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Product ID
        in: path
        name: productId
        required: true
        type: string
      - description: the product to publish
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/WorkloadProduct'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/WorkloadProduct'
        "400":
          description: Bad request error
          schema:
            type: string
        "404":
          description: Not found error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: publish product
      tags:
      - Product
  /org/{orgId}/revenueReport:
    post:
      consumes:
      - application/json
      description: Get the revenue report of the given organization, product, entitlement,
        or buyer.
      operationId: GetRevenueReport
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Get Revenue Report Params
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/GetRevenueReportParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/RevenueReport'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: get revenue report
      tags:
      - Report
  /org/{orgId}/support/ticket:
    get:
      consumes:
      - application/json
      description: list support tickets
      operationId: ListSupportTickets
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: List pagination size, default 1000, max value is 1000
        in: query
        name: limit
        type: integer
      - description: List pagination offset, default 0
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListSupportTicketsResponse'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list support tickets
      tags:
      - Support
    post:
      consumes:
      - application/json
      description: create support ticket
      operationId: CreateSupportTicket
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Ticket create request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SupportTicket'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SupportTicket'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: create support ticket
      tags:
      - Support
  /org/{orgId}/support/ticket/{ticketId}:
    get:
      consumes:
      - application/json
      description: get support ticket
      operationId: GetSupportTicket
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Ticket ID
        in: path
        name: ticketId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SupportTicket'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: get support ticket
      tags:
      - Support
    patch:
      consumes:
      - application/json
      description: update support ticket
      operationId: UpdateSupportTicket
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Ticket ID
        in: path
        name: ticketId
        required: true
        type: string
      - description: Ticket create request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/UpdateSupportTicketRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SupportTicket'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: update support ticket
      tags:
      - Support
  /org/{orgId}/support/ticket/{ticketId}/attachment:
    post:
      consumes:
      - multipart/form-data
      description: create support ticket attachment
      operationId: CreateSupportTicketAttachment
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Ticket ID
        in: path
        name: ticketId
        required: true
        type: string
      - description: File to upload
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/SupportTicketAttachment'
            type: array
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: create support ticket attachment
      tags:
      - Support
  /org/{orgId}/support/ticket/{ticketId}/close:
    patch:
      consumes:
      - application/json
      description: close suuport ticket
      operationId: CloseSupportTicket
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Ticket ID
        in: path
        name: ticketId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SupportTicket'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: close support ticket
      tags:
      - Support
  /org/{orgId}/support/ticket/{ticketId}/comment:
    post:
      consumes:
      - application/json
      description: create support ticket comment
      operationId: CreateSupportTicketComment
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Ticket ID
        in: path
        name: ticketId
        required: true
        type: string
      - description: Ticket create request
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/SupportTicketComment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SupportTicketComment'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: create support ticket comment
      tags:
      - Support
  /org/{orgId}/support/ticket/{ticketId}/reopen:
    patch:
      consumes:
      - application/json
      description: reopen support ticket
      operationId: ReopenSupportTicket
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Ticket ID
        in: path
        name: ticketId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/SupportTicket'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: reopen support ticket
      tags:
      - Support
  /org/{orgId}/usageMeteringConfigInfo:
    get:
      consumes:
      - application/json
      description: Get the usage metering config info of the given organization.
      operationId: GetUsageMeteringConfigInfo
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Usage metering config info
          schema:
            $ref: '#/definitions/UsageMeteringConfigInfo'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: get usage metering config info
      tags:
      - Metering
    patch:
      consumes:
      - application/json
      description: Update the usage metering config info of the given organization.
      operationId: UpdateUsageMeteringConfigInfo
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: The usage metering config info to be updated
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/UsageMeteringConfigInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Usage metering config info
          schema:
            $ref: '#/definitions/UsageMeteringConfigInfo'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: update usage metering config info
      tags:
      - Metering
  /org/{orgId}/usageRecordGroup:
    get:
      consumes:
      - application/json
      description: 'List UsageRecordGroups by the given organization, partner, product,
        entitlement or buyer. Only provide one or none of the optional query parameters:
        partner, productId, entitlementId & buyerId .'
      operationId: ListUsageRecordGroups
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Cloud Partner
        enum:
        - AWS
        - AZURE
        - GCP
        in: query
        name: partner
        type: string
      - description: filter by buyer ID, default no filter by buyerId if not provided
        in: query
        name: buyerId
        type: string
      - description: filter by entitlement ID, default no filter by entitlementId
          if not provided
        in: query
        name: entitlementId
        type: string
      - description: The status of the usage record group, default no filter by status
          if not provided
        enum:
        - CREATED
        - DELETED
        - INVALID
        - REPORTED
        - REPORT_PENDING
        - REPORT_FAILED
        in: query
        name: status
        type: string
      - description: The source of the usage record group, default no filter by source
          if not provided
        enum:
        - ""
        - API
        - INTERNAL
        - METRONOME
        - ORB
        - LAGO
        in: query
        name: source
        type: string
      - description: metaInfo filter
        in: query
        name: metaInfo
        type: string
      - description: start date (UTC) in YYYY-MM-DD format, default is 30 days before
          the endDate
        in: query
        name: startDate
        type: string
      - description: end date (UTC) in YYYY-MM-DD format, default is today
        in: query
        name: endDate
        type: string
      - description: List pagination size, default 1000, max value is 1000
        in: query
        name: limit
        type: integer
      - description: List pagination offset, default 0
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListUsageRecordGroupsResponse'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list usageRecordGroups
      tags:
      - Metering
  /org/{orgId}/usageRecordGroup/{usageRecordGroupId}:
    delete:
      consumes:
      - application/json
      description: delete the UsageRecordGroup for the given organization and usageRecordGroup
        ID. Only usageRecordGroup with status "CREATED" or "INVALID" can be deleted.
      operationId: DeleteUsageRecordGroup
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: UsageRecordGroup ID
        in: path
        name: usageRecordGroupId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MeteringUsageRecordGroup'
        "400":
          description: Bad request error
          schema:
            type: string
        "404":
          description: usageRecordGroup not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: delete usageRecordGroup
      tags:
      - Metering
  /org/{orgId}/usageRecordGroup/{usageRecordGroupId}/retry:
    post:
      consumes:
      - application/json
      description: Retry the given UsageRecordGroup by setting from status "REPORT_FAILED"
        to "CREATED", and it will be ready for the next hourly report. Only usageRecordGroup
        with status "REPORT_FAILED" can be retried.
      operationId: RetryUsageRecordGroup
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: UsageRecordGroup ID
        in: path
        name: usageRecordGroupId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/MeteringUsageRecordGroup'
        "400":
          description: Bad request error
          schema:
            type: string
        "404":
          description: usageRecordGroup not found
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: retry usageRecordGroup
      tags:
      - Metering
  /org/{orgId}/usageRecordReport:
    get:
      consumes:
      - application/json
      description: List usageRecordReports under the given organization, partner,
        entitlement or buyer, within the given time range and pagination.
      operationId: ListUsageRecordReports
      parameters:
      - description: Organization ID
        in: path
        name: orgId
        required: true
        type: string
      - description: Cloud Partner
        enum:
        - AWS
        - AZURE
        - GCP
        in: query
        name: partner
        type: string
      - description: buyer ID
        in: query
        name: buyerId
        type: string
      - description: entitlement ID
        in: query
        name: entitlementId
        type: string
      - description: start date (UTC) in YYYY-MM-DD format, default is 30 days before
          the endDate
        in: query
        name: startDate
        type: string
      - description: end date (UTC) in YYYY-MM-DD format, default is today
        in: query
        name: endDate
        type: string
      - description: List pagination size, default 1000, max value is 1000
        in: query
        name: limit
        type: integer
      - description: List pagination offset, default 0
        in: query
        name: offset
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ListUsageRecordReportsResponse'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      security:
      - APIKeyAuth: []
      summary: list usageRecordReports
      tags:
      - Metering
  /public/apiClient/accessToken:
    post:
      consumes:
      - application/json
      description: Get the Bearer Access Token by giving the Suger API Client ID &
        Client Secret.
      operationId: GetApiClientAccessToken
      parameters:
      - description: Suger API Client
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/GetApiClientAccessTokenParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ApiClientAccessToken'
        "400":
          description: Bad request error
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: get api access token
      tags:
      - API
produces:
- application/json
securityDefinitions:
  APIKeyAuth:
    description: API Key for authorization in format of <Key *****>.
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
tags:
- description: Access to API client resources
  name: API
- description: Access to Billing resources, such as addon, invoice, payment, etc.
  name: Billing
- description: Access to Buyer resources
  name: Buyer
- description: Access to Contact resources
  name: Contact
- description: Access to Entitlement resources
  name: Entitlement
- description: Access to Usage Metering resources
  name: Metering
- description: Access to Notification resources
  name: Notification
- description: Access to Offer resources
  name: Offer
- description: Access to Product resources
  name: Product
- description: Access to revenue or usage metering Report resources
  name: Report
- description: Access to Suger Support ticket resources
  name: Support
