/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class AzureProductBranch {
    'currentDraftInstanceID'?: string;
    'friendlyName'?: string;
    'id'?: string;
    'module'?: string;
    'resourceType'?: string;
    'type'?: string;
    'variantID'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "currentDraftInstanceID",
            "baseName": "currentDraftInstanceID",
            "type": "string",
            "format": ""
        },
        {
            "name": "friendlyName",
            "baseName": "friendlyName",
            "type": "string",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "module",
            "baseName": "module",
            "type": "string",
            "format": ""
        },
        {
            "name": "resourceType",
            "baseName": "resourceType",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        },
        {
            "name": "variantID",
            "baseName": "variantID",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return AzureProductBranch.attributeTypeMap;
    }

    public constructor() {
    }
}
