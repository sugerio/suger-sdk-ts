/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { MeteringUsageRecord } from '../models/MeteringUsageRecord';
import { UsageRecordGroupSource } from '../models/UsageRecordGroupSource';
import { HttpFile } from '../http/http';

export class MeteringUsageRecordGroupMetaInfo {
    /**
    * If it is true, the validation of the usage record group is skipped.
    */
    'skipValidation'?: boolean;
    /**
    * for usage metering API v2
    */
    'billableRecords'?: Array<MeteringUsageRecord>;
    /**
    * The lago amount (in dollars) of the customer. This field keeps the largest of the monthly amount. So it can only be updated when the invoice month increases.
    */
    'lagoAmount'?: number;
    /**
    * The lago subscription ID of the customer.
    */
    'lagoSubscriptionID'?: string;
    /**
    * The lago usage start time of the customer usage.
    */
    'lagoUsageStartTime'?: Date;
    /**
    * The metronome daily cost amount (in dollars) of the customer.
    */
    'metronomeDailyCostAmount'?: number;
    /**
    * The metronome invoice ID of the customer.
    */
    'metronomeInvoiceID'?: string;
    /**
    * The metronome monthly invoice amount (in dollars) of the customer. This field keeps the largest amount of the invoice month. So it can only be updated when the invoice month increases.
    */
    'metronomeMonthlyInvoiceAmount'?: number;
    /**
    * The metronome monthly invoice amount (in dollars) of the customer, which is adjusted by the seller. This field is populated only when the invoice amount is decreased by the seller via credit granting.
    */
    'metronomeMonthlyInvoiceAmountAdjusted'?: number;
    /**
    * The original records reported by the customer before convertion. If no dimension mapping is applied, this field is the same as the records field.
    */
    'originRecords'?: { [key: string]: number; };
    /**
    * The source of the usage record group. Can be from Suger API or other third party services, such as Metronome.
    */
    'source'?: UsageRecordGroupSource;
    'stripeInvoiceID'?: string;
    /**
    * The stripe period end time of the summary or invoice. UTC time in format \"YYYY-MM-DDTHH:MM:SSZ\".
    */
    'stripePeriodEndTime'?: Date;
    /**
    * The stripe period start time of the summary or invoice. UTC time in format \"YYYY-MM-DDTHH:MM:SSZ\".
    */
    'stripePeriodStartTime'?: Date;
    'stripeSubscriptionItemID'?: string;
    'stripeUsageRecordSummaryID'?: string;
    'stripeUsageRecordSummaryTotalUsage'?: number;
    /**
    * The timestamp (UTC)) of when the usage records were generated. Optional, if not provided, the current report timestamp will be used.
    */
    'timestamp'?: Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "skipValidation",
            "baseName": "SkipValidation",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "billableRecords",
            "baseName": "billableRecords",
            "type": "Array<MeteringUsageRecord>",
            "format": ""
        },
        {
            "name": "lagoAmount",
            "baseName": "lagoAmount",
            "type": "number",
            "format": ""
        },
        {
            "name": "lagoSubscriptionID",
            "baseName": "lagoSubscriptionID",
            "type": "string",
            "format": ""
        },
        {
            "name": "lagoUsageStartTime",
            "baseName": "lagoUsageStartTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "metronomeDailyCostAmount",
            "baseName": "metronomeDailyCostAmount",
            "type": "number",
            "format": ""
        },
        {
            "name": "metronomeInvoiceID",
            "baseName": "metronomeInvoiceID",
            "type": "string",
            "format": ""
        },
        {
            "name": "metronomeMonthlyInvoiceAmount",
            "baseName": "metronomeMonthlyInvoiceAmount",
            "type": "number",
            "format": ""
        },
        {
            "name": "metronomeMonthlyInvoiceAmountAdjusted",
            "baseName": "metronomeMonthlyInvoiceAmountAdjusted",
            "type": "number",
            "format": ""
        },
        {
            "name": "originRecords",
            "baseName": "originRecords",
            "type": "{ [key: string]: number; }",
            "format": ""
        },
        {
            "name": "source",
            "baseName": "source",
            "type": "UsageRecordGroupSource",
            "format": ""
        },
        {
            "name": "stripeInvoiceID",
            "baseName": "stripeInvoiceID",
            "type": "string",
            "format": ""
        },
        {
            "name": "stripePeriodEndTime",
            "baseName": "stripePeriodEndTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "stripePeriodStartTime",
            "baseName": "stripePeriodStartTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "stripeSubscriptionItemID",
            "baseName": "stripeSubscriptionItemID",
            "type": "string",
            "format": ""
        },
        {
            "name": "stripeUsageRecordSummaryID",
            "baseName": "stripeUsageRecordSummaryID",
            "type": "string",
            "format": ""
        },
        {
            "name": "stripeUsageRecordSummaryTotalUsage",
            "baseName": "stripeUsageRecordSummaryTotalUsage",
            "type": "number",
            "format": ""
        },
        {
            "name": "timestamp",
            "baseName": "timestamp",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return MeteringUsageRecordGroupMetaInfo.attributeTypeMap;
    }

    public constructor() {
    }
}


