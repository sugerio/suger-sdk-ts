/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AzureAudience } from '../models/AzureAudience';
import { HttpFile } from '../http/http';

export class AzureProductAvailability {
    'emailAudiences'?: Array<AzureAudience>;
    'enterpriseLicensing'?: string;
    'id'?: string;
    'resourceType'?: string;
    'subscriptionAudiences'?: Array<AzureAudience>;
    'visibility'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "emailAudiences",
            "baseName": "emailAudiences",
            "type": "Array<AzureAudience>",
            "format": ""
        },
        {
            "name": "enterpriseLicensing",
            "baseName": "enterpriseLicensing",
            "type": "string",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "resourceType",
            "baseName": "resourceType",
            "type": "string",
            "format": ""
        },
        {
            "name": "subscriptionAudiences",
            "baseName": "subscriptionAudiences",
            "type": "Array<AzureAudience>",
            "format": ""
        },
        {
            "name": "visibility",
            "baseName": "visibility",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return AzureProductAvailability.attributeTypeMap;
    }

    public constructor() {
    }
}
