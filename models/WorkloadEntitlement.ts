/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { EntitlementInfo } from '../models/EntitlementInfo';
import { EntitlementStatus } from '../models/EntitlementStatus';
import { Partner } from '../models/Partner';
import { PartnerService } from '../models/PartnerService';
import { WorkloadMetaInfo } from '../models/WorkloadMetaInfo';
import { HttpFile } from '../http/http';

export class WorkloadEntitlement {
    'buyerID'?: string;
    'creationTime'?: Date;
    /**
    * nullable
    */
    'endTime'?: Date;
    'entitlementTermID'?: string;
    'externalBuyerID'?: string;
    'externalID'?: string;
    'externalProductID'?: string;
    'id'?: string;
    'info'?: EntitlementInfo;
    'lastUpdateTime'?: Date;
    'metaInfo'?: WorkloadMetaInfo;
    'name'?: string;
    'offerID'?: string;
    'organizationID'?: string;
    'partner'?: Partner;
    'partnerID'?: string;
    'productID'?: string;
    'service'?: PartnerService;
    'startTime'?: Date;
    'status'?: EntitlementStatus;
    'type'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "buyerID",
            "baseName": "buyerID",
            "type": "string",
            "format": ""
        },
        {
            "name": "creationTime",
            "baseName": "creationTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "endTime",
            "baseName": "endTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "entitlementTermID",
            "baseName": "entitlementTermID",
            "type": "string",
            "format": ""
        },
        {
            "name": "externalBuyerID",
            "baseName": "externalBuyerID",
            "type": "string",
            "format": ""
        },
        {
            "name": "externalID",
            "baseName": "externalID",
            "type": "string",
            "format": ""
        },
        {
            "name": "externalProductID",
            "baseName": "externalProductID",
            "type": "string",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "info",
            "baseName": "info",
            "type": "EntitlementInfo",
            "format": ""
        },
        {
            "name": "lastUpdateTime",
            "baseName": "lastUpdateTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "metaInfo",
            "baseName": "metaInfo",
            "type": "WorkloadMetaInfo",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "offerID",
            "baseName": "offerID",
            "type": "string",
            "format": ""
        },
        {
            "name": "organizationID",
            "baseName": "organizationID",
            "type": "string",
            "format": ""
        },
        {
            "name": "partner",
            "baseName": "partner",
            "type": "Partner",
            "format": ""
        },
        {
            "name": "partnerID",
            "baseName": "partnerID",
            "type": "string",
            "format": ""
        },
        {
            "name": "productID",
            "baseName": "productID",
            "type": "string",
            "format": ""
        },
        {
            "name": "service",
            "baseName": "service",
            "type": "PartnerService",
            "format": ""
        },
        {
            "name": "startTime",
            "baseName": "startTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "EntitlementStatus",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return WorkloadEntitlement.attributeTypeMap;
    }

    public constructor() {
    }
}


