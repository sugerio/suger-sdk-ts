/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class AzureMarketplaceValidation {
    'schema'?: string;
    'code'?: AzureMarketplaceValidationCodeEnum;
    'level'?: AzureMarketplaceValidationLevelEnum;
    'message'?: string;
    'resourceId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "schema",
            "baseName": "$schema",
            "type": "string",
            "format": ""
        },
        {
            "name": "code",
            "baseName": "code",
            "type": "AzureMarketplaceValidationCodeEnum",
            "format": ""
        },
        {
            "name": "level",
            "baseName": "level",
            "type": "AzureMarketplaceValidationLevelEnum",
            "format": ""
        },
        {
            "name": "message",
            "baseName": "message",
            "type": "string",
            "format": ""
        },
        {
            "name": "resourceId",
            "baseName": "resourceId",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return AzureMarketplaceValidation.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum AzureMarketplaceValidationCodeEnum {
    BusinessValidationError = 'businessValidationError',
    CollectionLimitExceeded = 'collectionLimitExceeded',
    InvalidId = 'invalidId',
    InvalidEntityStatus = 'invalidEntityStatus',
    InvalidRequest = 'invalidRequest',
    InvalidResource = 'invalidResource',
    InvalidState = 'invalidState',
    NotDeployed = 'notDeployed',
    NotSupported = 'notSupported',
    OperationCanceled = 'operationCanceled',
    ProductLocked = 'productLocked',
    ResourceNotFound = 'resourceNotFound',
    SchemaValidationError = 'schemaValidationError'
}
export enum AzureMarketplaceValidationLevelEnum {
    Informational = 'informational',
    Warning = 'warning'
}

