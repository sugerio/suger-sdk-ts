/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CommitDimensionType } from '../models/CommitDimensionType';
import { TimeUnit } from '../models/TimeUnit';
import { HttpFile } from '../http/http';

/**
* The commit dimension. There may be one or more commit dimensions defined in single product, offer or entitlement.
*/
export class CommitDimension {
    'category'?: string;
    'description'?: string;
    /**
    * Whether this commit dimension is newly created by user, when creating AWS Marketplace Contract private offer.
    */
    'isUserCreated'?: boolean;
    /**
    * API name of the dimension
    */
    'key'?: string;
    /**
    * The term length for the commit amount, such as 6 months, or 1 year. The length is used together with timeUnit. If the length is zero, use the TermEndTime.
    */
    'length'?: number;
    /**
    * The maximum number of users for PER_USER commit
    */
    'maximumUsers'?: number;
    /**
    * The minimum number of users for PER_USER commit
    */
    'minimumUsers'?: number;
    /**
    * Display name of the dimension
    */
    'name'?: string;
    /**
    * The quantity of this commit.
    */
    'quantity'?: number;
    /**
    * The commit amount. For GCP, it is monthly commitment.
    */
    'rate'?: number;
    /**
    * The term of the commit amount. It is used for front-end display only.
    */
    'term'?: string;
    /**
    * The end time of the commit term.
    */
    'termEndTime'?: string;
    /**
    * The term unit for the commit amount.
    */
    'timeUnit'?: TimeUnit;
    /**
    * The type of the commit dimension. Applicable only to Azure Marketplace.
    */
    'type'?: CommitDimensionType;
    /**
    * These indicate whether the dimension covers metering, entitlement, or support for external metering
    */
    'types'?: Array<string>;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "category",
            "baseName": "category",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "isUserCreated",
            "baseName": "isUserCreated",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "key",
            "baseName": "key",
            "type": "string",
            "format": ""
        },
        {
            "name": "length",
            "baseName": "length",
            "type": "number",
            "format": ""
        },
        {
            "name": "maximumUsers",
            "baseName": "maximumUsers",
            "type": "number",
            "format": ""
        },
        {
            "name": "minimumUsers",
            "baseName": "minimumUsers",
            "type": "number",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "quantity",
            "baseName": "quantity",
            "type": "number",
            "format": ""
        },
        {
            "name": "rate",
            "baseName": "rate",
            "type": "number",
            "format": ""
        },
        {
            "name": "term",
            "baseName": "term",
            "type": "string",
            "format": ""
        },
        {
            "name": "termEndTime",
            "baseName": "termEndTime",
            "type": "string",
            "format": ""
        },
        {
            "name": "timeUnit",
            "baseName": "timeUnit",
            "type": "TimeUnit",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "CommitDimensionType",
            "format": ""
        },
        {
            "name": "types",
            "baseName": "types",
            "type": "Array<string>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return CommitDimension.attributeTypeMap;
    }

    public constructor() {
    }
}


