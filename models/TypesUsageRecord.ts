/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { TypesUsageAllocation } from '../models/TypesUsageAllocation';
import { HttpFile } from '../http/http';

export class TypesUsageRecord {
    /**
    * The CustomerIdentifier is obtained through the ResolveCustomer operation and represents an individual buyer in your application.  This member is required.
    */
    'customerIdentifier'?: string;
    /**
    * During the process of registering a product on AWS Marketplace, dimensions are specified. These represent different units of value in your application.  This member is required.
    */
    'dimension'?: string;
    /**
    * The quantity of usage consumed by the customer for the given dimension and time. Defaults to 0 if not specified.
    */
    'quantity'?: number;
    /**
    * Timestamp, in UTC, for which the usage is being reported. Your application can meter usage for up to one hour in the past. Make sure the timestamp value is not before the start of the software usage.  This member is required.
    */
    'timestamp'?: string;
    /**
    * The set of UsageAllocations to submit. The sum of all UsageAllocation quantities must equal the Quantity of the UsageRecord .
    */
    'usageAllocations'?: Array<TypesUsageAllocation>;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "customerIdentifier",
            "baseName": "customerIdentifier",
            "type": "string",
            "format": ""
        },
        {
            "name": "dimension",
            "baseName": "dimension",
            "type": "string",
            "format": ""
        },
        {
            "name": "quantity",
            "baseName": "quantity",
            "type": "number",
            "format": ""
        },
        {
            "name": "timestamp",
            "baseName": "timestamp",
            "type": "string",
            "format": ""
        },
        {
            "name": "usageAllocations",
            "baseName": "usageAllocations",
            "type": "Array<TypesUsageAllocation>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return TypesUsageRecord.attributeTypeMap;
    }

    public constructor() {
    }
}
