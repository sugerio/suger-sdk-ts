/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { GcpMarketplaceProductDocumentationSpec } from '../models/GcpMarketplaceProductDocumentationSpec';
import { GcpMarketplaceProductLicenseSpec } from '../models/GcpMarketplaceProductLicenseSpec';
import { GcpMarketplaceProductSupportSpec } from '../models/GcpMarketplaceProductSupportSpec';
import { HttpFile } from '../http/http';

export class GcpMarketplaceProductMarketingSpec {
    'description'?: string;
    'displayNames'?: Array<string>;
    'documentationSpecs'?: Array<GcpMarketplaceProductDocumentationSpec>;
    'eulaUrl'?: string;
    'externalLicenseSpecs'?: Array<GcpMarketplaceProductLicenseSpec>;
    'externalMarketingUrl'?: string;
    /**
    * in format of \"base64://...\"
    */
    'icon'?: string;
    'searchCategories'?: Array<string>;
    'searchDescription'?: string;
    'searchKeywords'?: Array<string>;
    'signupUri'?: string;
    'supportSpec'?: GcpMarketplaceProductSupportSpec;
    'tagLine'?: string;
    'title'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "displayNames",
            "baseName": "displayNames",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "documentationSpecs",
            "baseName": "documentationSpecs",
            "type": "Array<GcpMarketplaceProductDocumentationSpec>",
            "format": ""
        },
        {
            "name": "eulaUrl",
            "baseName": "eulaUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "externalLicenseSpecs",
            "baseName": "externalLicenseSpecs",
            "type": "Array<GcpMarketplaceProductLicenseSpec>",
            "format": ""
        },
        {
            "name": "externalMarketingUrl",
            "baseName": "externalMarketingUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "icon",
            "baseName": "icon",
            "type": "string",
            "format": ""
        },
        {
            "name": "searchCategories",
            "baseName": "searchCategories",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "searchDescription",
            "baseName": "searchDescription",
            "type": "string",
            "format": ""
        },
        {
            "name": "searchKeywords",
            "baseName": "searchKeywords",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "signupUri",
            "baseName": "signupUri",
            "type": "string",
            "format": ""
        },
        {
            "name": "supportSpec",
            "baseName": "supportSpec",
            "type": "GcpMarketplaceProductSupportSpec",
            "format": ""
        },
        {
            "name": "tagLine",
            "baseName": "tagLine",
            "type": "string",
            "format": ""
        },
        {
            "name": "title",
            "baseName": "title",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return GcpMarketplaceProductMarketingSpec.attributeTypeMap;
    }

    public constructor() {
    }
}
