/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { DatabaseSqlNullTime } from '../models/DatabaseSqlNullTime';
import { HttpFile } from '../http/http';

export class GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingAwsBillingEvent {
    'action'?: string;
    'agreementID'?: string;
    'amount'?: number;
    'balanceImpacting'?: number;
    'bankTraceID'?: string;
    'billingAddressID'?: string;
    'brokerID'?: string;
    'buyerID'?: string;
    'currency'?: string;
    'dataFeedProductID'?: string;
    'disbursementBillingEventID'?: string;
    'endUserAccountID'?: string;
    'entitlementID'?: string;
    'fromAccountID'?: string;
    'id'?: string;
    'insertDate'?: DatabaseSqlNullTime;
    'invoiceDate'?: DatabaseSqlNullTime;
    'invoiceID'?: string;
    'offerID'?: string;
    'organizationID'?: string;
    'parentBillingEventID'?: string;
    'paymentDueDate'?: DatabaseSqlNullTime;
    'productID'?: string;
    'toAccountID'?: string;
    'transactionReferenceID'?: string;
    'transactionType'?: string;
    'usagePeriodEndDate'?: DatabaseSqlNullTime;
    'usagePeriodStartDate'?: DatabaseSqlNullTime;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "action",
            "baseName": "action",
            "type": "string",
            "format": ""
        },
        {
            "name": "agreementID",
            "baseName": "agreementID",
            "type": "string",
            "format": ""
        },
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "balanceImpacting",
            "baseName": "balanceImpacting",
            "type": "number",
            "format": ""
        },
        {
            "name": "bankTraceID",
            "baseName": "bankTraceID",
            "type": "string",
            "format": ""
        },
        {
            "name": "billingAddressID",
            "baseName": "billingAddressID",
            "type": "string",
            "format": ""
        },
        {
            "name": "brokerID",
            "baseName": "brokerID",
            "type": "string",
            "format": ""
        },
        {
            "name": "buyerID",
            "baseName": "buyerID",
            "type": "string",
            "format": ""
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string",
            "format": ""
        },
        {
            "name": "dataFeedProductID",
            "baseName": "dataFeedProductID",
            "type": "string",
            "format": ""
        },
        {
            "name": "disbursementBillingEventID",
            "baseName": "disbursementBillingEventID",
            "type": "string",
            "format": ""
        },
        {
            "name": "endUserAccountID",
            "baseName": "endUserAccountID",
            "type": "string",
            "format": ""
        },
        {
            "name": "entitlementID",
            "baseName": "entitlementID",
            "type": "string",
            "format": ""
        },
        {
            "name": "fromAccountID",
            "baseName": "fromAccountID",
            "type": "string",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "insertDate",
            "baseName": "insertDate",
            "type": "DatabaseSqlNullTime",
            "format": ""
        },
        {
            "name": "invoiceDate",
            "baseName": "invoiceDate",
            "type": "DatabaseSqlNullTime",
            "format": ""
        },
        {
            "name": "invoiceID",
            "baseName": "invoiceID",
            "type": "string",
            "format": ""
        },
        {
            "name": "offerID",
            "baseName": "offerID",
            "type": "string",
            "format": ""
        },
        {
            "name": "organizationID",
            "baseName": "organizationID",
            "type": "string",
            "format": ""
        },
        {
            "name": "parentBillingEventID",
            "baseName": "parentBillingEventID",
            "type": "string",
            "format": ""
        },
        {
            "name": "paymentDueDate",
            "baseName": "paymentDueDate",
            "type": "DatabaseSqlNullTime",
            "format": ""
        },
        {
            "name": "productID",
            "baseName": "productID",
            "type": "string",
            "format": ""
        },
        {
            "name": "toAccountID",
            "baseName": "toAccountID",
            "type": "string",
            "format": ""
        },
        {
            "name": "transactionReferenceID",
            "baseName": "transactionReferenceID",
            "type": "string",
            "format": ""
        },
        {
            "name": "transactionType",
            "baseName": "transactionType",
            "type": "string",
            "format": ""
        },
        {
            "name": "usagePeriodEndDate",
            "baseName": "usagePeriodEndDate",
            "type": "DatabaseSqlNullTime",
            "format": ""
        },
        {
            "name": "usagePeriodStartDate",
            "baseName": "usagePeriodStartDate",
            "type": "DatabaseSqlNullTime",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return GithubComSugerioMarketplaceServicePkgLegacyRdsDbLibBillingAwsBillingEvent.attributeTypeMap;
    }

    public constructor() {
    }
}
