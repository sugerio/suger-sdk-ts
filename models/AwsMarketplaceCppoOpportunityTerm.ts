/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AwsMarketplaceCatalogLegalTermDocument } from '../models/AwsMarketplaceCatalogLegalTermDocument';
import { AwsMarketplaceCatalogPricingTermRateCard } from '../models/AwsMarketplaceCatalogPricingTermRateCard';
import { AwsMarketplaceCppoOpportunityPaymentSchedule } from '../models/AwsMarketplaceCppoOpportunityPaymentSchedule';
import { AwsMarketplaceCppoOpportunityPositiveTargeting } from '../models/AwsMarketplaceCppoOpportunityPositiveTargeting';
import { AwsMarketplaceCppoOpportunityTermType } from '../models/AwsMarketplaceCppoOpportunityTermType';
import { AwsMarketplaceCppoOpportunityUpfrontPriceGrant } from '../models/AwsMarketplaceCppoOpportunityUpfrontPriceGrant';
import { HttpFile } from '../http/http';

export class AwsMarketplaceCppoOpportunityTerm {
    'currencyCode'?: string;
    'documents'?: Array<AwsMarketplaceCatalogLegalTermDocument>;
    /**
    * ISO 8601 duration format. For example, \"P12M\" represents 12 months.
    */
    'duration'?: string;
    'grants'?: Array<AwsMarketplaceCppoOpportunityUpfrontPriceGrant>;
    'id'?: string;
    'maximumAgreementStartDate'?: string;
    'positiveTargeting'?: AwsMarketplaceCppoOpportunityPositiveTargeting;
    /**
    * For ResaleFixedUpfrontPricingTerm
    */
    'price'?: string;
    'rateCards'?: Array<AwsMarketplaceCatalogPricingTermRateCard>;
    /**
    * For ResalePaymentScheduleTerm
    */
    'schedule'?: Array<AwsMarketplaceCppoOpportunityPaymentSchedule>;
    'type'?: AwsMarketplaceCppoOpportunityTermType;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "currencyCode",
            "baseName": "CurrencyCode",
            "type": "string",
            "format": ""
        },
        {
            "name": "documents",
            "baseName": "Documents",
            "type": "Array<AwsMarketplaceCatalogLegalTermDocument>",
            "format": ""
        },
        {
            "name": "duration",
            "baseName": "Duration",
            "type": "string",
            "format": ""
        },
        {
            "name": "grants",
            "baseName": "Grants",
            "type": "Array<AwsMarketplaceCppoOpportunityUpfrontPriceGrant>",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "Id",
            "type": "string",
            "format": ""
        },
        {
            "name": "maximumAgreementStartDate",
            "baseName": "MaximumAgreementStartDate",
            "type": "string",
            "format": ""
        },
        {
            "name": "positiveTargeting",
            "baseName": "PositiveTargeting",
            "type": "AwsMarketplaceCppoOpportunityPositiveTargeting",
            "format": ""
        },
        {
            "name": "price",
            "baseName": "Price",
            "type": "string",
            "format": ""
        },
        {
            "name": "rateCards",
            "baseName": "RateCards",
            "type": "Array<AwsMarketplaceCatalogPricingTermRateCard>",
            "format": ""
        },
        {
            "name": "schedule",
            "baseName": "Schedule",
            "type": "Array<AwsMarketplaceCppoOpportunityPaymentSchedule>",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "Type",
            "type": "AwsMarketplaceCppoOpportunityTermType",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return AwsMarketplaceCppoOpportunityTerm.attributeTypeMap;
    }

    public constructor() {
    }
}


