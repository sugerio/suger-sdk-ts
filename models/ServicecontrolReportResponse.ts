/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { ServicecontrolReportError } from '../models/ServicecontrolReportError';
import { HttpFile } from '../http/http';

export class ServicecontrolReportResponse {
    /**
    * ReportErrors: Partial failures, one for each `Operation` in the request that failed processing. There are three possible combinations of the RPC status: 1. The combination of a successful RPC status and an empty `report_errors` list indicates a complete success where all `Operations` in the request are processed successfully. 2. The combination of a successful RPC status and a non-empty `report_errors` list indicates a partial success where some `Operations` in the request succeeded. Each `Operation` that failed processing has a corresponding item in this list. 3. A failed RPC status indicates a general non-deterministic failure. When this happens, it\'s impossible to know which of the \'Operations\' in the request succeeded or failed.
    */
    'reportErrors'?: Array<ServicecontrolReportError>;
    /**
    * ServiceConfigId: The actual config id used to process the request.
    */
    'serviceConfigId'?: string;
    /**
    * ServiceRolloutId: The current service rollout id used to process the request.
    */
    'serviceRolloutId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "reportErrors",
            "baseName": "reportErrors",
            "type": "Array<ServicecontrolReportError>",
            "format": ""
        },
        {
            "name": "serviceConfigId",
            "baseName": "serviceConfigId",
            "type": "string",
            "format": ""
        },
        {
            "name": "serviceRolloutId",
            "baseName": "serviceRolloutId",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return ServicecontrolReportResponse.attributeTypeMap;
    }

    public constructor() {
    }
}
