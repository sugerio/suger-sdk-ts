/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { GcpMarketplaceConsumer } from '../models/GcpMarketplaceConsumer';
import { GcpMarketplaceEntitlementState } from '../models/GcpMarketplaceEntitlementState';
import { HttpFile } from '../http/http';

export class GcpMarketplaceEntitlement {
    /**
    * The resource name of the account that this entitlement is based on, if any, in format \"\"providers/{provider_id}/accounts/{account_id}\"
    */
    'account'?: string;
    /**
    * The resources using this entitlement, if applicable.
    */
    'consumers'?: Array<GcpMarketplaceConsumer>;
    'createTime'?: Date;
    /**
    * Entitlement Id generated by GCP Marketplace. For Marketplace pub/sub event.
    */
    'id'?: string;
    /**
    * The custom properties that were collected from the user to create this entitlement.
    */
    'inputProperties'?: Array<number>;
    /**
    * Provider-supplied message that is displayed to the end user. Currently this is used to communicate progress and ETA for provisioning. This field can be updated only when a user is waiting for an action from the provider, i.e. entitlement state is EntitlementState.ENTITLEMENT_ACTIVATION_REQUESTED or EntitlementState.ENTITLEMENT_PENDING_PLAN_CHANGE_APPROVAL. This field is cleared automatically when the entitlement state changes.
    */
    'messageToUser'?: string;
    /**
    * The resource name of the entitlement. Entitlement names have the form of `providers/{provider_id}/entitlements/{entitlement_id}`.
    */
    'name'?: string;
    /**
    * in ISO 8601 duration format, such as \"P2Y3M\". For Marketplace pub/sub event.
    */
    'newOfferDuration'?: string;
    /**
    * Output only. The end time of the new offer. Field is empty if the pending plan change is not moving to an offer. If the offer was created with a term instead of a specified end date, this field is empty.
    */
    'newOfferEndTime'?: string;
    /**
    * Output only. The start time of the new offer. Field is empty if the pending plan change is not moving to an offer.
    */
    'newOfferStartTime'?: string;
    /**
    * The name of the offer the entitlement is switching to upon a pending plan change. Only exists if the pending plan change is moving to an offer. Format: \'projects/{project}/services/{service}/privateOffers/{offer-id}\' OR \'projects/{project}/services/{service}/standardOffers/{offer-id}\', depending on whether the offer is private or public.
    */
    'newPendingOffer'?: string;
    /**
    * The offer duration of the new offer in ISO 8601 duration format. Field is empty if the pending plan change is not moving to an offer since the entitlement is not pending, only the plan change is pending.
    */
    'newPendingOfferDuration'?: string;
    /**
    * The identifier of the pending new plan. Required if the product has plans and the entitlement has a pending plan change.
    */
    'newPendingPlan'?: string;
    /**
    * When the buyer changes plan, For Marketplace pub/sub event.
    */
    'newPlan'?: string;
    /**
    * The name of the offer that was procured. Field is empty if order was not made using an offer. Format: \'projects/{project}/services/{service}/privateOffers/{offer-id}\' OR \'projects/{project}/services/{service}/standardOffers/{offer-id}\', depending on whether the offer is private or public.
    */
    'offer'?: string;
    /**
    * The offer duration of the current offer in ISO 8601 duration format. Field is empty if entitlement was not made using an offer, such as \"P1Y\", \"P2M\"
    */
    'offerDuration'?: string;
    /**
    * When the offer is effective.
    */
    'offerEffectiveTime'?: Date;
    /**
    * Output only. End time for the Offer association corresponding to this entitlement. The field is only populated if the entitlement is currently associated with an Offer.
    */
    'offerEndTime'?: Date;
    /**
    * The identifier of the plan that was procured. Required if the product has plans.
    */
    'plan'?: string;
    /**
    * The identifier of the entity that was purchased. This may actually represent a product, quote, or offer. For Private offer, \"projects/project-id/services/product-id.endpoints.partner-id.cloud.goog/privateOffers/private-offer-id\"
    */
    'product'?: string;
    /**
    * The identifier of the product that was procured.
    */
    'productExternalName'?: string;
    /**
    * The ID of the service provider under Cloud Commerce platform that this entitlement was created against.
    */
    'provider'?: string;
    /**
    * The identifier of the quote that was used to procure, such as the private offer Id. Empty if the order is not purchased using a quote.
    */
    'quoteExternalName'?: string;
    /**
    * Enums of the Entitlement State. https://cloud.google.com/marketplace/docs/partners/commerce-procurement-api/reference/rest/v1/providers.entitlements#EntitlementState
    */
    'state'?: GcpMarketplaceEntitlementState;
    /**
    * The End time for the subscription corresponding to this entitlement.
    */
    'subscriptionEndTime'?: Date;
    /**
    * The last update timestamp. It is the endTime for the cancelled entitlement.
    */
    'updateTime'?: Date;
    /**
    * The consumerId to use when reporting usage through the Service Control API. See the consumerId field at Reporting Metrics (https://cloud.google.com/service-control/reporting-metrics) for more details. This field is present only if the product has usage-based billing configured.
    */
    'usageReportingId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "account",
            "baseName": "account",
            "type": "string",
            "format": ""
        },
        {
            "name": "consumers",
            "baseName": "consumers",
            "type": "Array<GcpMarketplaceConsumer>",
            "format": ""
        },
        {
            "name": "createTime",
            "baseName": "createTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "inputProperties",
            "baseName": "inputProperties",
            "type": "Array<number>",
            "format": ""
        },
        {
            "name": "messageToUser",
            "baseName": "messageToUser",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "newOfferDuration",
            "baseName": "newOfferDuration",
            "type": "string",
            "format": ""
        },
        {
            "name": "newOfferEndTime",
            "baseName": "newOfferEndTime",
            "type": "string",
            "format": ""
        },
        {
            "name": "newOfferStartTime",
            "baseName": "newOfferStartTime",
            "type": "string",
            "format": ""
        },
        {
            "name": "newPendingOffer",
            "baseName": "newPendingOffer",
            "type": "string",
            "format": ""
        },
        {
            "name": "newPendingOfferDuration",
            "baseName": "newPendingOfferDuration",
            "type": "string",
            "format": ""
        },
        {
            "name": "newPendingPlan",
            "baseName": "newPendingPlan",
            "type": "string",
            "format": ""
        },
        {
            "name": "newPlan",
            "baseName": "newPlan",
            "type": "string",
            "format": ""
        },
        {
            "name": "offer",
            "baseName": "offer",
            "type": "string",
            "format": ""
        },
        {
            "name": "offerDuration",
            "baseName": "offerDuration",
            "type": "string",
            "format": ""
        },
        {
            "name": "offerEffectiveTime",
            "baseName": "offerEffectiveTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "offerEndTime",
            "baseName": "offerEndTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "plan",
            "baseName": "plan",
            "type": "string",
            "format": ""
        },
        {
            "name": "product",
            "baseName": "product",
            "type": "string",
            "format": ""
        },
        {
            "name": "productExternalName",
            "baseName": "productExternalName",
            "type": "string",
            "format": ""
        },
        {
            "name": "provider",
            "baseName": "provider",
            "type": "string",
            "format": ""
        },
        {
            "name": "quoteExternalName",
            "baseName": "quoteExternalName",
            "type": "string",
            "format": ""
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "GcpMarketplaceEntitlementState",
            "format": ""
        },
        {
            "name": "subscriptionEndTime",
            "baseName": "subscriptionEndTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "updateTime",
            "baseName": "updateTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "usageReportingId",
            "baseName": "usageReportingId",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return GcpMarketplaceEntitlement.attributeTypeMap;
    }

    public constructor() {
    }
}


