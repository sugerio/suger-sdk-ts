/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { TypesUsageRecord } from '../models/TypesUsageRecord';
import { TypesUsageRecordResultStatus } from '../models/TypesUsageRecordResultStatus';
import { HttpFile } from '../http/http';

export class TypesUsageRecordResult {
    /**
    * The MeteringRecordId is a unique identifier for this metering event.
    */
    'meteringRecordId'?: string;
    /**
    * The UsageRecordResult Status indicates the status of an individual UsageRecord processed by BatchMeterUsage .   - Success- The UsageRecord was accepted and honored by BatchMeterUsage .   - CustomerNotSubscribed- The CustomerIdentifier specified is not able to use   your product. The UsageRecord was not honored. There are three causes for this   result:   - The customer identifier is invalid.   - The customer identifier provided in the metering record does not have an   active agreement or subscription with this product. Future UsageRecords for   this customer will fail until the customer subscribes to your product.   - The customer\'s AWS account was suspended.   - DuplicateRecord- Indicates that the UsageRecord was invalid and not honored.   A previously metered UsageRecord had the same customer, dimension, and time,   but a different quantity.
    */
    'status'?: TypesUsageRecordResultStatus;
    /**
    * The UsageRecord that was part of the BatchMeterUsage request.
    */
    'usageRecord'?: TypesUsageRecord;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "meteringRecordId",
            "baseName": "meteringRecordId",
            "type": "string",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "TypesUsageRecordResultStatus",
            "format": ""
        },
        {
            "name": "usageRecord",
            "baseName": "usageRecord",
            "type": "TypesUsageRecord",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return TypesUsageRecordResult.attributeTypeMap;
    }

    public constructor() {
    }
}


