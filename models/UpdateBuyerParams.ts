/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { CompanyInfo } from '../models/CompanyInfo';
import { PaymentConfig } from '../models/PaymentConfig';
import { HttpFile } from '../http/http';

export class UpdateBuyerParams {
    /**
    * The Chargebee Customer ID of the buyer. If not provided, the Chargebee Customer ID will not be updated.
    */
    'chargebeeCustomerID'?: string;
    /**
    * Optional. CompanyInfo of the buyer.
    */
    'companyInfo'?: CompanyInfo;
    /**
    * The customer ID to recognize the cloud marketplace buyer in your internal system. This may be used for uploading CSV files for Batch Metering Usage
    */
    'customerId'?: string;
    /**
    * The description of the buyer. If not provided, the description will not be updated.
    */
    'description'?: string;
    /**
    * The Lago Customer ID of the buyer. If not provided, the Lago Customer ID will not be updated.
    */
    'lagoCustomerId'?: string;
    /**
    * The Metronome Customer ID of the buyer. If not provided, the Metronome Customer ID will not be updated.
    */
    'metronomeCustomerId'?: string;
    /**
    * The name of the buyer. If not provided, the name will not be updated.
    */
    'name'?: string;
    /**
    * The Orb Customer ID of the buyer. If not provided, the Orb Customer ID will not be updated.
    */
    'orbCustomerId'?: string;
    /**
    * Optional. PaymentConfig of the buyer. The currency can\'t be updated.
    */
    'paymentConfig'?: PaymentConfig;
    /**
    * The Quickbooks Customer ID of the buyer. If not provided, the Quickbooks Customer ID will not be updated.
    */
    'quickbooksCustomerId'?: string;
    /**
    * The Stripe Customer ID of the buyer. If not provided, the Stripe Customer ID will not be updated.
    */
    'stripeCustomerId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "chargebeeCustomerID",
            "baseName": "chargebeeCustomerID",
            "type": "string",
            "format": ""
        },
        {
            "name": "companyInfo",
            "baseName": "companyInfo",
            "type": "CompanyInfo",
            "format": ""
        },
        {
            "name": "customerId",
            "baseName": "customerId",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "lagoCustomerId",
            "baseName": "lagoCustomerId",
            "type": "string",
            "format": ""
        },
        {
            "name": "metronomeCustomerId",
            "baseName": "metronomeCustomerId",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "orbCustomerId",
            "baseName": "orbCustomerId",
            "type": "string",
            "format": ""
        },
        {
            "name": "paymentConfig",
            "baseName": "paymentConfig",
            "type": "PaymentConfig",
            "format": ""
        },
        {
            "name": "quickbooksCustomerId",
            "baseName": "quickbooksCustomerId",
            "type": "string",
            "format": ""
        },
        {
            "name": "stripeCustomerId",
            "baseName": "stripeCustomerId",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return UpdateBuyerParams.attributeTypeMap;
    }

    public constructor() {
    }
}
