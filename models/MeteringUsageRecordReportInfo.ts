/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AggregatedMeteringUsageRecord } from '../models/AggregatedMeteringUsageRecord';
import { AwsMarketplaceMeteringBatchMeterUsageInput } from '../models/AwsMarketplaceMeteringBatchMeterUsageInput';
import { AzureMarketplaceMeteringBatchUsageEvent } from '../models/AzureMarketplaceMeteringBatchUsageEvent';
import { ClientPushMeteringDataRequest } from '../models/ClientPushMeteringDataRequest';
import { ClientPushMeteringDataResponseBody } from '../models/ClientPushMeteringDataResponseBody';
import { GcpMarketplaceMeteringOperation } from '../models/GcpMarketplaceMeteringOperation';
import { GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1BatchUsageEventOkResponse } from '../models/GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1BatchUsageEventOkResponse';
import { MarketplacemeteringBatchMeterUsageOutput } from '../models/MarketplacemeteringBatchMeterUsageOutput';
import { ServicecontrolReportResponse } from '../models/ServicecontrolReportResponse';
import { UsageRecordReportStatus } from '../models/UsageRecordReportStatus';
import { HttpFile } from '../http/http';

export class MeteringUsageRecordReportInfo {
    /**
    * The aggregated billable records from the usage metering API v2.
    */
    'aggregatedBillableRecords'?: Array<AggregatedMeteringUsageRecord>;
    /**
    * The raw request to call Alibaba metering service.
    */
    'alibabaMeteringRequest'?: ClientPushMeteringDataRequest;
    /**
    * The raw response from Alibaba metering service.
    */
    'alibabaMeteringResponse'?: ClientPushMeteringDataResponseBody;
    /**
    * The raw request to call AWS metering service.
    */
    'awsMeteringRequest'?: AwsMarketplaceMeteringBatchMeterUsageInput;
    /**
    * The raw response from AWS metering service.
    */
    'awsMeteringResponse'?: MarketplacemeteringBatchMeterUsageOutput;
    /**
    * The raw request to call Azure metering service.
    */
    'azureMeteringRequest'?: AzureMarketplaceMeteringBatchUsageEvent;
    /**
    * The raw response from Azure metering service.
    */
    'azureMeteringResponse'?: GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1BatchUsageEventOkResponse;
    /**
    * The amount of the commit if applicable.
    */
    'commitAmount'?: number;
    /**
    * The amount of the credit if applicable.
    */
    'creditAmount'?: number;
    /**
    * The credit usage records in the map of <DimensionKey, Count> for usage metering API v1.
    */
    'creditRecords'?: { [key: string]: number; };
    /**
    * The decimal parts of the usage dimension quantity in the map of <DimensionKey, DecimalPart>, before this usage record report.
    */
    'decimalParts'?: { [key: string]: number; };
    /**
    * The categories of the usage records in the map of <DimensionKey, Category>. The dimension category is required when reporting usage records to Alibaba Marketplace. It comes from the metering dimension category.
    */
    'dimensionCategories'?: { [key: string]: string; };
    /**
    * The public list price of each dimension in the map of <DimensionKey, UnitPrice>.
    */
    'dimensionUnitListPrice'?: { [key: string]: number; };
    /**
    * The unit price of each dimension in the map of <DimensionKey, UnitPrice>. It can be the negotiated price in the private offer or the public list price.
    */
    'dimensionUnitPrice'?: { [key: string]: number; };
    /**
    * time in UTC when the UsageRecordReport ends
    */
    'endTime'?: Date;
    /**
    * The raw request to call GCP metering service.
    */
    'gcpMeteringRequest'?: GcpMarketplaceMeteringOperation;
    /**
    * The raw response from GCP metering service.
    */
    'gcpMeteringResponse'?: ServicecontrolReportResponse;
    /**
    * The included usage records in the map of <DimensionKey, Count> for usage metering API v1.
    */
    'includedRecords'?: { [key: string]: number; };
    'message'?: string;
    /**
    * The decimal parts of the usage dimension quantity in the map of <DimensionKey, DecimalPart>, after this usage record report.
    */
    'newDecimalParts'?: { [key: string]: number; };
    /**
    * The partner where this usage record report is sent to. Such as AWS, AZURE or GCP.
    */
    'partner'?: string;
    /**
    * The usage records to report before the adjustment by the commit with additional usage at list price, in the map of <DimensionKey, Count>.
    */
    'recordsToReportBeforeAdjustmentAtListPrice'?: { [key: string]: number; };
    /**
    * The reported usage records in the map of <DimensionKey, Count> for usage metering API v1.
    */
    'reportedRecords'?: { [key: string]: number; };
    /**
    * time in UTC when the UsageRecordReport starts
    */
    'startTime'?: Date;
    'status'?: UsageRecordReportStatus;
    /**
    * The IDs of UsageRecordGroups aggregated in this UsageRecordReport.
    */
    'usageRecordGroupIds'?: Array<string>;
    /**
    * The amount of the used commit before this usage record report if applicable.
    */
    'usedCommitAmount'?: number;
    /**
    * The amount of the used commit increment in this usage record report if applicable.
    */
    'usedCommitAmountIncrement'?: number;
    /**
    * The amount of the used credit before this usage record report if applicable.
    */
    'usedCreditAmount'?: number;
    /**
    * The amount of the used credit increment in this usage record report if applicable.
    */
    'usedCreditAmountIncrement'?: number;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "aggregatedBillableRecords",
            "baseName": "aggregatedBillableRecords",
            "type": "Array<AggregatedMeteringUsageRecord>",
            "format": ""
        },
        {
            "name": "alibabaMeteringRequest",
            "baseName": "alibabaMeteringRequest",
            "type": "ClientPushMeteringDataRequest",
            "format": ""
        },
        {
            "name": "alibabaMeteringResponse",
            "baseName": "alibabaMeteringResponse",
            "type": "ClientPushMeteringDataResponseBody",
            "format": ""
        },
        {
            "name": "awsMeteringRequest",
            "baseName": "awsMeteringRequest",
            "type": "AwsMarketplaceMeteringBatchMeterUsageInput",
            "format": ""
        },
        {
            "name": "awsMeteringResponse",
            "baseName": "awsMeteringResponse",
            "type": "MarketplacemeteringBatchMeterUsageOutput",
            "format": ""
        },
        {
            "name": "azureMeteringRequest",
            "baseName": "azureMeteringRequest",
            "type": "AzureMarketplaceMeteringBatchUsageEvent",
            "format": ""
        },
        {
            "name": "azureMeteringResponse",
            "baseName": "azureMeteringResponse",
            "type": "GithubComSugerioMarketplaceServiceAzureSdkMarketplacemeteringv1BatchUsageEventOkResponse",
            "format": ""
        },
        {
            "name": "commitAmount",
            "baseName": "commitAmount",
            "type": "number",
            "format": ""
        },
        {
            "name": "creditAmount",
            "baseName": "creditAmount",
            "type": "number",
            "format": ""
        },
        {
            "name": "creditRecords",
            "baseName": "creditRecords",
            "type": "{ [key: string]: number; }",
            "format": ""
        },
        {
            "name": "decimalParts",
            "baseName": "decimalParts",
            "type": "{ [key: string]: number; }",
            "format": ""
        },
        {
            "name": "dimensionCategories",
            "baseName": "dimensionCategories",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "dimensionUnitListPrice",
            "baseName": "dimensionUnitListPrice",
            "type": "{ [key: string]: number; }",
            "format": ""
        },
        {
            "name": "dimensionUnitPrice",
            "baseName": "dimensionUnitPrice",
            "type": "{ [key: string]: number; }",
            "format": ""
        },
        {
            "name": "endTime",
            "baseName": "endTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "gcpMeteringRequest",
            "baseName": "gcpMeteringRequest",
            "type": "GcpMarketplaceMeteringOperation",
            "format": ""
        },
        {
            "name": "gcpMeteringResponse",
            "baseName": "gcpMeteringResponse",
            "type": "ServicecontrolReportResponse",
            "format": ""
        },
        {
            "name": "includedRecords",
            "baseName": "includedRecords",
            "type": "{ [key: string]: number; }",
            "format": ""
        },
        {
            "name": "message",
            "baseName": "message",
            "type": "string",
            "format": ""
        },
        {
            "name": "newDecimalParts",
            "baseName": "newDecimalParts",
            "type": "{ [key: string]: number; }",
            "format": ""
        },
        {
            "name": "partner",
            "baseName": "partner",
            "type": "string",
            "format": ""
        },
        {
            "name": "recordsToReportBeforeAdjustmentAtListPrice",
            "baseName": "recordsToReportBeforeAdjustmentAtListPrice",
            "type": "{ [key: string]: number; }",
            "format": ""
        },
        {
            "name": "reportedRecords",
            "baseName": "reportedRecords",
            "type": "{ [key: string]: number; }",
            "format": ""
        },
        {
            "name": "startTime",
            "baseName": "startTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "UsageRecordReportStatus",
            "format": ""
        },
        {
            "name": "usageRecordGroupIds",
            "baseName": "usageRecordGroupIds",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "usedCommitAmount",
            "baseName": "usedCommitAmount",
            "type": "number",
            "format": ""
        },
        {
            "name": "usedCommitAmountIncrement",
            "baseName": "usedCommitAmountIncrement",
            "type": "number",
            "format": ""
        },
        {
            "name": "usedCreditAmount",
            "baseName": "usedCreditAmount",
            "type": "number",
            "format": ""
        },
        {
            "name": "usedCreditAmountIncrement",
            "baseName": "usedCreditAmountIncrement",
            "type": "number",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return MeteringUsageRecordReportInfo.attributeTypeMap;
    }

    public constructor() {
    }
}


