/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { BillingDiscount } from '../models/BillingDiscount';
import { BillingMinimumCommitScope } from '../models/BillingMinimumCommitScope';
import { PriceModelBasic } from '../models/PriceModelBasic';
import { PriceModelBulk } from '../models/PriceModelBulk';
import { PriceModelCategory } from '../models/PriceModelCategory';
import { PriceModelMatrix } from '../models/PriceModelMatrix';
import { PriceModelPercentage } from '../models/PriceModelPercentage';
import { PriceModelTiered } from '../models/PriceModelTiered';
import { PriceModelTieredPercentage } from '../models/PriceModelTieredPercentage';
import { PriceModelVolume } from '../models/PriceModelVolume';
import { TimeUnit } from '../models/TimeUnit';
import { HttpFile } from '../http/http';

export class BillableDimension {
    /**
    * The ID for the billable metric.
    */
    'billableMetricId'?: string;
    /**
    * The category of the pricing model. This is used to determine which pricing model to use.
    */
    'category'?: PriceModelCategory;
    /**
    * Description of the dimension. This is used in the UI to display the dimension.
    */
    'description'?: string;
    /**
    * Discount for the dimension.
    */
    'discount'?: BillingDiscount;
    /**
    * The term length for the commit amount. Applicable to Direct only.
    */
    'length'?: number;
    /**
    * The minimum commit amount. Applicable to Direct only. Ignored if the value is 0 or less.
    */
    'minimumCommit'?: number;
    /**
    * If the minimum commit is appled with pro-rata. Applicable to Direct only. If true, the minimum commit amount will be prorated based on the usage period (starting time and ending time).
    */
    'minimumCommitProrata'?: boolean;
    /**
    * The minimum commit scope. The default value is \"DIMENSION\" if not set.
    */
    'minimumCommitScope'?: BillingMinimumCommitScope;
    /**
    * Display name of the dimension. This is used in the UI to display the dimension.
    */
    'name'?: string;
    /**
    * The configuration for the Basic pricing model. Applicable to Direct only.
    */
    'priceModelBasic'?: PriceModelBasic;
    /**
    * The configuration for the Package pricing model. Applicable to Direct only.
    */
    'priceModelBulk'?: PriceModelBulk;
    /**
    * The configuration for the Matrix pricing model. Applicable to Direct only.
    */
    'priceModelMatrix'?: PriceModelMatrix;
    /**
    * The configuration for the Percentage pricing model. Applicable to Direct only.
    */
    'priceModelPercentage'?: PriceModelPercentage;
    /**
    * The configuration for the Tiered pricing model. Applicable to Direct only.
    */
    'priceModelTiered'?: PriceModelTiered;
    /**
    * The configuration for the Tiered Percentage pricing model. Applicable to Direct only.
    */
    'priceModelTieredPercentage'?: PriceModelTieredPercentage;
    /**
    * The configuration for the Bulk pricing model. Applicable to Direct only.
    */
    'priceModelVolume'?: PriceModelVolume;
    /**
    * The term unit for the commit amount. Applicable to Direct only.
    */
    'timeUnit'?: TimeUnit;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "billableMetricId",
            "baseName": "billableMetricId",
            "type": "string",
            "format": ""
        },
        {
            "name": "category",
            "baseName": "category",
            "type": "PriceModelCategory",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "discount",
            "baseName": "discount",
            "type": "BillingDiscount",
            "format": ""
        },
        {
            "name": "length",
            "baseName": "length",
            "type": "number",
            "format": ""
        },
        {
            "name": "minimumCommit",
            "baseName": "minimumCommit",
            "type": "number",
            "format": ""
        },
        {
            "name": "minimumCommitProrata",
            "baseName": "minimumCommitProrata",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "minimumCommitScope",
            "baseName": "minimumCommitScope",
            "type": "BillingMinimumCommitScope",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "priceModelBasic",
            "baseName": "priceModelBasic",
            "type": "PriceModelBasic",
            "format": ""
        },
        {
            "name": "priceModelBulk",
            "baseName": "priceModelBulk",
            "type": "PriceModelBulk",
            "format": ""
        },
        {
            "name": "priceModelMatrix",
            "baseName": "priceModelMatrix",
            "type": "PriceModelMatrix",
            "format": ""
        },
        {
            "name": "priceModelPercentage",
            "baseName": "priceModelPercentage",
            "type": "PriceModelPercentage",
            "format": ""
        },
        {
            "name": "priceModelTiered",
            "baseName": "priceModelTiered",
            "type": "PriceModelTiered",
            "format": ""
        },
        {
            "name": "priceModelTieredPercentage",
            "baseName": "priceModelTieredPercentage",
            "type": "PriceModelTieredPercentage",
            "format": ""
        },
        {
            "name": "priceModelVolume",
            "baseName": "priceModelVolume",
            "type": "PriceModelVolume",
            "format": ""
        },
        {
            "name": "timeUnit",
            "baseName": "timeUnit",
            "type": "TimeUnit",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return BillableDimension.attributeTypeMap;
    }

    public constructor() {
    }
}


