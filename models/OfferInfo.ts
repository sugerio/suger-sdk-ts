/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AwsChannelPartner } from '../models/AwsChannelPartner';
import { AwsMarketplaceCppoOpportunity } from '../models/AwsMarketplaceCppoOpportunity';
import { AwsMarketplaceEventBridgeEventDetail } from '../models/AwsMarketplaceEventBridgeEventDetail';
import { AzureAudience } from '../models/AzureAudience';
import { AzureMarketplacePriceAndAvailabilityPrivateOfferPlan } from '../models/AzureMarketplacePriceAndAvailabilityPrivateOfferPlan';
import { AzureMarketplacePrivateOffer } from '../models/AzureMarketplacePrivateOffer';
import { AzureProductVariant } from '../models/AzureProductVariant';
import { BillableDimension } from '../models/BillableDimension';
import { BillingCycle } from '../models/BillingCycle';
import { CommitDimension } from '../models/CommitDimension';
import { EulaType } from '../models/EulaType';
import { GcpAgreementDocument } from '../models/GcpAgreementDocument';
import { GcpMarketplaceOfferDealType } from '../models/GcpMarketplaceOfferDealType';
import { GcpMarketplacePrivateOffer } from '../models/GcpMarketplacePrivateOffer';
import { GcpMarketplacePrivateOfferCustomerInfo } from '../models/GcpMarketplacePrivateOfferCustomerInfo';
import { GcpMarketplacePrivateOfferProviderInfo } from '../models/GcpMarketplacePrivateOfferProviderInfo';
import { GcpMarketplaceProductMeteringMetric } from '../models/GcpMarketplaceProductMeteringMetric';
import { GcpMarketplaceProductPurchaseOptionSpec } from '../models/GcpMarketplaceProductPurchaseOptionSpec';
import { GcpMarketplaceResellerPrivateOfferPlan } from '../models/GcpMarketplaceResellerPrivateOfferPlan';
import { GcpMarketplaceUsagePlanPriceModel } from '../models/GcpMarketplaceUsagePlanPriceModel';
import { MeteringDimension } from '../models/MeteringDimension';
import { PaymentInstallment } from '../models/PaymentInstallment';
import { PaymentScheduleType } from '../models/PaymentScheduleType';
import { SnowflakeMarketplaceOffer } from '../models/SnowflakeMarketplaceOffer';
import { TrialConfig } from '../models/TrialConfig';
import { HttpFile } from '../http/http';

export class OfferInfo {
    /**
    * The URL of the additional EULA files. Only applicable when EulaType = CUSTOM. The additional EULA files will be attached to the EULA file in the EulaUrl, and form a single EULA file.
    */
    'additionalEulaUrls'?: Array<string>;
    /**
    * The URL of the additional reseller EULA files. Only applicable when ResellerEulaType = CUSTOM.
    */
    'additionalResellerEulaUrls'?: Array<string>;
    /**
    * Attach the standard EULA file to the CUSTOM EULA file. Only applicable when EulaType = CUSTOM
    */
    'attachEulaType'?: EulaType;
    /**
    * Is this offer Auto Renew enabled.
    */
    'autoRenew'?: boolean;
    /**
    * Aws private subscription offer Usage duration. ISO8601 format. P300D means the contract Usage start date At acceptance, and with duration 300 days.
    */
    'awsAgreementDuration'?: string;
    /**
    * The AWS channel partner (reseller), only applicable for AWS Marketplace CPPO_OUT or CPPO offers.
    */
    'awsChannelPartner'?: AwsChannelPartner;
    /**
    * AWS EventBridge Event, only applicable for AWS Marketplace CPPO offers.
    */
    'awsCppoEventDetail'?: AwsMarketplaceEventBridgeEventDetail;
    /**
    * AWS CPPO Opportunity, only applicable for AWS Marketplace CPPO_OUT or CPPO_IN offers.
    */
    'awsCppoOpportunity'?: AwsMarketplaceCppoOpportunity;
    /**
    * For AWS machine learning contract private offer only. The contract duration of the offer in months.
    */
    'awsMachineLearningContractDuration'?: number;
    /**
    * AWS private reseller offer using markup percentage. 10.0 represent 10% partner margin.
    */
    'awsMarkupPercentage'?: number;
    /**
    * AWS ResaleAuthorizationId(CPPO_IN offer id) for CPPO offers of the reseller.
    */
    'awsResaleAuthorizationId'?: string;
    /**
    * The origin pricing of Azure plan. Only applicable for Azure Marketplace plans.
    */
    'azureOriginalPlan'?: AzureMarketplacePriceAndAvailabilityPrivateOfferPlan;
    /**
    * The private offer for Azure Marketplace. Only applicable for Azure Marketplace private offers.
    */
    'azurePrivateOffer'?: AzureMarketplacePrivateOffer;
    /**
    * For Azure marketplace only.
    */
    'azureProductVariant'?: AzureProductVariant;
    /**
    * Usage based metering dimensions based on Billable Metrics, managed by Suger only.
    */
    'billableDimensions'?: Array<BillableDimension>;
    /**
    * Billing Cycle for the offer.
    */
    'billingCycle'?: BillingCycle;
    /**
    * Billing interval in months for the offer.
    */
    'billingIntervalInMonths'?: number;
    /**
    * The buyers\' AWS Account IDs of this offer.
    */
    'buyerAwsAccountIds'?: Array<string>;
    /**
    * The buyers\' Azure tenants of this offer.
    */
    'buyerAzureTenants'?: Array<AzureAudience>;
    /**
    * The amount that the buyer has committed to pay, before discount if applicable. It can be monthly commitment or total commitment. For frontend display or analysis purposes, not used for billing.
    */
    'commitAmount'?: number;
    /**
    * Deprecated: Use BillingIntervalInMonths instead.
    */
    'commitBillingIntervalInMonths'?: number;
    /**
    * Recurring flat fee for the offer, managed by cloud marketplaces or Suger.
    */
    'commits'?: Array<CommitDimension>;
    /**
    * The currency code of the offer. ISO 4217 format.
    */
    'currency'?: string;
    /**
    * Usage based metering dimensions defined on cloud marketplaces, managed by Cloud marketplaces only.
    */
    'dimensions'?: Array<MeteringDimension>;
    /**
    * The discount percentage off the original price. For example, 20 means 20% off. 0 means no discount. It can be discount off the commitment amount or discount off the usage price.
    */
    'discountPercentage'?: number;
    /**
    * The Docusign envelope IDs generated for the offer. The key is the contact ID, the value is the Docusign envelope ID.
    */
    'docusignEnvelopeIds'?: { [key: string]: string; };
    /**
    * The merge order of the EULA files. Only applicable when EulaType = CUSTOM. Elements are the original index of the EULA files in the index they should be transferred to, where original indexes are: AttachEulaType is index 0, EulaUrl is index 1, additionalEulaUrls is index 2 onwards.
    */
    'eulaMergeOrder'?: Array<number>;
    'eulaType'?: EulaType;
    'eulaUrl'?: string;
    /**
    * Only required when creating GCP Marketplace private offer.
    */
    'gcpCustomerInfo'?: GcpMarketplacePrivateOfferCustomerInfo;
    /**
    * The duration of the offer in months. Only required when creating GCP Marketplace private offer.
    */
    'gcpDuration'?: number;
    /**
    * Only applicable for GCP Marketplace Offers (the default or private offer)
    */
    'gcpMetrics'?: Array<GcpMarketplaceProductMeteringMetric>;
    /**
    * Optional when creating GCP Marketplace private offer and replacement offer.
    */
    'gcpOfferDealType'?: GcpMarketplaceOfferDealType;
    /**
    * Only required when creating GCP Marketplace private offer, to specify the payment schedule for the private offer. TODO: It will be deprecated in the future and replaced by PaymentSchedule.
    */
    'gcpPaymentSchedule'?: PaymentScheduleType;
    /**
    * Only applicable for GCP Marketplace
    */
    'gcpPlans'?: Array<GcpMarketplaceProductPurchaseOptionSpec>;
    /**
    * The private offer for GCP Marketplace. Only applicable for GCP Marketplace private offers.
    */
    'gcpPrivateOffer'?: GcpMarketplacePrivateOffer;
    /**
    * Only required when creating GCP Marketplace private offer.
    */
    'gcpProviderInfo'?: GcpMarketplacePrivateOfferProviderInfo;
    /**
    * Optional when creating GCP Marketplace private offer. The internal note for the seller/ISV. It is only visible to the seller/ISV.
    */
    'gcpProviderInternalNote'?: string;
    /**
    * Optional when creating GCP Marketplace private offer. By default, it is the same as offer name. The public note for the buyer. It is visible to the buyer.
    */
    'gcpProviderPublicNote'?: string;
    'gcpResellerPrivateOfferPlan'?: GcpMarketplaceResellerPrivateOfferPlan;
    /**
    * Optional when creating GCP Marketplace private offer for professional services.
    */
    'gcpSowAgreementDocument'?: GcpAgreementDocument;
    /**
    * Only applicable for GCP Marketplace with Usage plan. Not appliable for Subscription plan.
    */
    'gcpUsagePlanPriceModel'?: GcpMarketplaceUsagePlanPriceModel;
    /**
    * The grace period in days for the offer. This is the number of days during which invoices remain in draft status, for reviewing. This filed can be overridden at the entitlement level.
    */
    'gracePeriodInDays'?: number;
    /**
    * Whether the usage metering will only be charged for the amount that exceeds the committed amount. e.g. the buyer has committed $100, and the usage is $120, - if true, the buyer will be charged for the usage at $20, and the commit at $100. - if false, the buyer will be charged for the usage at $120, and the commit at $100.
    */
    'isMeteringOverageCommit'?: boolean;
    /**
    * The net terms in days for the offer. This is the number of days the buyer has to pay the invoice. This filed can be overridden at the entitlement level.
    */
    'netTermsInDays'?: number;
    /**
    * For flexible payment schedule, managed by cloud marketplaces or Suger.
    */
    'paymentInstallments'?: Array<PaymentInstallment>;
    /**
    * The payment schedule for the offer. PREPAY means the buyer pays before the service is provided. POSTPAY means the buyer pays after the service is provided.
    */
    'paymentSchedule'?: PaymentScheduleType;
    /**
    * Not needed when creating stripe offer This URL points to the PDF version of the offer.
    */
    'pdfURL'?: string;
    /**
    * The URL of the private offer sent to buyers to accept. Only applicable for private offer.
    */
    'privateOfferUrl'?: string;
    /**
    * Prorated billing for the offer. If true, the billing is prorated based on the start date and end date. If false, the billing is not prorated. This filed can be overridden at the entitlement level.
    */
    'proratedBilling'?: boolean;
    'refundCancellationPolicy'?: string;
    /**
    * Attach the standard EULA file to the CUSTOM EULA file. Only applicable when EulaType = CUSTOM
    */
    'resellerAttachEulaType'?: EulaType;
    /**
    * The type of the reseller EULA. Only applicable for CPPO offers.
    */
    'resellerEulaType'?: EulaType;
    'resellerEulaUrl'?: string;
    'sellerNotes'?: string;
    /**
    * The private offer for Snowflake marketplace. Only applicable for Snowflake Marketplace offers.
    */
    'snowflakeOffer'?: SnowflakeMarketplaceOffer;
    /**
    * Optional when creating AWS or GCP Marketplace private offer on the contract product. The future start time of the offer if it is not started on the acceptance.
    */
    'startTime'?: Date;
    /**
    * Tax ids for the offer, used to calculate the tax amount for the offer. This field can be overridden at the entitlement level.
    */
    'taxIds'?: Array<string>;
    /**
    * The offer for Direct. Only applicable for Direct offers. It is used in Stripe, Adyen, and other direct payment providers. The trial configuration for the offer.
    */
    'trialConfig'?: TrialConfig;
    /**
    * Deprecated: Use BillingIntervalInMonths instead.
    */
    'usageBillingIntervalInMonths'?: number;
    /**
    * The default visibility of offer is PRIVATE.
    */
    'visibility'?: OfferInfoVisibilityEnum;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "additionalEulaUrls",
            "baseName": "additionalEulaUrls",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "additionalResellerEulaUrls",
            "baseName": "additionalResellerEulaUrls",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "attachEulaType",
            "baseName": "attachEulaType",
            "type": "EulaType",
            "format": ""
        },
        {
            "name": "autoRenew",
            "baseName": "autoRenew",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "awsAgreementDuration",
            "baseName": "awsAgreementDuration",
            "type": "string",
            "format": ""
        },
        {
            "name": "awsChannelPartner",
            "baseName": "awsChannelPartner",
            "type": "AwsChannelPartner",
            "format": ""
        },
        {
            "name": "awsCppoEventDetail",
            "baseName": "awsCppoEventDetail",
            "type": "AwsMarketplaceEventBridgeEventDetail",
            "format": ""
        },
        {
            "name": "awsCppoOpportunity",
            "baseName": "awsCppoOpportunity",
            "type": "AwsMarketplaceCppoOpportunity",
            "format": ""
        },
        {
            "name": "awsMachineLearningContractDuration",
            "baseName": "awsMachineLearningContractDuration",
            "type": "number",
            "format": ""
        },
        {
            "name": "awsMarkupPercentage",
            "baseName": "awsMarkupPercentage",
            "type": "number",
            "format": ""
        },
        {
            "name": "awsResaleAuthorizationId",
            "baseName": "awsResaleAuthorizationId",
            "type": "string",
            "format": ""
        },
        {
            "name": "azureOriginalPlan",
            "baseName": "azureOriginalPlan",
            "type": "AzureMarketplacePriceAndAvailabilityPrivateOfferPlan",
            "format": ""
        },
        {
            "name": "azurePrivateOffer",
            "baseName": "azurePrivateOffer",
            "type": "AzureMarketplacePrivateOffer",
            "format": ""
        },
        {
            "name": "azureProductVariant",
            "baseName": "azureProductVariant",
            "type": "AzureProductVariant",
            "format": ""
        },
        {
            "name": "billableDimensions",
            "baseName": "billableDimensions",
            "type": "Array<BillableDimension>",
            "format": ""
        },
        {
            "name": "billingCycle",
            "baseName": "billingCycle",
            "type": "BillingCycle",
            "format": ""
        },
        {
            "name": "billingIntervalInMonths",
            "baseName": "billingIntervalInMonths",
            "type": "number",
            "format": ""
        },
        {
            "name": "buyerAwsAccountIds",
            "baseName": "buyerAwsAccountIds",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "buyerAzureTenants",
            "baseName": "buyerAzureTenants",
            "type": "Array<AzureAudience>",
            "format": ""
        },
        {
            "name": "commitAmount",
            "baseName": "commitAmount",
            "type": "number",
            "format": ""
        },
        {
            "name": "commitBillingIntervalInMonths",
            "baseName": "commitBillingIntervalInMonths",
            "type": "number",
            "format": ""
        },
        {
            "name": "commits",
            "baseName": "commits",
            "type": "Array<CommitDimension>",
            "format": ""
        },
        {
            "name": "currency",
            "baseName": "currency",
            "type": "string",
            "format": ""
        },
        {
            "name": "dimensions",
            "baseName": "dimensions",
            "type": "Array<MeteringDimension>",
            "format": ""
        },
        {
            "name": "discountPercentage",
            "baseName": "discountPercentage",
            "type": "number",
            "format": ""
        },
        {
            "name": "docusignEnvelopeIds",
            "baseName": "docusignEnvelopeIds",
            "type": "{ [key: string]: string; }",
            "format": ""
        },
        {
            "name": "eulaMergeOrder",
            "baseName": "eulaMergeOrder",
            "type": "Array<number>",
            "format": ""
        },
        {
            "name": "eulaType",
            "baseName": "eulaType",
            "type": "EulaType",
            "format": ""
        },
        {
            "name": "eulaUrl",
            "baseName": "eulaUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "gcpCustomerInfo",
            "baseName": "gcpCustomerInfo",
            "type": "GcpMarketplacePrivateOfferCustomerInfo",
            "format": ""
        },
        {
            "name": "gcpDuration",
            "baseName": "gcpDuration",
            "type": "number",
            "format": ""
        },
        {
            "name": "gcpMetrics",
            "baseName": "gcpMetrics",
            "type": "Array<GcpMarketplaceProductMeteringMetric>",
            "format": ""
        },
        {
            "name": "gcpOfferDealType",
            "baseName": "gcpOfferDealType",
            "type": "GcpMarketplaceOfferDealType",
            "format": ""
        },
        {
            "name": "gcpPaymentSchedule",
            "baseName": "gcpPaymentSchedule",
            "type": "PaymentScheduleType",
            "format": ""
        },
        {
            "name": "gcpPlans",
            "baseName": "gcpPlans",
            "type": "Array<GcpMarketplaceProductPurchaseOptionSpec>",
            "format": ""
        },
        {
            "name": "gcpPrivateOffer",
            "baseName": "gcpPrivateOffer",
            "type": "GcpMarketplacePrivateOffer",
            "format": ""
        },
        {
            "name": "gcpProviderInfo",
            "baseName": "gcpProviderInfo",
            "type": "GcpMarketplacePrivateOfferProviderInfo",
            "format": ""
        },
        {
            "name": "gcpProviderInternalNote",
            "baseName": "gcpProviderInternalNote",
            "type": "string",
            "format": ""
        },
        {
            "name": "gcpProviderPublicNote",
            "baseName": "gcpProviderPublicNote",
            "type": "string",
            "format": ""
        },
        {
            "name": "gcpResellerPrivateOfferPlan",
            "baseName": "gcpResellerPrivateOfferPlan",
            "type": "GcpMarketplaceResellerPrivateOfferPlan",
            "format": ""
        },
        {
            "name": "gcpSowAgreementDocument",
            "baseName": "gcpSowAgreementDocument",
            "type": "GcpAgreementDocument",
            "format": ""
        },
        {
            "name": "gcpUsagePlanPriceModel",
            "baseName": "gcpUsagePlanPriceModel",
            "type": "GcpMarketplaceUsagePlanPriceModel",
            "format": ""
        },
        {
            "name": "gracePeriodInDays",
            "baseName": "gracePeriodInDays",
            "type": "number",
            "format": ""
        },
        {
            "name": "isMeteringOverageCommit",
            "baseName": "isMeteringOverageCommit",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "netTermsInDays",
            "baseName": "netTermsInDays",
            "type": "number",
            "format": ""
        },
        {
            "name": "paymentInstallments",
            "baseName": "paymentInstallments",
            "type": "Array<PaymentInstallment>",
            "format": ""
        },
        {
            "name": "paymentSchedule",
            "baseName": "paymentSchedule",
            "type": "PaymentScheduleType",
            "format": ""
        },
        {
            "name": "pdfURL",
            "baseName": "pdfURL",
            "type": "string",
            "format": ""
        },
        {
            "name": "privateOfferUrl",
            "baseName": "privateOfferUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "proratedBilling",
            "baseName": "proratedBilling",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "refundCancellationPolicy",
            "baseName": "refundCancellationPolicy",
            "type": "string",
            "format": ""
        },
        {
            "name": "resellerAttachEulaType",
            "baseName": "resellerAttachEulaType",
            "type": "EulaType",
            "format": ""
        },
        {
            "name": "resellerEulaType",
            "baseName": "resellerEulaType",
            "type": "EulaType",
            "format": ""
        },
        {
            "name": "resellerEulaUrl",
            "baseName": "resellerEulaUrl",
            "type": "string",
            "format": ""
        },
        {
            "name": "sellerNotes",
            "baseName": "sellerNotes",
            "type": "string",
            "format": ""
        },
        {
            "name": "snowflakeOffer",
            "baseName": "snowflakeOffer",
            "type": "SnowflakeMarketplaceOffer",
            "format": ""
        },
        {
            "name": "startTime",
            "baseName": "startTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "taxIds",
            "baseName": "taxIds",
            "type": "Array<string>",
            "format": ""
        },
        {
            "name": "trialConfig",
            "baseName": "trialConfig",
            "type": "TrialConfig",
            "format": ""
        },
        {
            "name": "usageBillingIntervalInMonths",
            "baseName": "usageBillingIntervalInMonths",
            "type": "number",
            "format": ""
        },
        {
            "name": "visibility",
            "baseName": "visibility",
            "type": "OfferInfoVisibilityEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return OfferInfo.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum OfferInfoVisibilityEnum {
    Private = 'PRIVATE',
    Public = 'PUBLIC'
}

