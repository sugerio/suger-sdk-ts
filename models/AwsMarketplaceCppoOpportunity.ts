/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AwsMarketplaceCppoDiscountType } from '../models/AwsMarketplaceCppoDiscountType';
import { AwsMarketplaceCppoDurationType } from '../models/AwsMarketplaceCppoDurationType';
import { AwsMarketplaceCppoOpportunityOfferDetails } from '../models/AwsMarketplaceCppoOpportunityOfferDetails';
import { AwsMarketplaceCppoOpportunityRule } from '../models/AwsMarketplaceCppoOpportunityRule';
import { AwsMarketplaceCppoOpportunityTerm } from '../models/AwsMarketplaceCppoOpportunityTerm';
import { AwsMarketplacePreExistingAgreement } from '../models/AwsMarketplacePreExistingAgreement';
import { AwsProductDimension } from '../models/AwsProductDimension';
import { HttpFile } from '../http/http';

export class AwsMarketplaceCppoOpportunity {
    'createdDate'?: string;
    'description'?: string;
    'dimensions'?: Array<AwsProductDimension>;
    'manufacturerAccountId'?: string;
    'manufacturerLegalName'?: string;
    'name'?: string;
    'offerDetails'?: AwsMarketplaceCppoOpportunityOfferDetails;
    'preExistingBuyerAgreement'?: AwsMarketplacePreExistingAgreement;
    'productId'?: string;
    'productName'?: string;
    'rules'?: Array<AwsMarketplaceCppoOpportunityRule>;
    'status'?: AwsMarketplaceCppoOpportunityStatusEnum;
    'terms'?: Array<AwsMarketplaceCppoOpportunityTerm>;
    /**
    * The following fields are not from aws catalog API, only used for cppo_out offer create. They shouldn\'t be read in other places because they will absent when fetch opportunity from aws catalog API.
    */
    'discountType'?: AwsMarketplaceCppoDiscountType;
    'opportunityDurationType'?: AwsMarketplaceCppoDurationType;
    'opportunityId'?: string;
    'partnerId'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "createdDate",
            "baseName": "CreatedDate",
            "type": "string",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "Description",
            "type": "string",
            "format": ""
        },
        {
            "name": "dimensions",
            "baseName": "Dimensions",
            "type": "Array<AwsProductDimension>",
            "format": ""
        },
        {
            "name": "manufacturerAccountId",
            "baseName": "ManufacturerAccountId",
            "type": "string",
            "format": ""
        },
        {
            "name": "manufacturerLegalName",
            "baseName": "ManufacturerLegalName",
            "type": "string",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "Name",
            "type": "string",
            "format": ""
        },
        {
            "name": "offerDetails",
            "baseName": "OfferDetails",
            "type": "AwsMarketplaceCppoOpportunityOfferDetails",
            "format": ""
        },
        {
            "name": "preExistingBuyerAgreement",
            "baseName": "PreExistingBuyerAgreement",
            "type": "AwsMarketplacePreExistingAgreement",
            "format": ""
        },
        {
            "name": "productId",
            "baseName": "ProductId",
            "type": "string",
            "format": ""
        },
        {
            "name": "productName",
            "baseName": "ProductName",
            "type": "string",
            "format": ""
        },
        {
            "name": "rules",
            "baseName": "Rules",
            "type": "Array<AwsMarketplaceCppoOpportunityRule>",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "Status",
            "type": "AwsMarketplaceCppoOpportunityStatusEnum",
            "format": ""
        },
        {
            "name": "terms",
            "baseName": "Terms",
            "type": "Array<AwsMarketplaceCppoOpportunityTerm>",
            "format": ""
        },
        {
            "name": "discountType",
            "baseName": "discountType",
            "type": "AwsMarketplaceCppoDiscountType",
            "format": ""
        },
        {
            "name": "opportunityDurationType",
            "baseName": "opportunityDurationType",
            "type": "AwsMarketplaceCppoDurationType",
            "format": ""
        },
        {
            "name": "opportunityId",
            "baseName": "opportunityId",
            "type": "string",
            "format": ""
        },
        {
            "name": "partnerId",
            "baseName": "partnerId",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return AwsMarketplaceCppoOpportunity.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum AwsMarketplaceCppoOpportunityStatusEnum {
    Active = 'Active',
    Restricted = 'Restricted',
    Complete = 'Complete'
}

