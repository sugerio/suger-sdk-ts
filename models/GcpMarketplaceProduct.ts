/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { GcpMarketplaceProductDerivedDiscoveryState } from '../models/GcpMarketplaceProductDerivedDiscoveryState';
import { GcpMarketplaceProductListingSpec } from '../models/GcpMarketplaceProductListingSpec';
import { GcpMarketplaceProductServiceConfig } from '../models/GcpMarketplaceProductServiceConfig';
import { HttpFile } from '../http/http';

export class GcpMarketplaceProduct {
    'createTime'?: Date;
    'derivedDiscoveryState'?: GcpMarketplaceProductDerivedDiscoveryState;
    /**
    * Nullable, GCP Marketplace Product UUID
    */
    'id'?: string;
    'lastPublishTime'?: Date;
    'listingSpec'?: GcpMarketplaceProductListingSpec;
    'marketplace'?: GcpMarketplaceProductMarketplaceEnum;
    /**
    * In format of \"projects/{project-number}/listings/{product-name}.endpoints.{provider-id}.cloud.goog\"
    */
    'name'?: string;
    'revisionCreateTime'?: Date;
    'revisionId'?: string;
    /**
    * In format of \"services/{product-name}.endpoints.{provider-id}.cloud.goog\"
    */
    'service'?: string;
    'serviceConfig'?: GcpMarketplaceProductServiceConfig;
    /**
    * TODO: add type
    */
    'validationSummary'?: any;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "createTime",
            "baseName": "createTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "derivedDiscoveryState",
            "baseName": "derivedDiscoveryState",
            "type": "GcpMarketplaceProductDerivedDiscoveryState",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "lastPublishTime",
            "baseName": "lastPublishTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "listingSpec",
            "baseName": "listingSpec",
            "type": "GcpMarketplaceProductListingSpec",
            "format": ""
        },
        {
            "name": "marketplace",
            "baseName": "marketplace",
            "type": "GcpMarketplaceProductMarketplaceEnum",
            "format": ""
        },
        {
            "name": "name",
            "baseName": "name",
            "type": "string",
            "format": ""
        },
        {
            "name": "revisionCreateTime",
            "baseName": "revisionCreateTime",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "revisionId",
            "baseName": "revisionId",
            "type": "string",
            "format": ""
        },
        {
            "name": "service",
            "baseName": "service",
            "type": "string",
            "format": ""
        },
        {
            "name": "serviceConfig",
            "baseName": "serviceConfig",
            "type": "GcpMarketplaceProductServiceConfig",
            "format": ""
        },
        {
            "name": "validationSummary",
            "baseName": "validationSummary",
            "type": "any",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return GcpMarketplaceProduct.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum GcpMarketplaceProductMarketplaceEnum {
    MarketplacesGoogleCloud = 'marketplaces/google-cloud'
}

