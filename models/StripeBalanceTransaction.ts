/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { StripeBalanceTransactionFeeDetail } from '../models/StripeBalanceTransactionFeeDetail';
import { HttpFile } from '../http/http';

export class StripeBalanceTransaction {
    /**
    * Gross amount of this transaction (in cents (or local equivalent)). A positive value represents funds charged to another party, and a negative value represents funds sent to another party.
    */
    'amount'?: number;
    /**
    * The date that the transaction\'s net funds become available in the Stripe balance.
    */
    'availableOn'?: number;
    /**
    * ID of the charge which the balance transaction comes from.
    */
    'chargeId'?: string;
    /**
    * Time at which the object was created. Measured in seconds since the Unix epoch.
    */
    'created'?: number;
    /**
    * An arbitrary string attached to the object. Often useful for displaying to users.
    */
    'description'?: string;
    /**
    * If applicable, this transaction uses an exchange rate. If money converts from currency A to currency B, then the `amount` in currency A, multipled by the `exchange_rate`, equals the `amount` in currency B. For example, if you charge a customer 10.00 EUR, the PaymentIntent\'s `amount` is `1000` and `currency` is `eur`. If this converts to 12.34 USD in your Stripe account, the BalanceTransaction\'s `amount` is `1234`, its `currency` is `usd`, and the `exchange_rate` is `1.234`.
    */
    'exchangeRate'?: number;
    /**
    * Fees (in cents (or local equivalent)) paid for this transaction. Represented as a positive integer when assessed.
    */
    'fee'?: number;
    /**
    * Detailed breakdown of fees (in cents (or local equivalent)) paid for this transaction.
    */
    'feeDetails'?: Array<StripeBalanceTransactionFeeDetail>;
    /**
    * Unique identifier for the object.
    */
    'id'?: string;
    /**
    * Net impact to a Stripe balance (in cents (or local equivalent)). A positive value represents incrementing a Stripe balance, and a negative value decrementing a Stripe balance. You can calculate the net impact of a transaction on a balance by `amount` - `fee`
    */
    'net'?: number;
    /**
    * The transaction\'s net funds status in the Stripe balance, which are either `available` or `pending`.
    */
    'status'?: string;
    /**
    * Transaction type: `adjustment`, `advance`, `advance_funding`, `anticipation_repayment`, `application_fee`, `application_fee_refund`, `charge`, `climate_order_purchase`, `climate_order_refund`, `connect_collection_transfer`, `contribution`, `issuing_authorization_hold`, `issuing_authorization_release`, `issuing_dispute`, `issuing_transaction`, `obligation_outbound`, `obligation_reversal_inbound`, `payment`, `payment_failure_refund`, `payment_network_reserve_hold`, `payment_network_reserve_release`, `payment_refund`, `payment_reversal`, `payment_unreconciled`, `payout`, `payout_cancel`, `payout_failure`, `refund`, `refund_failure`, `reserve_transaction`, `reserved_funds`, `stripe_fee`, `stripe_fx_fee`, `tax_fee`, `topup`, `topup_reversal`, `transfer`, `transfer_cancel`, `transfer_failure`, or `transfer_refund`. Learn more about [balance transaction types and what they represent](https://stripe.com/docs/reports/balance-transaction-types). To classify transactions for accounting purposes, consider `reporting_category` instead.
    */
    'type'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "amount",
            "baseName": "amount",
            "type": "number",
            "format": ""
        },
        {
            "name": "availableOn",
            "baseName": "available_on",
            "type": "number",
            "format": ""
        },
        {
            "name": "chargeId",
            "baseName": "chargeId",
            "type": "string",
            "format": ""
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "number",
            "format": ""
        },
        {
            "name": "description",
            "baseName": "description",
            "type": "string",
            "format": ""
        },
        {
            "name": "exchangeRate",
            "baseName": "exchange_rate",
            "type": "number",
            "format": ""
        },
        {
            "name": "fee",
            "baseName": "fee",
            "type": "number",
            "format": ""
        },
        {
            "name": "feeDetails",
            "baseName": "fee_details",
            "type": "Array<StripeBalanceTransactionFeeDetail>",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "net",
            "baseName": "net",
            "type": "number",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "string",
            "format": ""
        },
        {
            "name": "type",
            "baseName": "type",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return StripeBalanceTransaction.attributeTypeMap;
    }

    public constructor() {
    }
}
