/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { MeteringUsageRecord } from '../models/MeteringUsageRecord';
import { MeteringUsageRecordGroupMetaInfo } from '../models/MeteringUsageRecordGroupMetaInfo';
import { HttpFile } from '../http/http';

export class NewUsageRecordGroup {
    /**
    * for usage metering API v2, don\'t use it together with the records v1.
    */
    'billableRecords'?: Array<MeteringUsageRecord>;
    'entitlementID': string;
    /**
    * read-only, don\'t set it when validating or reporting the usage record group.
    */
    'metaInfo'?: MeteringUsageRecordGroupMetaInfo;
    /**
    * for usage metering API v1, don\'t use it together with the billableRecords v2.
    */
    'records': { [key: string]: number; };
    /**
    * The timestamp of when the usage records were generated. Optional, if not provided, the current report timestamp will be used. This is not the timestamp of when the usage records were reported to Suger.
    */
    'timestamp'?: Date;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "billableRecords",
            "baseName": "billableRecords",
            "type": "Array<MeteringUsageRecord>",
            "format": ""
        },
        {
            "name": "entitlementID",
            "baseName": "entitlementID",
            "type": "string",
            "format": ""
        },
        {
            "name": "metaInfo",
            "baseName": "metaInfo",
            "type": "MeteringUsageRecordGroupMetaInfo",
            "format": ""
        },
        {
            "name": "records",
            "baseName": "records",
            "type": "{ [key: string]: number; }",
            "format": ""
        },
        {
            "name": "timestamp",
            "baseName": "timestamp",
            "type": "Date",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return NewUsageRecordGroup.attributeTypeMap;
    }

    public constructor() {
    }
}
