/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AzureMarketplaceDeprecationSchedule } from '../models/AzureMarketplaceDeprecationSchedule';
import { AzureMarketplaceResourceLifecycleState } from '../models/AzureMarketplaceResourceLifecycleState';
import { AzureMarketplaceResourceTarget } from '../models/AzureMarketplaceResourceTarget';
import { AzureMarketplaceValidation } from '../models/AzureMarketplaceValidation';
import { HttpFile } from '../http/http';

export class AzureMarketplaceSubmission {
    'schema'?: string;
    /**
    * Date-time string
    */
    'created'?: string;
    'deprecationSchedule'?: AzureMarketplaceDeprecationSchedule;
    'id'?: string;
    'lifecycleState'?: AzureMarketplaceResourceLifecycleState;
    'product'?: string;
    'resourceName'?: string;
    'result'?: AzureMarketplaceSubmissionResultEnum;
    'status'?: AzureMarketplaceSubmissionStatusEnum;
    'target'?: AzureMarketplaceResourceTarget;
    'validations'?: Array<AzureMarketplaceValidation>;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "schema",
            "baseName": "$schema",
            "type": "string",
            "format": ""
        },
        {
            "name": "created",
            "baseName": "created",
            "type": "string",
            "format": ""
        },
        {
            "name": "deprecationSchedule",
            "baseName": "deprecationSchedule",
            "type": "AzureMarketplaceDeprecationSchedule",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "lifecycleState",
            "baseName": "lifecycleState",
            "type": "AzureMarketplaceResourceLifecycleState",
            "format": ""
        },
        {
            "name": "product",
            "baseName": "product",
            "type": "string",
            "format": ""
        },
        {
            "name": "resourceName",
            "baseName": "resourceName",
            "type": "string",
            "format": ""
        },
        {
            "name": "result",
            "baseName": "result",
            "type": "AzureMarketplaceSubmissionResultEnum",
            "format": ""
        },
        {
            "name": "status",
            "baseName": "status",
            "type": "AzureMarketplaceSubmissionStatusEnum",
            "format": ""
        },
        {
            "name": "target",
            "baseName": "target",
            "type": "AzureMarketplaceResourceTarget",
            "format": ""
        },
        {
            "name": "validations",
            "baseName": "validations",
            "type": "Array<AzureMarketplaceValidation>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return AzureMarketplaceSubmission.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum AzureMarketplaceSubmissionResultEnum {
    Succeeded = 'succeeded',
    Failed = 'failed',
    Pending = 'pending'
}
export enum AzureMarketplaceSubmissionStatusEnum {
    NotStarted = 'notStarted',
    Running = 'running',
    Completed = 'completed'
}

