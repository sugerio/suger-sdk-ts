/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class GcpMarketplacePrivateOfferCustomerInfo {
    /**
    * The address of the customer
    */
    'address'?: string;
    /**
    * The contact name of the customer
    */
    'contact'?: string;
    /**
    * The email address of the customer
    */
    'email'?: string;
    /**
    * The company name of the customer
    */
    'organization'?: string;
    /**
    * The GCP billing account ID of the customer
    */
    'unverifiedBillingAccount'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "address",
            "baseName": "address",
            "type": "string",
            "format": ""
        },
        {
            "name": "contact",
            "baseName": "contact",
            "type": "string",
            "format": ""
        },
        {
            "name": "email",
            "baseName": "email",
            "type": "string",
            "format": ""
        },
        {
            "name": "organization",
            "baseName": "organization",
            "type": "string",
            "format": ""
        },
        {
            "name": "unverifiedBillingAccount",
            "baseName": "unverifiedBillingAccount",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return GcpMarketplacePrivateOfferCustomerInfo.attributeTypeMap;
    }

    public constructor() {
    }
}
