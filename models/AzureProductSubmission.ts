/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AzurePendingUpdateInfo } from '../models/AzurePendingUpdateInfo';
import { AzureTypeValue } from '../models/AzureTypeValue';
import { AzureVariantResource } from '../models/AzureVariantResource';
import { HttpFile } from '../http/http';

export class AzureProductSubmission {
    'areResourcesReady'?: boolean;
    'friendlyName'?: string;
    'id'?: string;
    'pendingUpdateInfo'?: AzurePendingUpdateInfo;
    'publishedTimeInUtc'?: Date;
    'releaseNumber'?: number;
    'resourceType'?: AzureProductSubmissionResourceTypeEnum;
    'resources'?: Array<AzureTypeValue>;
    'state'?: AzureProductSubmissionStateEnum;
    'subState'?: AzureProductSubmissionSubStateEnum;
    'targets'?: Array<AzureTypeValue>;
    'variantResources'?: Array<AzureVariantResource>;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "areResourcesReady",
            "baseName": "areResourcesReady",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "friendlyName",
            "baseName": "friendlyName",
            "type": "string",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "pendingUpdateInfo",
            "baseName": "pendingUpdateInfo",
            "type": "AzurePendingUpdateInfo",
            "format": ""
        },
        {
            "name": "publishedTimeInUtc",
            "baseName": "publishedTimeInUtc",
            "type": "Date",
            "format": "date-time"
        },
        {
            "name": "releaseNumber",
            "baseName": "releaseNumber",
            "type": "number",
            "format": ""
        },
        {
            "name": "resourceType",
            "baseName": "resourceType",
            "type": "AzureProductSubmissionResourceTypeEnum",
            "format": ""
        },
        {
            "name": "resources",
            "baseName": "resources",
            "type": "Array<AzureTypeValue>",
            "format": ""
        },
        {
            "name": "state",
            "baseName": "state",
            "type": "AzureProductSubmissionStateEnum",
            "format": ""
        },
        {
            "name": "subState",
            "baseName": "subState",
            "type": "AzureProductSubmissionSubStateEnum",
            "format": ""
        },
        {
            "name": "targets",
            "baseName": "targets",
            "type": "Array<AzureTypeValue>",
            "format": ""
        },
        {
            "name": "variantResources",
            "baseName": "variantResources",
            "type": "Array<AzureVariantResource>",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return AzureProductSubmission.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum AzureProductSubmissionResourceTypeEnum {
    Submission = 'Submission'
}
export enum AzureProductSubmissionStateEnum {
    Inprogress = 'Inprogress',
    Published = 'Published'
}
export enum AzureProductSubmissionSubStateEnum {
    InDraft = 'InDraft',
    Submitted = 'Submitted',
    Failed = 'Failed',
    FailedInCertification = 'FailedInCertification',
    ReadyToPublish = 'ReadyToPublish',
    Publishing = 'Publishing',
    Published = 'Published',
    InStore = 'InStore'
}

