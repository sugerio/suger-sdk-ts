/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { AzureAudience } from '../models/AzureAudience';
import { AzureMarket } from '../models/AzureMarket';
import { AzureMarketState } from '../models/AzureMarketState';
import { AzureProductVariantCustomMeter } from '../models/AzureProductVariantCustomMeter';
import { AzureProductVariantPriceSchedule } from '../models/AzureProductVariantPriceSchedule';
import { AzureProductVariantTrial } from '../models/AzureProductVariantTrial';
import { AzureTypeValue } from '../models/AzureTypeValue';
import { HttpFile } from '../http/http';

export class AzureProductFeatureAvailability {
    'customMeters'?: Array<AzureProductVariantCustomMeter>;
    'id'?: string;
    'isHidden'?: boolean;
    'marketStates'?: Array<AzureMarketState>;
    'markets'?: Array<AzureMarket>;
    'priceSchedules'?: Array<AzureProductVariantPriceSchedule>;
    'properties'?: Array<AzureTypeValue>;
    /**
    * ResourceType = FeatureAvailability
    */
    'resourceType'?: string;
    'subscriptionAudiences'?: Array<AzureAudience>;
    'tenantAudiences'?: Array<AzureAudience>;
    'trial'?: AzureProductVariantTrial;
    'visibility'?: AzureProductFeatureAvailabilityVisibilityEnum;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "customMeters",
            "baseName": "customMeters",
            "type": "Array<AzureProductVariantCustomMeter>",
            "format": ""
        },
        {
            "name": "id",
            "baseName": "id",
            "type": "string",
            "format": ""
        },
        {
            "name": "isHidden",
            "baseName": "isHidden",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "marketStates",
            "baseName": "marketStates",
            "type": "Array<AzureMarketState>",
            "format": ""
        },
        {
            "name": "markets",
            "baseName": "markets",
            "type": "Array<AzureMarket>",
            "format": ""
        },
        {
            "name": "priceSchedules",
            "baseName": "priceSchedules",
            "type": "Array<AzureProductVariantPriceSchedule>",
            "format": ""
        },
        {
            "name": "properties",
            "baseName": "properties",
            "type": "Array<AzureTypeValue>",
            "format": ""
        },
        {
            "name": "resourceType",
            "baseName": "resourceType",
            "type": "string",
            "format": ""
        },
        {
            "name": "subscriptionAudiences",
            "baseName": "subscriptionAudiences",
            "type": "Array<AzureAudience>",
            "format": ""
        },
        {
            "name": "tenantAudiences",
            "baseName": "tenantAudiences",
            "type": "Array<AzureAudience>",
            "format": ""
        },
        {
            "name": "trial",
            "baseName": "trial",
            "type": "AzureProductVariantTrial",
            "format": ""
        },
        {
            "name": "visibility",
            "baseName": "visibility",
            "type": "AzureProductFeatureAvailabilityVisibilityEnum",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return AzureProductFeatureAvailability.attributeTypeMap;
    }

    public constructor() {
    }
}

export enum AzureProductFeatureAvailabilityVisibilityEnum {
    Public = 'Public',
    Private = 'Private'
}

