/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class TypesEntitlementValue {
    /**
    * The BooleanValue field will be populated with a boolean value when the entitlement is a boolean type. Otherwise, the field will not be set.
    */
    'booleanValue'?: boolean;
    /**
    * The DoubleValue field will be populated with a double value when the entitlement is a double type. Otherwise, the field will not be set.
    */
    'doubleValue'?: number;
    /**
    * The IntegerValue field will be populated with an integer value when the entitlement is an integer type. Otherwise, the field will not be set.
    */
    'integerValue'?: number;
    /**
    * The StringValue field will be populated with a string value when the entitlement is a string type. Otherwise, the field will not be set.
    */
    'stringValue'?: string;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "booleanValue",
            "baseName": "booleanValue",
            "type": "boolean",
            "format": ""
        },
        {
            "name": "doubleValue",
            "baseName": "doubleValue",
            "type": "number",
            "format": ""
        },
        {
            "name": "integerValue",
            "baseName": "integerValue",
            "type": "number",
            "format": ""
        },
        {
            "name": "stringValue",
            "baseName": "stringValue",
            "type": "string",
            "format": ""
        }    ];

    static getAttributeTypeMap() {
        return TypesEntitlementValue.attributeTypeMap;
    }

    public constructor() {
    }
}
