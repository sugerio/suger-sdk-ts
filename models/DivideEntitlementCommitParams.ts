/**
 * Suger API
 * CRUD operations on a set of resources, including organizations, products, offers, entitlements, usage record groups for meterting, etc.
 *
 * OpenAPI spec version: 1.0
 * Contact: support@suger.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { HttpFile } from '../http/http';

export class DivideEntitlementCommitParams {
    /**
    * The amount of the commit to be divided. If it is less or equal to 0.0, the total commit of the entitlement will be divided into multiple sub entitlement terms with credit.
    */
    'commitAmount'?: number;
    /**
    * The start dates of the sub entitlement terms. The end date of the last sub entitlement term is the end date of the parent entitlement term. The first start date must be the same as the start date of the parent entitlement term.
    */
    'startDates'?: Array<Date>;

    static readonly discriminator: string | undefined = undefined;

    static readonly mapping: {[index: string]: string} | undefined = undefined;

    static readonly attributeTypeMap: Array<{name: string, baseName: string, type: string, format: string}> = [
        {
            "name": "commitAmount",
            "baseName": "commitAmount",
            "type": "number",
            "format": ""
        },
        {
            "name": "startDates",
            "baseName": "startDates",
            "type": "Array<Date>",
            "format": "date-time"
        }    ];

    static getAttributeTypeMap() {
        return DivideEntitlementCommitParams.attributeTypeMap;
    }

    public constructor() {
    }
}
